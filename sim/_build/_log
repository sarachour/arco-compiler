### Starting build.
# Target: Main.ml.depends, tags: { debug, extension:ml, file:Main.ml, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamldep -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules Main.ml > Main.ml.depends # cached
# Target: solver/AST.ml.depends, tags: { debug, extension:ml, file:solver/AST.ml, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamldep -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/AST.ml > solver/AST.ml.depends # cached
# Target: solver/Globals.ml.depends, tags: { debug, extension:ml, file:solver/Globals.ml, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamldep -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/Globals.ml > solver/Globals.ml.depends # cached
# Target: solver/symcaml/SymCaml.ml.depends, tags: { debug, extension:ml, file:solver/symcaml/SymCaml.ml, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), package(yojson,extlib,core,pycaml,str), quiet, thread, traverse }
ocamlfind ocamldep -package yojson,extlib,core,pycaml,str -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/symcaml/SymCaml.ml > solver/symcaml/SymCaml.ml.depends # cached
# Target: solver/symcaml/PyCamlWrapper.ml.depends, tags: { debug, extension:ml, file:solver/symcaml/PyCamlWrapper.ml, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), package(yojson,extlib,core,pycaml,str), quiet, thread, traverse }
ocamlfind ocamldep -package yojson,extlib,core,pycaml,str -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/symcaml/PyCamlWrapper.ml > solver/symcaml/PyCamlWrapper.ml.depends # cached
# Target: solver/symcaml/SymCamlData.ml.depends, tags: { debug, extension:ml, file:solver/symcaml/SymCamlData.ml, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), package(yojson,extlib,core,pycaml,str), quiet, thread, traverse }
ocamlfind ocamldep -package yojson,extlib,core,pycaml,str -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/symcaml/SymCamlData.ml > solver/symcaml/SymCamlData.ml.depends # cached
# Target: solver/symcaml/SymCamlData.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:solver/symcaml/SymCamlData.cmo, file:solver/symcaml/SymCamlData.ml, implem, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), package(yojson,extlib,core,pycaml,str), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package yojson,extlib,core,pycaml,str -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver/symcaml -I solver -o solver/symcaml/SymCamlData.cmo solver/symcaml/SymCamlData.ml
# Target: solver/symcaml/SymCamlLexer.mll, tags: { debug, extension:mll, file:solver/symcaml/SymCamlLexer.mll, lexer, ocaml, ocamllex, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), package(yojson,extlib,core,pycaml,str), quiet, thread, traverse }
/usr/bin/ocamllex.opt -q solver/symcaml/SymCamlLexer.mll # cached
# Target: solver/symcaml/SymCamlLexer.ml.depends, tags: { debug, extension:ml, file:solver/symcaml/SymCamlLexer.ml, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), package(yojson,extlib,core,pycaml,str), quiet, thread, traverse }
ocamlfind ocamldep -package yojson,extlib,core,pycaml,str -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/symcaml/SymCamlLexer.ml > solver/symcaml/SymCamlLexer.ml.depends # cached
# Target: solver/symcaml/SymCamlParser.mly.depends, tags: { debug, extension:mly, file:solver/symcaml/SymCamlParser.mly, infer, menhir_ocamldep, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), package(yojson,extlib,core,pycaml,str), quiet, thread, traverse }
menhir --infer --explain --raw-depend --ocamldep 'ocamlfind ocamldep -modules' solver/symcaml/SymCamlParser.mly > solver/symcaml/SymCamlParser.mly.depends # cached
# Target: solver/symcaml/SymCamlParser.mly, tags: { byte, compile, debug, extension:ml, extension:mly, file:solver/symcaml/SymCamlParser.ml, file:solver/symcaml/SymCamlParser.mly, infer, menhir, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), package(yojson,extlib,core,pycaml,str), parser, quiet, thread, traverse }
menhir --infer --explain --ocamlc 'ocamlfind ocamlc -g -g -thread -package yojson,extlib,core,pycaml,str -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver/symcaml -I solver' --infer solver/symcaml/SymCamlParser.mly
+ menhir --infer --explain --ocamlc 'ocamlfind ocamlc -g -g -thread -package yojson,extlib,core,pycaml,str -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver/symcaml -I solver' --infer solver/symcaml/SymCamlParser.mly
File "solver/symcaml/SymCamlParser.mly", line 15, characters 27-30:
Warning: the token EOF is unused.
# Target: solver/symcaml/SymCamlParser.mli.depends, tags: { debug, extension:mli, file:solver/symcaml/SymCamlParser.mli, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), package(yojson,extlib,core,pycaml,str), quiet, thread, traverse }
ocamlfind ocamldep -package yojson,extlib,core,pycaml,str -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/symcaml/SymCamlParser.mli > solver/symcaml/SymCamlParser.mli.depends # cached
# Target: solver/symcaml/SymCamlParser.cmi, tags: { byte, compile, debug, extension:mli, file:solver/symcaml/SymCamlParser.mli, interf, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), package(yojson,extlib,core,pycaml,str), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package yojson,extlib,core,pycaml,str -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver/symcaml -I solver -o solver/symcaml/SymCamlParser.cmi solver/symcaml/SymCamlParser.mli
# Target: solver/symcaml/PyCamlWrapper.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:solver/symcaml/PyCamlWrapper.cmo, file:solver/symcaml/PyCamlWrapper.ml, implem, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), package(yojson,extlib,core,pycaml,str), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package yojson,extlib,core,pycaml,str -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver/symcaml -I solver -o solver/symcaml/PyCamlWrapper.cmo solver/symcaml/PyCamlWrapper.ml
+ ocamlfind ocamlc -c -g -g -thread -package yojson,extlib,core,pycaml,str -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver/symcaml -I solver -o solver/symcaml/PyCamlWrapper.cmo solver/symcaml/PyCamlWrapper.ml
File "solver/symcaml/PyCamlWrapper.ml", line 70, characters 18-20:
Warning 3: deprecated: Pervasives.or
Use (||) instead.
File "solver/symcaml/PyCamlWrapper.ml", line 45, characters 13-16:
Warning 26: unused variable typ.
File "solver/symcaml/PyCamlWrapper.ml", line 46, characters 13-18:
Warning 26: unused variable value.
File "solver/symcaml/PyCamlWrapper.ml", line 47, characters 13-18:
Warning 26: unused variable trace.
File "solver/symcaml/PyCamlWrapper.ml", line 158, characters 10-20:
Warning 26: unused variable modulename.
# Target: solver/symcaml/SymCamlLexer.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:solver/symcaml/SymCamlLexer.cmo, file:solver/symcaml/SymCamlLexer.ml, implem, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), package(yojson,extlib,core,pycaml,str), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package yojson,extlib,core,pycaml,str -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver/symcaml -I solver -o solver/symcaml/SymCamlLexer.cmo solver/symcaml/SymCamlLexer.ml
# Target: solver/Util.ml.depends, tags: { debug, extension:ml, file:solver/Util.ml, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamldep -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/Util.ml > solver/Util.ml.depends # cached
# Target: solver/Globals.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:solver/Globals.cmo, file:solver/Globals.ml, implem, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/Globals.cmo solver/Globals.ml
# Target: solver/symcaml/SymCaml.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:solver/symcaml/SymCaml.cmo, file:solver/symcaml/SymCaml.ml, implem, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), package(yojson,extlib,core,pycaml,str), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package yojson,extlib,core,pycaml,str -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver/symcaml -I solver -o solver/symcaml/SymCaml.cmo solver/symcaml/SymCaml.ml
# Target: solver/Util.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:solver/Util.cmo, file:solver/Util.ml, implem, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/Util.cmo solver/Util.ml
+ ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/Util.cmo solver/Util.ml
File "solver/Util.ml", line 363, characters 24-31:
Warning 10: this expression should have type unit.
# Target: solver/Compile.ml.depends, tags: { debug, extension:ml, file:solver/Compile.ml, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamldep -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/Compile.ml > solver/Compile.ml.depends # cached
# Target: solver/AST.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:solver/AST.cmo, file:solver/AST.ml, implem, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/AST.cmo solver/AST.ml
+ ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/AST.cmo solver/AST.ml
File "solver/AST.ml", line 89, characters 6-456:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
Acc (_, _)
File "solver/AST.ml", line 108, characters 10-712:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
Acc (_, _)
File "solver/AST.ml", line 214, characters 44-121:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
Func _
File "solver/AST.ml", line 219, characters 33-688:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
Acc (_, _)
File "solver/AST.ml", line 235, characters 45-98:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(Paren|Cos|Sin|Tan|Deriv _|Integral _)
File "solver/AST.ml", line 239, characters 44-96:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
Eq
File "solver/AST.ml", line 243, characters 44-115:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
Function _
File "solver/AST.ml", line 334, characters 20-61:
Warning 10: this expression should have type unit.
File "solver/AST.ml", line 172, characters 10-22:
Warning 11: this match case is unused.
# Target: solver/CompileUtil.ml.depends, tags: { debug, extension:ml, file:solver/CompileUtil.ml, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamldep -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/CompileUtil.ml > solver/CompileUtil.ml.depends # cached
# Target: solver/LexAST.mll, tags: { debug, extension:mll, file:solver/LexAST.mll, lexer, ocaml, ocamllex, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
/usr/bin/ocamllex.opt -q solver/LexAST.mll # cached
# Target: solver/LexAST.ml.depends, tags: { debug, extension:ml, file:solver/LexAST.ml, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamldep -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/LexAST.ml > solver/LexAST.ml.depends # cached
# Target: solver/ParseAST.mly.depends, tags: { debug, extension:mly, file:solver/ParseAST.mly, infer, menhir_ocamldep, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
menhir --infer --explain --raw-depend --ocamldep 'ocamlfind ocamldep -modules' solver/ParseAST.mly > solver/ParseAST.mly.depends # cached
# Target: solver/ParseAST.mly, tags: { byte, compile, debug, extension:ml, extension:mly, file:solver/ParseAST.ml, file:solver/ParseAST.mly, infer, menhir, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), parser, quiet, thread, traverse }
menhir --infer --explain --ocamlc 'ocamlfind ocamlc -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml' --infer solver/ParseAST.mly
+ menhir --infer --explain --ocamlc 'ocamlfind ocamlc -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml' --infer solver/ParseAST.mly
Warning: 8 states have shift/reduce conflicts.
Warning: 10 states have reduce/reduce conflicts.
Warning: 16 shift/reduce conflicts were arbitrarily resolved.
Warning: 35 reduce/reduce conflicts were arbitrarily resolved.
# Target: solver/ParseAST.mli.depends, tags: { debug, extension:mli, file:solver/ParseAST.mli, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamldep -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/ParseAST.mli > solver/ParseAST.mli.depends # cached
# Target: solver/ParseAST.cmi, tags: { byte, compile, debug, extension:mli, file:solver/ParseAST.mli, interf, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/ParseAST.cmi solver/ParseAST.mli
# Target: solver/LexAST.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:solver/LexAST.cmo, file:solver/LexAST.ml, implem, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/LexAST.cmo solver/LexAST.ml
# Target: solver/HW.ml.depends, tags: { debug, extension:ml, file:solver/HW.ml, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamldep -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/HW.ml > solver/HW.ml.depends # cached
# Target: solver/Common.ml.depends, tags: { debug, extension:ml, file:solver/Common.ml, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamldep -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/Common.ml > solver/Common.ml.depends # cached
# Target: solver/HWCstr.ml.depends, tags: { debug, extension:ml, file:solver/HWCstr.ml, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamldep -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/HWCstr.ml > solver/HWCstr.ml.depends # cached
# Target: solver/Common.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:solver/Common.cmo, file:solver/Common.ml, implem, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/Common.cmo solver/Common.ml
# Target: solver/HWData.ml.depends, tags: { debug, extension:ml, file:solver/HWData.ml, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamldep -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/HWData.ml > solver/HWData.ml.depends # cached
# Target: solver/Unit.ml.depends, tags: { debug, extension:ml, file:solver/Unit.ml, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamldep -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/Unit.ml > solver/Unit.ml.depends # cached
# Target: solver/Unit.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:solver/Unit.cmo, file:solver/Unit.ml, implem, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/Unit.cmo solver/Unit.ml
# Target: solver/HWData.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:solver/HWData.cmo, file:solver/HWData.ml, implem, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/HWData.cmo solver/HWData.ml
# Target: solver/HWCstr.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:solver/HWCstr.cmo, file:solver/HWCstr.ml, implem, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/HWCstr.cmo solver/HWCstr.ml
# Target: solver/LexHW.mll, tags: { debug, extension:mll, file:solver/LexHW.mll, lexer, ocaml, ocamllex, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
/usr/bin/ocamllex.opt -q solver/LexHW.mll # cached
# Target: solver/LexHW.ml.depends, tags: { debug, extension:ml, file:solver/LexHW.ml, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamldep -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/LexHW.ml > solver/LexHW.ml.depends # cached
# Target: solver/ParseHW.mly.depends, tags: { debug, extension:mly, file:solver/ParseHW.mly, infer, menhir_ocamldep, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
menhir --infer --explain --raw-depend --ocamldep 'ocamlfind ocamldep -modules' solver/ParseHW.mly > solver/ParseHW.mly.depends # cached
# Target: solver/CompileUtil.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:solver/CompileUtil.cmo, file:solver/CompileUtil.ml, implem, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/CompileUtil.cmo solver/CompileUtil.ml
# Target: solver/HW.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:solver/HW.cmo, file:solver/HW.ml, implem, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/HW.cmo solver/HW.ml
+ ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/HW.cmo solver/HW.ml
File "solver/HW.ml", line 27, characters 25-27:
Warning 14: illegal backslash escape in string.
# Target: solver/ParseHW.mly, tags: { byte, compile, debug, extension:ml, extension:mly, file:solver/ParseHW.ml, file:solver/ParseHW.mly, infer, menhir, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), parser, quiet, thread, traverse }
menhir --infer --explain --ocamlc 'ocamlfind ocamlc -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml' --infer solver/ParseHW.mly
+ menhir --infer --explain --ocamlc 'ocamlfind ocamlc -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml' --infer solver/ParseHW.mly
File "solver/ParseHW.mly", line 138, characters 16-22:
Warning: the token STRING is unused.
File "solver/ParseHW.mly", line 373, characters 4-195:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(Acc (_, _)|OpN (_, _)|Op2 (_, _, _)|Op1 (_, _)|Deriv (_, _)|Decimal _|
Integer _)
# Target: solver/ParseHW.mli.depends, tags: { debug, extension:mli, file:solver/ParseHW.mli, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamldep -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/ParseHW.mli > solver/ParseHW.mli.depends # cached
# Target: solver/ParseHW.cmi, tags: { byte, compile, debug, extension:mli, file:solver/ParseHW.mli, interf, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/ParseHW.cmi solver/ParseHW.mli
# Target: solver/LexMath.mll, tags: { debug, extension:mll, file:solver/LexMath.mll, lexer, ocaml, ocamllex, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
/usr/bin/ocamllex.opt -q solver/LexMath.mll # cached
# Target: solver/LexMath.ml.depends, tags: { debug, extension:ml, file:solver/LexMath.ml, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamldep -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/LexMath.ml > solver/LexMath.ml.depends # cached
# Target: solver/ParseMath.mly.depends, tags: { debug, extension:mly, file:solver/ParseMath.mly, infer, menhir_ocamldep, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
menhir --infer --explain --raw-depend --ocamldep 'ocamlfind ocamldep -modules' solver/ParseMath.mly > solver/ParseMath.mly.depends # cached
# Target: solver/Math.ml.depends, tags: { debug, extension:ml, file:solver/Math.ml, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamldep -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/Math.ml > solver/Math.ml.depends # cached
# Target: solver/MathCstr.ml.depends, tags: { debug, extension:ml, file:solver/MathCstr.ml, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamldep -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/MathCstr.ml > solver/MathCstr.ml.depends # cached
# Target: solver/MathCstr.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:solver/MathCstr.cmo, file:solver/MathCstr.ml, implem, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/MathCstr.cmo solver/MathCstr.ml
# Target: solver/Math.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:solver/Math.cmo, file:solver/Math.ml, implem, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/Math.cmo solver/Math.ml
+ ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/Math.cmo solver/Math.ml
File "solver/Math.ml", line 74, characters 34-247:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
MRState (_, _, (MNVar (_, _, _)|MNTime _))
File "solver/Math.ml", line 171, characters 14-16:
Warning 26: unused variable lk.
File "solver/Math.ml", line 172, characters 14-17:
Warning 26: unused variable lhs.
# Target: solver/ParseMath.mly, tags: { byte, compile, debug, extension:ml, extension:mly, file:solver/ParseMath.ml, file:solver/ParseMath.mly, infer, menhir, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), parser, quiet, thread, traverse }
menhir --infer --explain --ocamlc 'ocamlfind ocamlc -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml' --infer solver/ParseMath.mly
+ menhir --infer --explain --ocamlc 'ocamlfind ocamlc -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml' --infer solver/ParseMath.mly
File "solver/ParseMath.mly", line 72, characters 0-7:
Warning: symbol errexpr is unreachable from any of the start symbol(s).
File "solver/ParseMath.mly", line 200, characters 4-31:
Warning 10: this expression should have type unit.
File "solver/ParseMath.mly", line 194, characters 4-35:
Warning 10: this expression should have type unit.
File "solver/ParseMath.mly", line 187, characters 4-34:
Warning 10: this expression should have type unit.
File "solver/ParseMath.mly", line 180, characters 4-34:
Warning 10: this expression should have type unit.
File "solver/ParseMath.mly", line 173, characters 4-34:
Warning 10: this expression should have type unit.
# Target: solver/ParseMath.mli.depends, tags: { debug, extension:mli, file:solver/ParseMath.mli, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamldep -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/ParseMath.mli > solver/ParseMath.mli.depends # cached
# Target: solver/ParseMath.cmi, tags: { byte, compile, debug, extension:mli, file:solver/ParseMath.mli, interf, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/ParseMath.cmi solver/ParseMath.mli
# Target: solver/LexZ3.mll, tags: { debug, extension:mll, file:solver/LexZ3.mll, lexer, ocaml, ocamllex, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
/usr/bin/ocamllex.opt -q solver/LexZ3.mll # cached
# Target: solver/LexZ3.ml.depends, tags: { debug, extension:ml, file:solver/LexZ3.ml, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamldep -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/LexZ3.ml > solver/LexZ3.ml.depends # cached
# Target: solver/ParseZ3.mly.depends, tags: { debug, extension:mly, file:solver/ParseZ3.mly, infer, menhir_ocamldep, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
menhir --infer --explain --raw-depend --ocamldep 'ocamlfind ocamldep -modules' solver/ParseZ3.mly > solver/ParseZ3.mly.depends # cached
# Target: solver/Z3Data.ml.depends, tags: { debug, extension:ml, file:solver/Z3Data.ml, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamldep -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/Z3Data.ml > solver/Z3Data.ml.depends # cached
# Target: solver/Z3Data.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:solver/Z3Data.cmo, file:solver/Z3Data.ml, implem, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/Z3Data.cmo solver/Z3Data.ml
# Target: solver/ParseZ3.mly, tags: { byte, compile, debug, extension:ml, extension:mly, file:solver/ParseZ3.ml, file:solver/ParseZ3.mly, infer, menhir, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), parser, quiet, thread, traverse }
menhir --infer --explain --ocamlc 'ocamlfind ocamlc -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml' --infer solver/ParseZ3.mly
+ menhir --infer --explain --ocamlc 'ocamlfind ocamlc -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml' --infer solver/ParseZ3.mly
File "solver/ParseZ3.mly", line 16, characters 11-14:
Warning: the token EOL is unused.
# Target: solver/ParseZ3.mli.depends, tags: { debug, extension:mli, file:solver/ParseZ3.mli, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamldep -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/ParseZ3.mli > solver/ParseZ3.mli.depends # cached
# Target: solver/ParseZ3.cmi, tags: { byte, compile, debug, extension:mli, file:solver/ParseZ3.mli, interf, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/ParseZ3.cmi solver/ParseZ3.mli
# Target: solver/LexHW.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:solver/LexHW.cmo, file:solver/LexHW.ml, implem, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/LexHW.cmo solver/LexHW.ml
# Target: solver/LexMath.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:solver/LexMath.cmo, file:solver/LexMath.ml, implem, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/LexMath.cmo solver/LexMath.ml
# Target: solver/LexZ3.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:solver/LexZ3.cmo, file:solver/LexZ3.ml, implem, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/LexZ3.cmo solver/LexZ3.ml
# Target: solver/Logic.ml.depends, tags: { debug, extension:ml, file:solver/Logic.ml, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamldep -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/Logic.ml > solver/Logic.ml.depends # cached
# Target: solver/Solver.ml.depends, tags: { debug, extension:ml, file:solver/Solver.ml, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamldep -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/Solver.ml > solver/Solver.ml.depends # cached
# Target: solver/Interactive.ml.depends, tags: { debug, extension:ml, file:solver/Interactive.ml, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamldep -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/Interactive.ml > solver/Interactive.ml.depends # cached
# Target: solver/SolverData.ml.depends, tags: { debug, extension:ml, file:solver/SolverData.ml, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamldep -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/SolverData.ml > solver/SolverData.ml.depends # cached
# Target: solver/SolverData.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:solver/SolverData.cmo, file:solver/SolverData.ml, implem, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/SolverData.cmo solver/SolverData.ml
# Target: solver/SolverRslv.ml.depends, tags: { debug, extension:ml, file:solver/SolverRslv.ml, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamldep -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/SolverRslv.ml > solver/SolverRslv.ml.depends # cached
# Target: solver/SolverUtil.ml.depends, tags: { debug, extension:ml, file:solver/SolverUtil.ml, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamldep -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/SolverUtil.ml > solver/SolverUtil.ml.depends # cached
# Target: solver/Z3Lib.ml.depends, tags: { debug, extension:ml, file:solver/Z3Lib.ml, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamldep -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/Z3Lib.ml > solver/Z3Lib.ml.depends # cached
# Target: solver/Compile.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:solver/Compile.cmo, file:solver/Compile.ml, implem, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/Compile.cmo solver/Compile.ml
# Target: solver/SolverUtil.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:solver/SolverUtil.cmo, file:solver/SolverUtil.ml, implem, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/SolverUtil.cmo solver/SolverUtil.ml
+ ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/SolverUtil.cmo solver/SolverUtil.ml
File "solver/SolverUtil.ml", line 140, characters 4-31:
Warning 11: this match case is unused.
File "solver/SolverUtil.ml", line 253, characters 6-8:
Warning 26: unused variable nr.
# Target: solver/Z3Lib.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:solver/Z3Lib.cmo, file:solver/Z3Lib.ml, implem, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/Z3Lib.cmo solver/Z3Lib.ml
+ ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/Z3Lib.cmo solver/Z3Lib.ml
File "solver/Z3Lib.ml", line 27, characters 6-7:
Warning 11: this match case is unused.
File "solver/Z3Lib.ml", line 98, characters 6-7:
Warning 11: this match case is unused.
# Target: solver/SolverSearch.ml.depends, tags: { debug, extension:ml, file:solver/SolverSearch.ml, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamldep -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/SolverSearch.ml > solver/SolverSearch.ml.depends # cached
# Target: solver/SolverSln.ml.depends, tags: { debug, extension:ml, file:solver/SolverSln.ml, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamldep -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/SolverSln.ml > solver/SolverSln.ml.depends # cached
# Target: solver/SolverRslv.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:solver/SolverRslv.cmo, file:solver/SolverRslv.ml, implem, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/SolverRslv.cmo solver/SolverRslv.ml
+ ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/SolverRslv.cmo solver/SolverRslv.ml
File "solver/SolverRslv.ml", line 35, characters 4-392:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
[]
File "solver/SolverRslv.ml", line 184, characters 10-15:
Warning 26: unused variable decls.
# Target: solver/SolverSln.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:solver/SolverSln.cmo, file:solver/SolverSln.ml, implem, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/SolverSln.cmo solver/SolverSln.ml
# Target: solver/SpiceLib.ml.depends, tags: { debug, extension:ml, file:solver/SpiceLib.ml, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamldep -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/SpiceLib.ml > solver/SpiceLib.ml.depends # cached
# Target: solver/Interactive.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:solver/Interactive.cmo, file:solver/Interactive.ml, implem, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/Interactive.cmo solver/Interactive.ml
# Target: solver/SolverSearch.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:solver/SolverSearch.cmo, file:solver/SolverSearch.ml, implem, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/SolverSearch.cmo solver/SolverSearch.ml
+ ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/SolverSearch.cmo solver/SolverSearch.ml
File "solver/SolverSearch.ml", line 62, characters 4-5:
Warning 11: this match case is unused.
# Target: solver/SpiceLib.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:solver/SpiceLib.cmo, file:solver/SpiceLib.ml, implem, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/SpiceLib.cmo solver/SpiceLib.ml
+ ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/SpiceLib.cmo solver/SpiceLib.ml
File "solver/SpiceLib.ml", line 145, characters 10-12:
Warning 26: unused variable id.
# Target: solver/Sym.ml.depends, tags: { debug, extension:ml, file:solver/Sym.ml, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamldep -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/Sym.ml > solver/Sym.ml.depends # cached
# Target: solver/Logic.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:solver/Logic.cmo, file:solver/Logic.ml, implem, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/Logic.cmo solver/Logic.ml
# Target: solver/Solver.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:solver/Solver.cmo, file:solver/Solver.ml, implem, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/Solver.cmo solver/Solver.ml
+ ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/Solver.cmo solver/Solver.ml
File "solver/Solver.ml", line 176, characters 2-5:
Warning 1: this is the start of a comment.
File "solver/Solver.ml", line 694, characters 8-11:
Warning 1: this is the start of a comment.
File "solver/Solver.ml", line 974, characters 2-4:
Warning 20: this argument will not be used by the function.
File "solver/Solver.ml", line 171, characters 6-7:
Warning 11: this match case is unused.
File "solver/Solver.ml", line 282, characters 12-14:
Warning 26: unused variable tc.
File "solver/Solver.ml", line 285, characters 12-14:
Warning 26: unused variable tc.
File "solver/Solver.ml", line 395, characters 10-16:
Warning 26: unused variable mksubs.
File "solver/Solver.ml", line 419, characters 12-15:
Warning 26: unused variable snl.
File "solver/Solver.ml", line 426, characters 12-15:
Warning 26: unused variable snl.
File "solver/Solver.ml", line 812, characters 15-19:
Warning 26: unused variable musr.
File "solver/Solver.ml", line 812, characters 10-14:
Warning 26: unused variable mint.
File "solver/Solver.ml", line 824, characters 19-23:
Warning 26: unused variable musr.
File "solver/Solver.ml", line 824, characters 14-18:
Warning 26: unused variable mint.
# Target: solver/Sym.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:solver/Sym.cmo, file:solver/Sym.ml, implem, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/Sym.cmo solver/Sym.ml
# Target: Main.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:Main.cmo, file:Main.ml, implem, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o Main.cmo Main.ml
# Target: solver/symcaml/SymCamlParser.ml.depends, tags: { debug, extension:ml, file:solver/symcaml/SymCamlParser.ml, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), package(yojson,extlib,core,pycaml,str), quiet, thread, traverse }
ocamlfind ocamldep -package yojson,extlib,core,pycaml,str -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/symcaml/SymCamlParser.ml > solver/symcaml/SymCamlParser.ml.depends # cached
# Target: solver/symcaml/SymCamlParser.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:solver/symcaml/SymCamlParser.cmo, file:solver/symcaml/SymCamlParser.ml, implem, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), package(yojson,extlib,core,pycaml,str), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package yojson,extlib,core,pycaml,str -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver/symcaml -I solver -o solver/symcaml/SymCamlParser.cmo solver/symcaml/SymCamlParser.ml
# Target: solver/ParseAST.ml.depends, tags: { debug, extension:ml, file:solver/ParseAST.ml, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamldep -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/ParseAST.ml > solver/ParseAST.ml.depends # cached
# Target: solver/ParseHW.ml.depends, tags: { debug, extension:ml, file:solver/ParseHW.ml, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamldep -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/ParseHW.ml > solver/ParseHW.ml.depends # cached
# Target: solver/ParseMath.ml.depends, tags: { debug, extension:ml, file:solver/ParseMath.ml, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamldep -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/ParseMath.ml > solver/ParseMath.ml.depends # cached
# Target: solver/ParseZ3.ml.depends, tags: { debug, extension:ml, file:solver/ParseZ3.ml, ocaml, ocamldep, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamldep -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -modules solver/ParseZ3.ml > solver/ParseZ3.ml.depends # cached
# Target: solver/ParseAST.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:solver/ParseAST.cmo, file:solver/ParseAST.ml, implem, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/ParseAST.cmo solver/ParseAST.ml
# Target: solver/ParseHW.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:solver/ParseHW.cmo, file:solver/ParseHW.ml, implem, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/ParseHW.cmo solver/ParseHW.ml
+ ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/ParseHW.cmo solver/ParseHW.ml
File "solver/ParseHW.ml", line 1862, characters 4-195:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(Acc (_, _)|OpN (_, _)|Op2 (_, _, _)|Op1 (_, _)|Deriv (_, _)|Decimal _|
Integer _)
File "solver/ParseHW.ml", line 142, characters 8-17:
Warning 26: unused variable all_comps.
File "solver/ParseHW.ml", line 143, characters 8-17:
Warning 26: unused variable all_ports.
File "solver/ParseHW.ml", line 154, characters 10-14:
Warning 26: unused variable cstr.
File "solver/ParseHW.ml", line 645, characters 34-37:
Warning 26: unused variable typ.
File "solver/ParseHW.ml", line 695, characters 34-37:
Warning 26: unused variable typ.
File "solver/ParseHW.ml", line 721, characters 49-52:
Warning 26: unused variable typ.
File "solver/ParseHW.ml", line 1242, characters 4-5:
Warning 11: this match case is unused.
# Target: solver/ParseMath.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:solver/ParseMath.cmo, file:solver/ParseMath.ml, implem, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/ParseMath.cmo solver/ParseMath.ml
+ ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/ParseMath.cmo solver/ParseMath.ml
File "solver/ParseMath.ml", line 191, characters 4-31:
Warning 10: this expression should have type unit.
File "solver/ParseMath.ml", line 239, characters 4-34:
Warning 10: this expression should have type unit.
File "solver/ParseMath.ml", line 263, characters 4-34:
Warning 10: this expression should have type unit.
File "solver/ParseMath.ml", line 287, characters 4-34:
Warning 10: this expression should have type unit.
File "solver/ParseMath.ml", line 479, characters 4-35:
Warning 10: this expression should have type unit.
File "solver/ParseMath.ml", line 330, characters 25-26:
Warning 26: unused variable t.
File "solver/ParseMath.ml", line 374, characters 25-26:
Warning 26: unused variable t.
File "solver/ParseMath.ml", line 449, characters 23-26:
Warning 26: unused variable lbr.
File "solver/ParseMath.ml", line 449, characters 36-39:
Warning 26: unused variable rbr.
# Target: solver/ParseZ3.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:solver/ParseZ3.cmo, file:solver/ParseZ3.ml, implem, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), quiet, thread, traverse }
ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/ParseZ3.cmo solver/ParseZ3.ml
+ ocamlfind ocamlc -c -g -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay -I solver -I solver/symcaml -o solver/ParseZ3.cmo solver/ParseZ3.ml
File "solver/ParseZ3.ml", line 245, characters 8-9:
Warning 26: unused variable n.
File "solver/ParseZ3.ml", line 246, characters 8-9:
Warning 26: unused variable v.
File "solver/ParseZ3.ml", line 279, characters 8-9:
Warning 26: unused variable n.
File "solver/ParseZ3.ml", line 280, characters 8-9:
Warning 26: unused variable v.
# Target: Main.byte, tags: { byte, debug, dont_link_with, extension:byte, file:Main.byte, link, ocaml, package(threads,core,pycaml,str,camlp4,Z3,Z3overlay), program, quiet, thread, traverse }
ocamlfind ocamlc -linkpkg -g -thread -package threads,core,pycaml,str,camlp4,Z3,Z3overlay solver/Globals.cmo solver/Util.cmo solver/symcaml/SymCamlData.cmo solver/symcaml/PyCamlWrapper.cmo solver/symcaml/SymCamlParser.cmo solver/symcaml/SymCamlLexer.cmo solver/symcaml/SymCaml.cmo solver/AST.cmo solver/ParseAST.cmo solver/LexAST.cmo solver/CompileUtil.cmo solver/Common.cmo solver/Unit.cmo solver/HWData.cmo solver/HWCstr.cmo solver/HW.cmo solver/ParseHW.cmo solver/LexHW.cmo solver/MathCstr.cmo solver/Math.cmo solver/ParseMath.cmo solver/LexMath.cmo solver/Z3Data.cmo solver/ParseZ3.cmo solver/LexZ3.cmo solver/Compile.cmo solver/Logic.cmo solver/SolverData.cmo solver/Interactive.cmo solver/SolverUtil.cmo solver/Z3Lib.cmo solver/SolverRslv.cmo solver/SolverSln.cmo solver/SolverSearch.cmo solver/SpiceLib.cmo solver/Solver.cmo solver/Sym.cmo Main.cmo -o Main.byte
# Compilation successful.
