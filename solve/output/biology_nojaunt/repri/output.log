==== Loaded Config File (benchmarks/biology_nojaunt/configs/prod.cfg) ====
bool enable-jaunt false
int multi-num-global-solutions 1
bool eqn-use-map-heuristic true
int slvr-solutions 1
string multi-selector-branch solved-and-ncomps
int multi-num-global-solutions-per-partial 1
int slvr-partial-depth 15
int interactive 0
int eqn-unifications 12
int multi-num-partial-solutions 1
int map-infer-feasible-timeout 60
int slvr-global-depth 30
int debug 2
string eqn-selector-goal trivial
int z3-minimize-depth 4
int uast-depth 5
string uast-selector-branch uniform
bool _force false
string z3-minimize-strategy binary
string eqn-selector-branch goals
=================================
======== Infer Math Vars =============
derive: TRTetR -> [0.491815384615,0.4995]
derive: TetRm -> [-4.02313455028,0.5]
derive: TRLacL -> [0.491815384615,0.4995]
derive: TRclp -> [0.491815384615,0.4995]
derive: LacLp -> [-0.1505149978,90.3089986992]
derive: LacLm -> [-4.02313455028,0.5]
derive: clm -> [-4.02313455028,0.5]
derive: clp -> [-0.1505149978,90.3089986992]
derive: TetRp -> [-0.1505149978,90.3089986992]
inference hw vars
-> derived [0.,5000.] -> P
-> derived [0.,10.] -> PROD
-> derived [0.,3300.] -> Y
-> derived [0.,10.] -> REP2
-> derived [0.,1.] -> Y
-> derived [0.,80000.] -> REP
-> derived [0.,1000000.] -> STIM
-> derived [0.,10.] -> Y
-> derived {[-825.,1650.] [0.,1650.] [-825.,825.] [0.,825.] } -> OUT
-> derived [0.,10.] -> Y
-> derived [-5.,10.] -> OUT
-> derived [0.,10.] -> GE
==== Units ====
==== Vars =====
> MAKE vgain
input(<vgain,X>)
cover
input(<vgain,Z>)
cover
output(<vgain,P>)
cover
>
>
offset(<vgain,X>)=0
offset(<vgain,Z>)=0
ve(scale(<vgain,P>)=scale(<vgain,X>)*scale(<vgain,Z>))
offset(<vgain,P>)=0
>>> # Partitions vgain=3
> MAKE switch
input(<switch,n>)
cover
input(<switch,SUB>)
cover
input(<switch,Kmod>)
cover
input(<switch,Vmax>)
cover
output(<switch,PROD>)
cover
>
>
offset(<switch,SUB>)=0
offset(<switch,Kmod>)=0
ee(scale(<switch,Kmod>)^-1*scale(<switch,SUB>)=scale(<switch,Kmod>)^-1*scale(<switch,SUB>))
ee(1=scale(<switch,Kmod>)^-1*scale(<switch,SUB>))
ee(scale(<switch,Kmod>)^-1*scale(<switch,SUB>)=1)
ee(1=1)
>
offset(<switch,n>)=0
valid
ec(0+0=0)
valid
ec(scale(<switch,n>)/1=1)
valid
valid
>
offset(<switch,Vmax>)=0
valid
ve(scale(<switch,PROD>)=1/1^(switch.V{n}:/500.)*scale(<switch,Vmax>))
offset(<switch,PROD>)=0
>>> # Partitions switch=4
> MAKE ihill_stim
input(<ihill_stim,n>)
cover
input(<ihill_stim,S>)
cover
input(<ihill_stim,Km>)
cover
input(<ihill_stim,Vmax>)
cover
output(<ihill_stim,STIM>)
cover
>
>
offset(<ihill_stim,S>)=0
offset(<ihill_stim,Km>)=0
>
valid
offset(<ihill_stim,n>)=0
scale(<ihill_stim,n>)=1
>
>
offset(<ihill_stim,S>)=0
offset(<ihill_stim,Km>)=0
>
valid
offset(<ihill_stim,n>)=0
scale(<ihill_stim,n>)=1
ee(scale(<ihill_stim,S>)/scale(<ihill_stim,Km>)^ihill_stim.V{n}:=scale(<ihill_stim,S>)/scale(<ihill_stim,Km>)^ihill_stim.V{n}:)
ee(1=scale(<ihill_stim,S>)/scale(<ihill_stim,Km>)^ihill_stim.V{n}:)
ee(scale(<ihill_stim,S>)/scale(<ihill_stim,Km>)^ihill_stim.V{n}:=1)
ee(1=1)
valid
ec(0+0=0)
>
ve(scale(<ihill_stim,STIM>)=scale(<ihill_stim,Vmax>)*scale(<ihill_stim,S>)/scale(<ihill_stim,Km>)^ihill_stim.V{n}:/1)
offset(<ihill_stim,STIM>)=0
>>> # Partitions ihill_stim=4
> MAKE ihill_rep
input(<ihill_rep,n>)
cover
input(<ihill_rep,S>)
cover
input(<ihill_rep,Km>)
cover
input(<ihill_rep,Vmax>)
cover
output(<ihill_rep,REP>)
cover
>
>
offset(<ihill_rep,Km>)=0
offset(<ihill_rep,n>)=0
scale(<ihill_rep,n>)=1
>
>
offset(<ihill_rep,S>)=0
offset(<ihill_rep,n>)=0
scale(<ihill_rep,n>)=1
>
>
offset(<ihill_rep,Km>)=0
offset(<ihill_rep,n>)=0
scale(<ihill_rep,n>)=1
ee(scale(<ihill_rep,Km>)^ihill_rep.V{n}:=scale(<ihill_rep,Km>)^ihill_rep.V{n}:)
ee(scale(<ihill_rep,S>)^ihill_rep.V{n}:=scale(<ihill_rep,Km>)^ihill_rep.V{n}:)
ee(scale(<ihill_rep,Km>)^ihill_rep.V{n}:=scale(<ihill_rep,S>)^ihill_rep.V{n}:)
ee(scale(<ihill_rep,S>)^ihill_rep.V{n}:=scale(<ihill_rep,S>)^ihill_rep.V{n}:)
valid
ec(0+0=0)
>
offset(<ihill_rep,Vmax>)=0
valid
ve(scale(<ihill_rep,REP>)=scale(<ihill_rep,Km>)^ihill_rep.V{n}:/scale(<ihill_rep,S>)^ihill_rep.V{n}:*scale(<ihill_rep,Vmax>))
offset(<ihill_rep,REP>)=0
>>> # Partitions ihill_rep=4
> MAKE vdadd
par(<vdadd,BSW>)
par(<vdadd,DSW>)
input(<vdadd,D>)
cover
input(<vdadd,OUT_0>)
cover
input(<vdadd,A>)
cover
input(<vdadd,B>)
cover
output(<vdadd,OUT>)
cover
OUT
>
>
valid
offset(<vdadd,D>)=0
offset(<vdadd,OUT>)=0
>
valid
offset(<vdadd,B>)=0
>
vv(scale(<vdadd,A>)=scale(<vdadd,A>))
vv(scale(<vdadd,B>)=scale(<vdadd,A>))
vv(scale(<vdadd,A>)=scale(<vdadd,B>))
vv(scale(<vdadd,B>)=scale(<vdadd,B>))
vv(scale(<vdadd,A>)=scale(<vdadd,A>))
ve(scale(<vdadd,A>)=scale(<vdadd,D>)*scale(<vdadd,OUT>))
ve(scale(<vdadd,A>)=scale(<vdadd,D>)*scale(<vdadd,OUT>))
ee(scale(<vdadd,D>)*scale(<vdadd,OUT>)=scale(<vdadd,D>)*scale(<vdadd,OUT>))
vv(scale(<vdadd,OUT>)=scale(<vdadd,A>))
offset(<vdadd,OUT>)=0
=
priority
vv(offset(<vdadd,OUT>)=offset(<vdadd,A>))
vv(scale(<vdadd,OUT>)=scale(<vdadd,OUT_0>))
vv(offset(<vdadd,OUT>)=offset(<vdadd,OUT_0>))
>>> # Partitions vdadd=2
par(<vdadd,BSW>)
par(<vdadd,DSW>)
input(<vdadd,D>)
cover
input(<vdadd,OUT_0>)
cover
input(<vdadd,A>)
cover
input(<vdadd,B>)
cover
output(<vdadd,OUT>)
cover
OUT
>
>
valid
offset(<vdadd,D>)=0
offset(<vdadd,OUT>)=0
>
>
vv(scale(<vdadd,A>)=scale(<vdadd,A>))
vv(scale(<vdadd,B>)=scale(<vdadd,A>))
vv(scale(<vdadd,A>)=scale(<vdadd,B>))
vv(scale(<vdadd,B>)=scale(<vdadd,B>))
vv(scale(<vdadd,A>)=scale(<vdadd,A>))
ve(scale(<vdadd,A>)=scale(<vdadd,D>)*scale(<vdadd,OUT>))
ve(scale(<vdadd,A>)=scale(<vdadd,D>)*scale(<vdadd,OUT>))
ee(scale(<vdadd,D>)*scale(<vdadd,OUT>)=scale(<vdadd,D>)*scale(<vdadd,OUT>))
vv(scale(<vdadd,OUT>)=scale(<vdadd,A>))
offset(<vdadd,OUT>)=0
=
priority
vv(offset(<vdadd,OUT>)=offset(<vdadd,A>))
vv(scale(<vdadd,OUT>)=scale(<vdadd,OUT_0>))
vv(offset(<vdadd,OUT>)=offset(<vdadd,OUT_0>))
>>> # Partitions vdadd=3
par(<vdadd,BSW>)
par(<vdadd,DSW>)
input(<vdadd,D>)
cover
input(<vdadd,OUT_0>)
cover
input(<vdadd,A>)
cover
input(<vdadd,B>)
cover
output(<vdadd,OUT>)
cover
OUT
>
>
>
valid
offset(<vdadd,B>)=0
>
vv(scale(<vdadd,A>)=scale(<vdadd,A>))
vv(scale(<vdadd,B>)=scale(<vdadd,A>))
vv(scale(<vdadd,A>)=scale(<vdadd,B>))
vv(scale(<vdadd,B>)=scale(<vdadd,B>))
vv(scale(<vdadd,A>)=scale(<vdadd,A>))
ve(scale(<vdadd,A>)=scale(<vdadd,D>)*scale(<vdadd,OUT>))
ve(scale(<vdadd,A>)=scale(<vdadd,D>)*scale(<vdadd,OUT>))
ee(scale(<vdadd,D>)*scale(<vdadd,OUT>)=scale(<vdadd,D>)*scale(<vdadd,OUT>))
vv(scale(<vdadd,OUT>)=scale(<vdadd,A>))
offset(<vdadd,OUT>)=0
=
priority
vv(offset(<vdadd,OUT>)=offset(<vdadd,A>))
vv(scale(<vdadd,OUT>)=scale(<vdadd,OUT_0>))
vv(offset(<vdadd,OUT>)=offset(<vdadd,OUT_0>))
>>> # Partitions vdadd=3
par(<vdadd,BSW>)
par(<vdadd,DSW>)
input(<vdadd,D>)
cover
input(<vdadd,OUT_0>)
cover
input(<vdadd,A>)
cover
input(<vdadd,B>)
cover
output(<vdadd,OUT>)
cover
OUT
>
>
>
>
vv(scale(<vdadd,A>)=scale(<vdadd,A>))
vv(scale(<vdadd,B>)=scale(<vdadd,A>))
vv(scale(<vdadd,A>)=scale(<vdadd,B>))
vv(scale(<vdadd,B>)=scale(<vdadd,B>))
vv(scale(<vdadd,A>)=scale(<vdadd,A>))
ve(scale(<vdadd,A>)=scale(<vdadd,D>)*scale(<vdadd,OUT>))
ve(scale(<vdadd,A>)=scale(<vdadd,D>)*scale(<vdadd,OUT>))
ee(scale(<vdadd,D>)*scale(<vdadd,OUT>)=scale(<vdadd,D>)*scale(<vdadd,OUT>))
vv(scale(<vdadd,OUT>)=scale(<vdadd,A>))
offset(<vdadd,OUT>)=0
=
priority
vv(offset(<vdadd,OUT>)=offset(<vdadd,A>))
vv(scale(<vdadd,OUT>)=scale(<vdadd,OUT_0>))
vv(offset(<vdadd,OUT>)=offset(<vdadd,OUT_0>))
>>> # Partitions vdadd=4
> MAKE ihill_rep2
input(<ihill_rep2,n>)
cover
input(<ihill_rep2,S>)
cover
input(<ihill_rep2,Vmax>)
cover
output(<ihill_rep2,REP2>)
cover
>
>
offset(<ihill_rep2,S>)=0
offset(<ihill_rep2,n>)=0
scale(<ihill_rep2,n>)=1
ee(scale(<ihill_rep2,S>)^ihill_rep2.V{n}:=scale(<ihill_rep2,S>)^ihill_rep2.V{n}:)
ee(1=scale(<ihill_rep2,S>)^ihill_rep2.V{n}:)
ee(scale(<ihill_rep2,S>)^ihill_rep2.V{n}:=1)
ee(1=1)
valid
ec(0+0=0)
>
offset(<ihill_rep2,Vmax>)=0
valid
vv(scale(<ihill_rep2,REP2>)=scale(<ihill_rep2,Vmax>))
offset(<ihill_rep2,REP2>)=0
>>> # Partitions ihill_rep2=2
> MAKE input.I
input(<input.I,X>)
cover
output(<input.I,O>)
cover
>
vv(scale(<input.I,O>)=scale(<input.I,X>))
vv(offset(<input.I,O>)=offset(<input.I,X>))
>>> # Partitions input.I=2
> MAKE output.V
input(<output.V,X>)
cover
output(<output.V,O>)
cover
>
vv(scale(<output.V,O>)=scale(<output.V,X>))
vv(offset(<output.V,O>)=offset(<output.V,X>))
>>> # Partitions output.V=2
> MAKE copy.V
input(<copy.V,X>)
cover
output(<copy.V,Y>)
cover
>
vv(scale(<copy.V,Y>)=scale(<copy.V,X>))
vv(offset(<copy.V,Y>)=offset(<copy.V,X>))
>>> # Partitions copy.V=2
> MAKE vadd
par(<vadd,BSW>)
par(<vadd,CSW>)
input(<vadd,C>)
cover
input(<vadd,A>)
cover
input(<vadd,B>)
cover
output(<vadd,OUT>)
cover
>
valid
offset(<vadd,C>)=0
>
valid
offset(<vadd,B>)=0
>
vv(scale(<vadd,A>)=scale(<vadd,A>))
vv(scale(<vadd,B>)=scale(<vadd,A>))
vv(scale(<vadd,A>)=scale(<vadd,B>))
vv(scale(<vadd,B>)=scale(<vadd,B>))
vv(scale(<vadd,A>)=scale(<vadd,A>))
vv(scale(<vadd,C>)=scale(<vadd,A>))
vv(scale(<vadd,A>)=scale(<vadd,C>))
vv(scale(<vadd,C>)=scale(<vadd,C>))
ec(offset(<vadd,A>)+0+0=0)
valid
vv(scale(<vadd,OUT>)=scale(<vadd,A>))
offset(<vadd,OUT>)=0
>>> # Partitions vadd=3
par(<vadd,BSW>)
par(<vadd,CSW>)
input(<vadd,C>)
cover
input(<vadd,A>)
cover
input(<vadd,B>)
cover
output(<vadd,OUT>)
cover
>
valid
offset(<vadd,C>)=0
>
>
vv(scale(<vadd,A>)=scale(<vadd,A>))
vv(scale(<vadd,B>)=scale(<vadd,A>))
vv(scale(<vadd,A>)=scale(<vadd,B>))
vv(scale(<vadd,B>)=scale(<vadd,B>))
vv(scale(<vadd,A>)=scale(<vadd,A>))
vv(scale(<vadd,C>)=scale(<vadd,A>))
vv(scale(<vadd,A>)=scale(<vadd,C>))
vv(scale(<vadd,C>)=scale(<vadd,C>))
vv(scale(<vadd,OUT>)=scale(<vadd,A>))
offset(<vadd,OUT>)=0
>>> # Partitions vadd=4
par(<vadd,BSW>)
par(<vadd,CSW>)
input(<vadd,C>)
cover
input(<vadd,A>)
cover
input(<vadd,B>)
cover
output(<vadd,OUT>)
cover
>
>
valid
offset(<vadd,B>)=0
>
vv(scale(<vadd,A>)=scale(<vadd,A>))
vv(scale(<vadd,B>)=scale(<vadd,A>))
vv(scale(<vadd,A>)=scale(<vadd,B>))
vv(scale(<vadd,B>)=scale(<vadd,B>))
vv(scale(<vadd,A>)=scale(<vadd,A>))
vv(scale(<vadd,C>)=scale(<vadd,A>))
vv(scale(<vadd,A>)=scale(<vadd,C>))
vv(scale(<vadd,C>)=scale(<vadd,C>))
ec(offset(<vadd,A>)+0+0=0)
valid
vv(scale(<vadd,OUT>)=scale(<vadd,A>))
offset(<vadd,OUT>)=0
>>> # Partitions vadd=4
par(<vadd,BSW>)
par(<vadd,CSW>)
input(<vadd,C>)
cover
input(<vadd,A>)
cover
input(<vadd,B>)
cover
output(<vadd,OUT>)
cover
>
>
>
vv(scale(<vadd,A>)=scale(<vadd,A>))
vv(scale(<vadd,B>)=scale(<vadd,A>))
vv(scale(<vadd,A>)=scale(<vadd,B>))
vv(scale(<vadd,B>)=scale(<vadd,B>))
vv(scale(<vadd,A>)=scale(<vadd,A>))
vv(scale(<vadd,C>)=scale(<vadd,A>))
vv(scale(<vadd,A>)=scale(<vadd,C>))
vv(scale(<vadd,C>)=scale(<vadd,C>))
ec(offset(<vadd,A>)+0+0=0)
valid
vv(scale(<vadd,OUT>)=scale(<vadd,A>))
offset(<vadd,OUT>)=0
>>> # Partitions vadd=5
> MAKE vtoi
input(<vtoi,X>)
cover
input(<vtoi,K>)
cover
output(<vtoi,Y>)
cover
>
>
valid
offset(<vtoi,K>)=0
valid
offset(<vtoi,X>)=0
ve(scale(<vtoi,Y>)=scale(<vtoi,K>)^-1*scale(<vtoi,X>))
offset(<vtoi,Y>)=0
>>> # Partitions vtoi=3
> MAKE igenebind
input(<igenebind,TF>)
cover
input(<igenebind,K>)
cover
input(<igenebind,Vmax>)
cover
output(<igenebind,GE>)
cover
>
>
offset(<igenebind,K>)=0
offset(<igenebind,TF>)=0
ee(1=1)
ee(scale(<igenebind,K>)*scale(<igenebind,TF>)=1)
ee(1=scale(<igenebind,K>)*scale(<igenebind,TF>))
ee(scale(<igenebind,K>)*scale(<igenebind,TF>)=scale(<igenebind,K>)*scale(<igenebind,TF>))
valid
ec(0+0=0)
>
offset(<igenebind,Vmax>)=0
valid
ve(scale(<igenebind,GE>)=scale(<igenebind,K>)^-1*scale(<igenebind,TF>)^-1*scale(<igenebind,Vmax>))
offset(<igenebind,GE>)=0
>>> # Partitions igenebind=4
> MAKE mm
input(<mm,kr>)
cover
input(<mm,XY0>)
cover
input(<mm,Ytot>)
cover
input(<mm,kf>)
cover
input(<mm,Xtot>)
cover
output(<mm,X>)
cover
output(<mm,XY>)
cover
XY
output(<mm,Y>)
cover
>
>
vv(scale(<mm,Xtot>)=scale(<mm,Xtot>))
vv(scale(<mm,XY>)=scale(<mm,Xtot>))
vv(scale(<mm,Xtot>)=scale(<mm,XY>))
vv(scale(<mm,XY>)=scale(<mm,XY>))
vv(scale(<mm,X>)=scale(<mm,Xtot>))
ve(offset(<mm,X>)=offset(<mm,XY>)+offset(<mm,Xtot>))
>
>
offset(<mm,kr>)=0
offset(<mm,XY>)=0
>
>
>
offset(<mm,kf>)=0
offset(<mm,X>)=0
offset(<mm,Y>)=0
ee(scale(<mm,X>)*scale(<mm,Y>)*scale(<mm,kf>)=scale(<mm,X>)*scale(<mm,Y>)*scale(<mm,kf>))
ee(scale(<mm,XY>)*scale(<mm,kr>)=scale(<mm,X>)*scale(<mm,Y>)*scale(<mm,kf>))
ee(scale(<mm,X>)*scale(<mm,Y>)*scale(<mm,kf>)=scale(<mm,XY>)*scale(<mm,kr>))
ee(scale(<mm,XY>)*scale(<mm,kr>)=scale(<mm,XY>)*scale(<mm,kr>))
ve(scale(<mm,XY>)=scale(<mm,XY>)*scale(<mm,kr>))
offset(<mm,XY>)=0
=
priority
offset(<mm,XY>)=0
vv(scale(<mm,XY>)=scale(<mm,XY0>))
vv(offset(<mm,XY>)=offset(<mm,XY0>))
>
>
vv(scale(<mm,Ytot>)=scale(<mm,Ytot>))
vv(scale(<mm,XY>)=scale(<mm,Ytot>))
vv(scale(<mm,Ytot>)=scale(<mm,XY>))
vv(scale(<mm,XY>)=scale(<mm,XY>))
vv(scale(<mm,Y>)=scale(<mm,Ytot>))
ve(offset(<mm,Y>)=offset(<mm,XY>)+offset(<mm,Ytot>))
>>> # Partitions mm=4
> MAKE input.V
input(<input.V,X>)
cover
output(<input.V,O>)
cover
>
vv(scale(<input.V,O>)=scale(<input.V,X>))
vv(offset(<input.V,O>)=offset(<input.V,X>))
>>> # Partitions input.V=2
> MAKE itov
input(<itov,X>)
cover
input(<itov,K>)
cover
output(<itov,Y>)
cover
>
>
offset(<itov,K>)=0
offset(<itov,X>)=0
ve(scale(<itov,Y>)=scale(<itov,K>)*scale(<itov,X>))
offset(<itov,Y>)=0
>>> # Partitions itov=3
> MAKE iadd
input(<iadd,C>)
cover
input(<iadd,A>)
cover
input(<iadd,B>)
cover
output(<iadd,OUT>)
cover
>
>
>
vv(scale(<iadd,A>)=scale(<iadd,A>))
vv(scale(<iadd,B>)=scale(<iadd,A>))
vv(scale(<iadd,A>)=scale(<iadd,B>))
vv(scale(<iadd,B>)=scale(<iadd,B>))
vv(scale(<iadd,A>)=scale(<iadd,A>))
vv(scale(<iadd,C>)=scale(<iadd,A>))
vv(scale(<iadd,A>)=scale(<iadd,C>))
vv(scale(<iadd,C>)=scale(<iadd,C>))
vv(scale(<iadd,OUT>)=scale(<iadd,A>))
ve(offset(<iadd,OUT>)=offset(<iadd,A>)+offset(<iadd,B>)+offset(<iadd,C>))
>>> # Partitions iadd=5
> MAKE output.I
input(<output.I,X>)
cover
output(<output.I,O>)
cover
>
vv(scale(<output.I,O>)=scale(<output.I,X>))
vv(offset(<output.I,O>)=offset(<output.I,X>))
>>> # Partitions output.I=2
> MAKE copy.I
input(<copy.I,X>)
cover
output(<copy.I,Y>)
cover
>
vv(scale(<copy.I,Y>)=scale(<copy.I,X>))
vv(offset(<copy.I,Y>)=offset(<copy.I,X>))
>>> # Partitions copy.I=2
=== mm ===
 = 
 = ====== #0 ======
v(2) = exprs=
cstrs=
value=<none>
mems=offset(<mm,Ytot>)

v(0) = exprs=v(0)+v(2)=v(0)+v(1)
cstrs==
value=0
mems=offset(<mm,XY0>),offset(<mm,Y>),offset(<mm,kf>),offset(<mm,XY>),offset(<mm,kr>),offset(<mm,X>)

v(3) = exprs=v(3)*v(3)*v(3)=v(3)*v(3)
cstrs=>
value=<none>
mems=scale(<mm,Ytot>),scale(<mm,Y>),scale(<mm,XY>),scale(<mm,XY0>),scale(<mm,kr>),scale(<mm,kf>),scale(<mm,Xtot>),scale(<mm,X>)

v(1) = exprs=
cstrs=
value=<none>
mems=offset(<mm,Xtot>)


kr = string_of_map_port: unimpl
XY0 = string_of_map_port: unimpl
Ytot = string_of_map_port: unimpl
Xtot = string_of_map_port: unimpl
kf = string_of_map_port: unimpl

X = string_of_map_port: unimpl
XY = string_of_map_port: unimpl
Y = string_of_map_port: unimpl



=== vgain ===
 = 
 = ====== #0 ======
v(2) = exprs=
cstrs=
value=0
mems=offset(<vgain,P>),offset(<vgain,Z>),offset(<vgain,X>)

v(0) = exprs=v(1)*v(1)
cstrs=
value=<none>
mems=scale(<vgain,P>)

v(1) = exprs=
cstrs=>
value=<none>
mems=scale(<vgain,Z>),scale(<vgain,X>)


X = string_of_map_port: unimpl
Z = string_of_map_port: unimpl

P = string_of_map_port: unimpl



=== vdadd ===
 = 
 = ====== #2 ======
v(2) = exprs=
cstrs==
value=0
mems=offset(<vdadd,D>),offset(<vdadd,A>),offset(<vdadd,OUT_0>),offset(<vdadd,OUT>)

v(0) = exprs=v(0)*v(0)
cstrs=>
value=<none>
mems=scale(<vdadd,OUT_0>),scale(<vdadd,D>),scale(<vdadd,B>),scale(<vdadd,A>),scale(<vdadd,OUT>)

v(1) = exprs=
cstrs=
value=<none>
mems=offset(<vdadd,B>)


D = string_of_map_port: unimpl
A = string_of_map_port: unimpl
OUT_0 = string_of_map_port: unimpl
B = string_of_map_port: unimpl

OUT = string_of_map_port: unimpl



 = ====== #0 ======
v(2) = exprs=
cstrs=
value=<none>
mems=offset(<vdadd,B>)

v(0) = exprs=v(0)*v(0)
cstrs=>
value=<none>
mems=scale(<vdadd,OUT_0>),scale(<vdadd,D>),scale(<vdadd,B>),scale(<vdadd,A>),scale(<vdadd,OUT>)

v(3) = exprs=
cstrs==
value=0
mems=offset(<vdadd,A>),offset(<vdadd,OUT_0>),offset(<vdadd,OUT>)

v(1) = exprs=
cstrs=
value=<none>
mems=offset(<vdadd,D>)


D = string_of_map_port: unimpl
A = string_of_map_port: unimpl
OUT_0 = string_of_map_port: unimpl
B = string_of_map_port: unimpl

OUT = string_of_map_port: unimpl



 = ====== #3 ======
v(0) = exprs=v(0)*v(0)
cstrs=>
value=<none>
mems=scale(<vdadd,OUT_0>),scale(<vdadd,D>),scale(<vdadd,B>),scale(<vdadd,A>),scale(<vdadd,OUT>)

v(1) = exprs=
cstrs==
value=0
mems=offset(<vdadd,D>),offset(<vdadd,A>),offset(<vdadd,OUT_0>),offset(<vdadd,OUT>),offset(<vdadd,B>)


D = string_of_map_port: unimpl
A = string_of_map_port: unimpl
OUT_0 = string_of_map_port: unimpl
B = string_of_map_port: unimpl

OUT = string_of_map_port: unimpl



 = ====== #1 ======
v(2) = exprs=
cstrs==
value=0
mems=offset(<vdadd,A>),offset(<vdadd,OUT_0>),offset(<vdadd,OUT>),offset(<vdadd,B>)

v(0) = exprs=v(0)*v(0)
cstrs=>
value=<none>
mems=scale(<vdadd,OUT_0>),scale(<vdadd,D>),scale(<vdadd,B>),scale(<vdadd,A>),scale(<vdadd,OUT>)

v(1) = exprs=
cstrs=
value=<none>
mems=offset(<vdadd,D>)


D = string_of_map_port: unimpl
A = string_of_map_port: unimpl
OUT_0 = string_of_map_port: unimpl
B = string_of_map_port: unimpl

OUT = string_of_map_port: unimpl



=== switch ===
 = 
 = ====== #0 ======
v(2) = exprs=
cstrs=>
value=<none>
mems=scale(<switch,n>),scale(<switch,Vmax>),scale(<switch,Kmod>),scale(<switch,SUB>)

v(0) = exprs=v(2)/1=v(2)^-1*v(2)
cstrs=
value=1
mems=

v(3) = exprs=0+0
cstrs=
value=0
mems=offset(<switch,SUB>),offset(<switch,n>),offset(<switch,Kmod>),offset(<switch,PROD>),offset(<switch,Vmax>)

v(1) = exprs=1/1^(switch.V{n}:/500.)*v(2)
cstrs=
value=<none>
mems=scale(<switch,PROD>)


SUB = string_of_map_port: unimpl
n = string_of_map_port: unimpl
Kmod = string_of_map_port: unimpl
Vmax = string_of_map_port: unimpl

PROD = string_of_map_port: unimpl



=== itov ===
 = 
 = ====== #0 ======
v(2) = exprs=
cstrs=
value=0
mems=offset(<itov,K>),offset(<itov,X>),offset(<itov,Y>)

v(0) = exprs=v(1)*v(1)
cstrs=
value=<none>
mems=scale(<itov,Y>)

v(1) = exprs=
cstrs=>
value=<none>
mems=scale(<itov,K>),scale(<itov,X>)


X = string_of_map_port: unimpl
K = string_of_map_port: unimpl

Y = string_of_map_port: unimpl



=== output.I ===
 = 
 = ====== #0 ======
v(0) = exprs=
cstrs=>
value=<none>
mems=scale(<output.I,O>),scale(<output.I,X>)

v(1) = exprs=
cstrs=
value=<none>
mems=offset(<output.I,X>),offset(<output.I,O>)


X = string_of_map_port: unimpl

O = string_of_map_port: unimpl



=== input.V ===
 = 
 = ====== #0 ======
v(0) = exprs=
cstrs=>
value=<none>
mems=scale(<input.V,X>),scale(<input.V,O>)

v(1) = exprs=
cstrs=
value=<none>
mems=offset(<input.V,X>),offset(<input.V,O>)


X = string_of_map_port: unimpl

O = string_of_map_port: unimpl



=== output.V ===
 = 
 = ====== #0 ======
v(0) = exprs=
cstrs=>
value=<none>
mems=scale(<output.V,X>),scale(<output.V,O>)

v(1) = exprs=
cstrs=
value=<none>
mems=offset(<output.V,O>),offset(<output.V,X>)


X = string_of_map_port: unimpl

O = string_of_map_port: unimpl



=== ihill_rep2 ===
 = 
 = ====== #0 ======
v(0) = exprs=v(0)^ihill_rep2.V{n}:=1
cstrs=>
value=<none>
mems=scale(<ihill_rep2,n>),scale(<ihill_rep2,REP2>),scale(<ihill_rep2,Vmax>),scale(<ihill_rep2,S>)

v(1) = exprs=0+0
cstrs=
value=0
mems=offset(<ihill_rep2,Vmax>),offset(<ihill_rep2,S>),offset(<ihill_rep2,REP2>),offset(<ihill_rep2,n>)


n = string_of_map_port: unimpl
S = string_of_map_port: unimpl
Vmax = string_of_map_port: unimpl

REP2 = string_of_map_port: unimpl



=== copy.V ===
 = 
 = ====== #0 ======
v(0) = exprs=
cstrs=>
value=<none>
mems=scale(<copy.V,Y>),scale(<copy.V,X>)

v(1) = exprs=
cstrs=
value=<none>
mems=offset(<copy.V,X>),offset(<copy.V,Y>)


X = string_of_map_port: unimpl

Y = string_of_map_port: unimpl



=== ihill_rep ===
 = 
 = ====== #0 ======
v(2) = exprs=
cstrs=>
value=1
mems=scale(<ihill_rep,Km>),scale(<ihill_rep,S>),scale(<ihill_rep,n>),scale(<ihill_rep,Vmax>)

v(0) = exprs=v(2)^ihill_rep.V{n}:=v(2)^ihill_rep.V{n}:
cstrs=
value=<none>
mems=

v(3) = exprs=0+0
cstrs=
value=0
mems=offset(<ihill_rep,n>),offset(<ihill_rep,REP>),offset(<ihill_rep,Km>),offset(<ihill_rep,S>),offset(<ihill_rep,Vmax>)

v(1) = exprs=v(2)^ihill_rep.V{n}:/v(2)^ihill_rep.V{n}:*v(2)
cstrs=
value=<none>
mems=scale(<ihill_rep,REP>)


n = string_of_map_port: unimpl
S = string_of_map_port: unimpl
Km = string_of_map_port: unimpl
Vmax = string_of_map_port: unimpl

REP = string_of_map_port: unimpl



=== ihill_stim ===
 = 
 = ====== #0 ======
v(2) = exprs=
cstrs=
value=<none>
mems=offset(<ihill_stim,Vmax>)

v(0) = exprs=v(0)/v(0)^ihill_stim.V{n}:=1
cstrs=>
value=<none>
mems=scale(<ihill_stim,S>),scale(<ihill_stim,n>),scale(<ihill_stim,Vmax>),scale(<ihill_stim,Km>)

v(3) = exprs=0+0
cstrs=
value=0
mems=offset(<ihill_stim,STIM>),offset(<ihill_stim,n>),offset(<ihill_stim,S>),offset(<ihill_stim,Km>)

v(1) = exprs=v(0)*v(0)/v(0)^ihill_stim.V{n}:/1
cstrs=
value=<none>
mems=scale(<ihill_stim,STIM>)


n = string_of_map_port: unimpl
S = string_of_map_port: unimpl
Km = string_of_map_port: unimpl
Vmax = string_of_map_port: unimpl

STIM = string_of_map_port: unimpl



=== vtoi ===
 = 
 = ====== #0 ======
v(2) = exprs=
cstrs=
value=0
mems=offset(<vtoi,X>),offset(<vtoi,Y>),offset(<vtoi,K>)

v(0) = exprs=v(1)^-1*v(1)
cstrs=
value=<none>
mems=scale(<vtoi,Y>)

v(1) = exprs=
cstrs=>
value=<none>
mems=scale(<vtoi,X>),scale(<vtoi,K>)


X = string_of_map_port: unimpl
K = string_of_map_port: unimpl

Y = string_of_map_port: unimpl



=== vadd ===
 = 
 = ====== #2 ======
v(2) = exprs=
cstrs=
value=<none>
mems=offset(<vadd,B>)

v(0) = exprs=
cstrs=>
value=<none>
mems=scale(<vadd,C>),scale(<vadd,B>),scale(<vadd,OUT>),scale(<vadd,A>)

v(3) = exprs=
cstrs=
value=0
mems=offset(<vadd,C>),offset(<vadd,OUT>)

v(1) = exprs=
cstrs=
value=<none>
mems=offset(<vadd,A>)


C = string_of_map_port: unimpl
A = string_of_map_port: unimpl
B = string_of_map_port: unimpl

OUT = string_of_map_port: unimpl



 = ====== #0 ======
v(2) = exprs=
cstrs=
value=<none>
mems=offset(<vadd,A>)

v(0) = exprs=
cstrs=>
value=<none>
mems=scale(<vadd,C>),scale(<vadd,B>),scale(<vadd,OUT>),scale(<vadd,A>)

v(3) = exprs=
cstrs=
value=<none>
mems=offset(<vadd,B>)

v(4) = exprs=v(2)+0+0
cstrs=
value=0
mems=offset(<vadd,OUT>)

v(1) = exprs=
cstrs=
value=<none>
mems=offset(<vadd,C>)


C = string_of_map_port: unimpl
A = string_of_map_port: unimpl
B = string_of_map_port: unimpl

OUT = string_of_map_port: unimpl



 = ====== #3 ======
v(2) = exprs=v(1)+0+0
cstrs=
value=0
mems=offset(<vadd,B>),offset(<vadd,C>),offset(<vadd,OUT>)

v(0) = exprs=
cstrs=>
value=<none>
mems=scale(<vadd,C>),scale(<vadd,B>),scale(<vadd,OUT>),scale(<vadd,A>)

v(1) = exprs=
cstrs=
value=<none>
mems=offset(<vadd,A>)


C = string_of_map_port: unimpl
A = string_of_map_port: unimpl
B = string_of_map_port: unimpl

OUT = string_of_map_port: unimpl



 = ====== #1 ======
v(2) = exprs=
cstrs=
value=<none>
mems=offset(<vadd,A>)

v(0) = exprs=
cstrs=>
value=<none>
mems=scale(<vadd,C>),scale(<vadd,B>),scale(<vadd,OUT>),scale(<vadd,A>)

v(3) = exprs=v(2)+0+0
cstrs=
value=0
mems=offset(<vadd,B>),offset(<vadd,OUT>)

v(1) = exprs=
cstrs=
value=<none>
mems=offset(<vadd,C>)


C = string_of_map_port: unimpl
A = string_of_map_port: unimpl
B = string_of_map_port: unimpl

OUT = string_of_map_port: unimpl



=== copy.I ===
 = 
 = ====== #0 ======
v(0) = exprs=
cstrs=>
value=<none>
mems=scale(<copy.I,Y>),scale(<copy.I,X>)

v(1) = exprs=
cstrs=
value=<none>
mems=offset(<copy.I,X>),offset(<copy.I,Y>)


X = string_of_map_port: unimpl

Y = string_of_map_port: unimpl



=== iadd ===
 = 
 = ====== #0 ======
v(2) = exprs=
cstrs=
value=<none>
mems=offset(<iadd,A>)

v(0) = exprs=v(2)+v(1)+v(3)
cstrs=
value=<none>
mems=offset(<iadd,OUT>)

v(3) = exprs=
cstrs=
value=<none>
mems=offset(<iadd,C>)

v(4) = exprs=
cstrs=>
value=<none>
mems=scale(<iadd,OUT>),scale(<iadd,A>),scale(<iadd,B>),scale(<iadd,C>)

v(1) = exprs=
cstrs=
value=<none>
mems=offset(<iadd,B>)


C = string_of_map_port: unimpl
A = string_of_map_port: unimpl
B = string_of_map_port: unimpl

OUT = string_of_map_port: unimpl



=== input.I ===
 = 
 = ====== #0 ======
v(0) = exprs=
cstrs=>
value=<none>
mems=scale(<input.I,O>),scale(<input.I,X>)

v(1) = exprs=
cstrs=
value=<none>
mems=offset(<input.I,X>),offset(<input.I,O>)


X = string_of_map_port: unimpl

O = string_of_map_port: unimpl



=== igenebind ===
 = 
 = ====== #0 ======
v(2) = exprs=
cstrs=>
value=<none>
mems=scale(<igenebind,TF>),scale(<igenebind,Vmax>),scale(<igenebind,K>)

v(0) = exprs=1=v(2)*v(2)
cstrs=
value=<none>
mems=

v(3) = exprs=0+0
cstrs=
value=0
mems=offset(<igenebind,GE>),offset(<igenebind,K>),offset(<igenebind,Vmax>),offset(<igenebind,TF>)

v(1) = exprs=v(2)^-1*v(2)^-1*v(2)
cstrs=
value=<none>
mems=scale(<igenebind,GE>)


TF = string_of_map_port: unimpl
K = string_of_map_port: unimpl
Vmax = string_of_map_port: unimpl

GE = string_of_map_port: unimpl



[multi] # Found 0, Required: 1
[multi] solving target: TRclp
[multi] search tree is not exhausted. adding existing:TRclp
[multi] finding new partial solution
[multi] made a partial tree with 9 goals
[multi] find a partial solution
[multi] == Finding Local Solution ==
[multi] == Current # Solutions: 0
[multi] == # New Solutions To Find: 1
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> Current Goal: [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
vgain.P -> true
switch.PROD -> true
ihill_stim.STIM -> true
ihill_rep.REP -> true
ihill_rep2.REP2 -> true
vadd.OUT -> true
vtoi.Y -> true
igenebind.GE -> true
mm.X -> true
mm.Y -> true
itov.Y -> true
iadd.OUT -> true
[eqn] >>> NUMBER OF COMPATIBLE COMPONENTS  12 <<<
[eqn] new: [0] <vgain> output P.V
<analog>:(vgain.V{X}:*vgain.I{Z}:) / std=none 0
<analog> [v]=[0.,5000.] {v}->[v]=@


[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn] new: [0] <switch> output PROD.I
<analog>:(switch.I{Vmax}:*(1/(((switch.I{SUB}:/switch.I{Kmod}:)+1)^(switch.V{n}:/500.)))) / std=none 0
<analog> [v]=[0.,10.] {v}->[v]=@


[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn] new: [0] <ihill_stim> output STIM.I
<analog>:(ihill_stim.I{Vmax}:*(((ihill_stim.I{S}:/ihill_stim.I{Km}:)^ihill_stim.V{n}:)/(((ihill_stim.I{S}:/ihill_stim.I{Km}:)^ihill_stim.V{n}:)+1))) / std=none 0
<analog> [v]=[0.,1000000.] {v}->[v]=@


[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 9 ssteps
[eqn] new: [0] <ihill_rep> output REP.I
<analog>:(ihill_rep.I{Vmax}:*((ihill_rep.I{Km}:^ihill_rep.V{n}:)/((ihill_rep.I{Km}:^ihill_rep.V{n}:)+(ihill_rep.I{S}:^ihill_rep.V{n}:)))) / std=none 0
<analog> [v]=[0.,80000.] {v}->[v]=@


[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn] new: [0] <ihill_rep2> output REP2.I
<analog>:(ihill_rep2.I{Vmax}:*(1/((ihill_rep2.I{S}:^ihill_rep2.V{n}:)+1))) / std=none 0
<analog> [v]=[0.,10.] {v}->[v]=@


[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn] new: [0] <vadd> output OUT.V
<analog>:(((vadd.V{A}:+(vadd.BSW*vadd.V{B}:))-(vadd.CSW*vadd.V{C}:))*0.25) / std=gauss ((0.001*vadd.V{OUT}:)+0.1)
<analog> [v]={[-825.,1650.] [0.,1650.] [-825.,825.] [0.,825.] } {v}->[v]=@


[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn] new: [0] <vtoi> output Y.I
<analog>:((1/vtoi.V{K}:)*vtoi.V{X}:) / std=gauss 1e-06
<analog> [v]=[0.,10.] {v}->[v]=@


[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn] new: [0] <igenebind> output GE.I
<analog>:(igenebind.I{Vmax}:*(1/(1+(igenebind.I{K}:*igenebind.I{TF}:)))) / std=none 0
<analog> [v]=[0.,10.] {v}->[v]=@


[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn] new: [0] <mm> output Y.V
<analog>:(mm.V{Ytot}:-mm.V{XY}:) / std=none 0
<analog> [v]=[0.,1600.] {v}->[v]=@


[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[eqn] new: [0] <mm> output X.V
<analog>:(mm.V{Xtot}:-mm.V{XY}:) / std=none 0
<analog> [v]=[0.,1600.] {v}->[v]=@


[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[eqn] new: [0] <itov> output Y.V
<analog>:(itov.V{K}:*itov.I{X}:) / std=gauss 0.1
<analog> [v]=[0.,3300.] {v}->[v]=@


[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn] new: [0] <iadd> output OUT.I
<analog>:((iadd.I{A}:+iadd.I{B}:)-iadd.I{C}:) / std=gauss ((1e-05*iadd.V{OUT}:)+0.001)
<analog> [v]=[-5.,10.] {v}->[v]=@


[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn] [FOUND-SOLS] ===> Found <102> solutions
[slvrsearch] > weight--: <mvar-goal>TRclp
[eqn] -> [valid?] testing node 83
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=0

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 71
[eqn] <<< SAT => VALID >>
[eqn] [search_tree] Found enough solutions
[multi] === returned from partial search ===
[multi] >>> Partial Results Found <<<
[multi] done with search
[multi] found some partial solutions. Will add partial solution node and global
[multi] == Adding Local Solution : 83 ==
[multi]  > Added Local Solution
[multi]  > Finding Global Solution
[multi] found # steps: 30
[multi] # partial ids = 1
[multi]    remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   [comp] ihill_rep[0] cfg-in REP=TRclp
   [comp] ihill_rep[0] cfg-in n=2
   [comp] ihill_rep[0] cfg-in S=TetRp
   [comp] ihill_rep[0] cfg-in Vmax=0.4995
   [comp] ihill_rep[0] cfg-in Km=40
   [sln] generate ihill_rep[0].REP = TRclp
   [sln] add-comp ihill_rep[0]
   [sln] route ihill_rep[0].n = 2
   [sln] route ihill_rep[0].S = TetRp
   [sln] route ihill_rep[0].Vmax = 0.4995
   [sln] route ihill_rep[0].Km = 40
   [comp] make-comp ihill_rep0
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ==== ROUTES =====
[multi] > ihill_rep[0].S = TetRp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[0].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[0].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[0].Km = 40
[multi]    - making an input block.
[multi] ==== GENERATES =====
[multi] > ihill_rep[0].REP = TRclp
[multi] --> Number of options 3
[multi] --> Number of nodes 1
[multi] ======= Partial (Root) Steps 30 =======
[multi]    remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   [comp] ihill_rep[0] cfg-in REP=TRclp
   [comp] ihill_rep[0] cfg-in n=2
   [comp] ihill_rep[0] cfg-in S=TetRp
   [comp] ihill_rep[0] cfg-in Vmax=0.4995
   [comp] ihill_rep[0] cfg-in Km=40
   [sln] generate ihill_rep[0].REP = TRclp
   [sln] add-comp ihill_rep[0]
   [sln] route ihill_rep[0].n = 2
   [sln] route ihill_rep[0].S = TetRp
   [sln] route ihill_rep[0].Vmax = 0.4995
   [sln] route ihill_rep[0].Km = 40
   [comp] make-comp ihill_rep0
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ============================
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.V[0] cfg-in X=2
     [comp] input.V[0] cfg-out O=2
     [comp] input.I[0] cfg-in X=0.4995
     [comp] input.I[0] cfg-out O=0.4995
     [comp] input.I[1] cfg-in X=40
     [comp] input.I[1] cfg-out O=40
     [sln] rm-route ihill_rep[0].n = 2
     [sln] add-comp input.V[0]
     [sln] generate input.V[0].O = 2
     [sln] rm-route ihill_rep[0].Vmax = 0.4995
     [sln] add-comp input.I[0]
     [sln] generate input.I[0].O = 0.4995
     [sln] rm-route ihill_rep[0].Km = 40
     [sln] add-comp input.I[1]
     [sln] generate input.I[1].O = 40
     [sln] route input.V[0].X = 2
     [sln] route input.I[0].X = 0.4995
     [sln] route input.I[1].X = 40
     [comp] make-comp input.V0
     [comp] make-comp input.I0
     [comp] make-comp input.I1
     add-goal [273] [CONN] input.V[0].O => ihill_rep[0].n (2)
     add-goal [274] [CONN] input.I[0].O => ihill_rep[0].Vmax (0.4995)
     add-goal [275] [CONN] input.I[1].O => ihill_rep[0].Km (40)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[274] [CONN] input.I[0].O => ihill_rep[0].Vmax (0.4995)
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[275] [CONN] input.I[1].O => ihill_rep[0].Km (40)
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[273] [CONN] input.V[0].O => ihill_rep[0].n (2)
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> Current Goal: [273] [CONN] input.V[0].O => ihill_rep[0].n (2)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 3
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=1

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] [TERMINATE] found 0 / 1
[eqn] [TERMINATE] could not find another node
[multi]   >> Found # Global Solutions: 1/1
[multi] >>>SOLUTION IS UNFINISHED <<<
[multi] # Found 0, Required: 1
[multi] solving target: TRLacL
[multi] search tree is not exhausted. adding existing:TRLacL
[multi] finding new partial solution
[multi] made a partial tree with 9 goals
[multi] find a partial solution
[multi] == Finding Local Solution ==
[multi] == Current # Solutions: 0
[multi] == # New Solutions To Find: 1
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}

============
>> Current Goal: [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
vgain.P -> true
switch.PROD -> true
ihill_stim.STIM -> true
ihill_rep.REP -> true
ihill_rep2.REP2 -> true
vadd.OUT -> true
vtoi.Y -> true
igenebind.GE -> true
mm.X -> true
mm.Y -> true
itov.Y -> true
iadd.OUT -> true
[eqn] >>> NUMBER OF COMPATIBLE COMPONENTS  12 <<<
[eqn] new: [0] <vgain> output P.V
<analog>:(vgain.V{X}:*vgain.I{Z}:) / std=none 0
<analog> [v]=[0.,5000.] {v}->[v]=@


[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn] new: [0] <switch> output PROD.I
<analog>:(switch.I{Vmax}:*(1/(((switch.I{SUB}:/switch.I{Kmod}:)+1)^(switch.V{n}:/500.)))) / std=none 0
<analog> [v]=[0.,10.] {v}->[v]=@


[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn] new: [0] <ihill_stim> output STIM.I
<analog>:(ihill_stim.I{Vmax}:*(((ihill_stim.I{S}:/ihill_stim.I{Km}:)^ihill_stim.V{n}:)/(((ihill_stim.I{S}:/ihill_stim.I{Km}:)^ihill_stim.V{n}:)+1))) / std=none 0
<analog> [v]=[0.,1000000.] {v}->[v]=@


[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 9 ssteps
[eqn] new: [0] <ihill_rep> output REP.I
<analog>:(ihill_rep.I{Vmax}:*((ihill_rep.I{Km}:^ihill_rep.V{n}:)/((ihill_rep.I{Km}:^ihill_rep.V{n}:)+(ihill_rep.I{S}:^ihill_rep.V{n}:)))) / std=none 0
<analog> [v]=[0.,80000.] {v}->[v]=@


[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn] new: [0] <ihill_rep2> output REP2.I
<analog>:(ihill_rep2.I{Vmax}:*(1/((ihill_rep2.I{S}:^ihill_rep2.V{n}:)+1))) / std=none 0
<analog> [v]=[0.,10.] {v}->[v]=@


[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn] new: [0] <vadd> output OUT.V
<analog>:(((vadd.V{A}:+(vadd.BSW*vadd.V{B}:))-(vadd.CSW*vadd.V{C}:))*0.25) / std=gauss ((0.001*vadd.V{OUT}:)+0.1)
<analog> [v]={[-825.,1650.] [0.,1650.] [-825.,825.] [0.,825.] } {v}->[v]=@


[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn] new: [0] <vtoi> output Y.I
<analog>:((1/vtoi.V{K}:)*vtoi.V{X}:) / std=gauss 1e-06
<analog> [v]=[0.,10.] {v}->[v]=@


[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn] new: [0] <igenebind> output GE.I
<analog>:(igenebind.I{Vmax}:*(1/(1+(igenebind.I{K}:*igenebind.I{TF}:)))) / std=none 0
<analog> [v]=[0.,10.] {v}->[v]=@


[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn] new: [0] <mm> output Y.V
<analog>:(mm.V{Ytot}:-mm.V{XY}:) / std=none 0
<analog> [v]=[0.,1600.] {v}->[v]=@


[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[eqn] new: [0] <mm> output X.V
<analog>:(mm.V{Xtot}:-mm.V{XY}:) / std=none 0
<analog> [v]=[0.,1600.] {v}->[v]=@


[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[eqn] new: [0] <itov> output Y.V
<analog>:(itov.V{K}:*itov.I{X}:) / std=gauss 0.1
<analog> [v]=[0.,3300.] {v}->[v]=@


[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn] new: [0] <iadd> output OUT.I
<analog>:((iadd.I{A}:+iadd.I{B}:)-iadd.I{C}:) / std=gauss ((1e-05*iadd.V{OUT}:)+0.001)
<analog> [v]=[-5.,10.] {v}->[v]=@


[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn] [FOUND-SOLS] ===> Found <102> solutions
[slvrsearch] > weight--: <mvar-goal>TRLacL
[eqn] -> [valid?] testing node 83
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=2

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 71
[eqn] <<< SAT => VALID >>
[eqn] [search_tree] Found enough solutions
[multi] === returned from partial search ===
[multi] >>> Partial Results Found <<<
[multi] done with search
[multi] found some partial solutions. Will add partial solution node and global
[multi] == Adding Local Solution : 83 ==
[multi]  > Added Local Solution
[multi]  > Finding Global Solution
[multi] found # steps: 30
[multi] found # steps: 30
[multi] # partial ids = 2
[multi]    remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] ihill_rep[0] cfg-in REP=TRclp
   [comp] ihill_rep[0] cfg-in n=2
   [comp] ihill_rep[0] cfg-in S=TetRp
   [comp] ihill_rep[0] cfg-in Vmax=0.4995
   [comp] ihill_rep[0] cfg-in Km=40
   [comp] ihill_rep[1] cfg-in REP=TRLacL
   [comp] ihill_rep[1] cfg-in n=2
   [comp] ihill_rep[1] cfg-in S=clp
   [comp] ihill_rep[1] cfg-in Vmax=0.4995
   [comp] ihill_rep[1] cfg-in Km=40
   [sln] generate ihill_rep[0].REP = TRclp
   [sln] add-comp ihill_rep[0]
   [sln] generate ihill_rep[1].REP = TRLacL
   [sln] add-comp ihill_rep[1]
   [sln] route ihill_rep[0].n = 2
   [sln] route ihill_rep[0].S = TetRp
   [sln] route ihill_rep[0].Vmax = 0.4995
   [sln] route ihill_rep[0].Km = 40
   [sln] route ihill_rep[1].n = 2
   [sln] route ihill_rep[1].S = clp
   [sln] route ihill_rep[1].Vmax = 0.4995
   [sln] route ihill_rep[1].Km = 40
   [comp] make-comp ihill_rep0
   [comp] make-comp ihill_rep1
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ==== ROUTES =====
[multi] > ihill_rep[1].S = clp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[0].S = TetRp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[1].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[0].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[1].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[0].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[1].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[0].Km = 40
[multi]    - making an input block.
[multi] ==== GENERATES =====
[multi] > ihill_rep[1].REP = TRLacL
[multi] > ihill_rep[0].REP = TRclp
[multi] --> Number of options 6
[multi] --> Number of nodes 1
[multi] ======= Partial (Root) Steps 60 =======
[multi]    remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] ihill_rep[0] cfg-in REP=TRclp
   [comp] ihill_rep[0] cfg-in n=2
   [comp] ihill_rep[0] cfg-in S=TetRp
   [comp] ihill_rep[0] cfg-in Vmax=0.4995
   [comp] ihill_rep[0] cfg-in Km=40
   [comp] ihill_rep[1] cfg-in REP=TRLacL
   [comp] ihill_rep[1] cfg-in n=2
   [comp] ihill_rep[1] cfg-in S=clp
   [comp] ihill_rep[1] cfg-in Vmax=0.4995
   [comp] ihill_rep[1] cfg-in Km=40
   [sln] generate ihill_rep[0].REP = TRclp
   [sln] add-comp ihill_rep[0]
   [sln] generate ihill_rep[1].REP = TRLacL
   [sln] add-comp ihill_rep[1]
   [sln] route ihill_rep[0].n = 2
   [sln] route ihill_rep[0].S = TetRp
   [sln] route ihill_rep[0].Vmax = 0.4995
   [sln] route ihill_rep[0].Km = 40
   [sln] route ihill_rep[1].n = 2
   [sln] route ihill_rep[1].S = clp
   [sln] route ihill_rep[1].Vmax = 0.4995
   [sln] route ihill_rep[1].Km = 40
   [comp] make-comp ihill_rep0
   [comp] make-comp ihill_rep1
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ============================
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.V[0] cfg-in X=2
     [comp] input.V[0] cfg-out O=2
     [comp] input.V[1] cfg-in X=2
     [comp] input.V[1] cfg-out O=2
     [comp] input.I[0] cfg-in X=0.4995
     [comp] input.I[0] cfg-out O=0.4995
     [comp] input.I[1] cfg-in X=0.4995
     [comp] input.I[1] cfg-out O=0.4995
     [comp] input.I[2] cfg-in X=40
     [comp] input.I[2] cfg-out O=40
     [comp] input.I[3] cfg-in X=40
     [comp] input.I[3] cfg-out O=40
     [sln] rm-route ihill_rep[1].n = 2
     [sln] add-comp input.V[0]
     [sln] generate input.V[0].O = 2
     [sln] rm-route ihill_rep[0].n = 2
     [sln] add-comp input.V[1]
     [sln] generate input.V[1].O = 2
     [sln] rm-route ihill_rep[1].Vmax = 0.4995
     [sln] add-comp input.I[0]
     [sln] generate input.I[0].O = 0.4995
     [sln] rm-route ihill_rep[0].Vmax = 0.4995
     [sln] add-comp input.I[1]
     [sln] generate input.I[1].O = 0.4995
     [sln] rm-route ihill_rep[1].Km = 40
     [sln] add-comp input.I[2]
     [sln] generate input.I[2].O = 40
     [sln] rm-route ihill_rep[0].Km = 40
     [sln] add-comp input.I[3]
     [sln] generate input.I[3].O = 40
     [sln] route input.V[0].X = 2
     [sln] route input.V[1].X = 2
     [sln] route input.I[0].X = 0.4995
     [sln] route input.I[1].X = 0.4995
     [sln] route input.I[2].X = 40
     [sln] route input.I[3].X = 40
     [comp] make-comp input.V0
     [comp] make-comp input.V1
     [comp] make-comp input.I0
     [comp] make-comp input.I1
     [comp] make-comp input.I2
     [comp] make-comp input.I3
     add-goal [547] [CONN] input.V[0].O => ihill_rep[1].n (2)
     add-goal [548] [CONN] input.V[1].O => ihill_rep[0].n (2)
     add-goal [549] [CONN] input.I[0].O => ihill_rep[1].Vmax (0.4995)
     add-goal [550] [CONN] input.I[1].O => ihill_rep[0].Vmax (0.4995)
     add-goal [551] [CONN] input.I[2].O => ihill_rep[1].Km (40)
     add-goal [552] [CONN] input.I[3].O => ihill_rep[0].Km (40)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[548] [CONN] input.V[1].O => ihill_rep[0].n (2)
[552] [CONN] input.I[3].O => ihill_rep[0].Km (40)
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[549] [CONN] input.I[0].O => ihill_rep[1].Vmax (0.4995)
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[547] [CONN] input.V[0].O => ihill_rep[1].n (2)
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[550] [CONN] input.I[1].O => ihill_rep[0].Vmax (0.4995)
[551] [CONN] input.I[2].O => ihill_rep[1].Km (40)
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> Current Goal: [551] [CONN] input.I[2].O => ihill_rep[1].Km (40)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 3
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=3

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] [TERMINATE] found 0 / 1
[eqn] [TERMINATE] could not find another node
[multi]   >> Found # Global Solutions: 1/1
[multi] >>>SOLUTION IS UNFINISHED <<<
[multi] # Found 0, Required: 1
[multi] solving target: TRTetR
[multi] search tree is not exhausted. adding existing:TRTetR
[multi] finding new partial solution
[multi] made a partial tree with 9 goals
[multi] find a partial solution
[multi] == Finding Local Solution ==
[multi] == Current # Solutions: 0
[multi] == # New Solutions To Find: 1
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}

============
>> Current Goal: [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
vgain.P -> true
switch.PROD -> true
ihill_stim.STIM -> true
ihill_rep.REP -> true
ihill_rep2.REP2 -> true
vadd.OUT -> true
vtoi.Y -> true
igenebind.GE -> true
mm.X -> true
mm.Y -> true
itov.Y -> true
iadd.OUT -> true
[eqn] >>> NUMBER OF COMPATIBLE COMPONENTS  12 <<<
[eqn] new: [0] <vgain> output P.V
<analog>:(vgain.V{X}:*vgain.I{Z}:) / std=none 0
<analog> [v]=[0.,5000.] {v}->[v]=@


[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn] new: [0] <switch> output PROD.I
<analog>:(switch.I{Vmax}:*(1/(((switch.I{SUB}:/switch.I{Kmod}:)+1)^(switch.V{n}:/500.)))) / std=none 0
<analog> [v]=[0.,10.] {v}->[v]=@


[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn] new: [0] <ihill_stim> output STIM.I
<analog>:(ihill_stim.I{Vmax}:*(((ihill_stim.I{S}:/ihill_stim.I{Km}:)^ihill_stim.V{n}:)/(((ihill_stim.I{S}:/ihill_stim.I{Km}:)^ihill_stim.V{n}:)+1))) / std=none 0
<analog> [v]=[0.,1000000.] {v}->[v]=@


[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 9 ssteps
[eqn] new: [0] <ihill_rep> output REP.I
<analog>:(ihill_rep.I{Vmax}:*((ihill_rep.I{Km}:^ihill_rep.V{n}:)/((ihill_rep.I{Km}:^ihill_rep.V{n}:)+(ihill_rep.I{S}:^ihill_rep.V{n}:)))) / std=none 0
<analog> [v]=[0.,80000.] {v}->[v]=@


[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn] new: [0] <ihill_rep2> output REP2.I
<analog>:(ihill_rep2.I{Vmax}:*(1/((ihill_rep2.I{S}:^ihill_rep2.V{n}:)+1))) / std=none 0
<analog> [v]=[0.,10.] {v}->[v]=@


[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn] new: [0] <vadd> output OUT.V
<analog>:(((vadd.V{A}:+(vadd.BSW*vadd.V{B}:))-(vadd.CSW*vadd.V{C}:))*0.25) / std=gauss ((0.001*vadd.V{OUT}:)+0.1)
<analog> [v]={[-825.,1650.] [0.,1650.] [-825.,825.] [0.,825.] } {v}->[v]=@


[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn] new: [0] <vtoi> output Y.I
<analog>:((1/vtoi.V{K}:)*vtoi.V{X}:) / std=gauss 1e-06
<analog> [v]=[0.,10.] {v}->[v]=@


[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn] new: [0] <igenebind> output GE.I
<analog>:(igenebind.I{Vmax}:*(1/(1+(igenebind.I{K}:*igenebind.I{TF}:)))) / std=none 0
<analog> [v]=[0.,10.] {v}->[v]=@


[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn] new: [0] <mm> output Y.V
<analog>:(mm.V{Ytot}:-mm.V{XY}:) / std=none 0
<analog> [v]=[0.,1600.] {v}->[v]=@


[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[eqn] new: [0] <mm> output X.V
<analog>:(mm.V{Xtot}:-mm.V{XY}:) / std=none 0
<analog> [v]=[0.,1600.] {v}->[v]=@


[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[eqn] new: [0] <itov> output Y.V
<analog>:(itov.V{K}:*itov.I{X}:) / std=gauss 0.1
<analog> [v]=[0.,3300.] {v}->[v]=@


[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn]     -> converted to 9 ssteps
[eqn] new: [0] <iadd> output OUT.I
<analog>:((iadd.I{A}:+iadd.I{B}:)-iadd.I{C}:) / std=gauss ((1e-05*iadd.V{OUT}:)+0.001)
<analog> [v]=[-5.,10.] {v}->[v]=@


[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn] [FOUND-SOLS] ===> Found <102> solutions
[slvrsearch] > weight--: <mvar-goal>TRTetR
[eqn] -> [valid?] testing node 83
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=4

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 71
[eqn] <<< SAT => VALID >>
[eqn] [search_tree] Found enough solutions
[multi] === returned from partial search ===
[multi] >>> Partial Results Found <<<
[multi] done with search
[multi] found some partial solutions. Will add partial solution node and global
[multi] == Adding Local Solution : 83 ==
[multi]  > Added Local Solution
[multi]  > Finding Global Solution
[multi] found # steps: 30
[multi] found # steps: 30
[multi] found # steps: 30
[multi] # partial ids = 3
[multi]    remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] ihill_rep[0] cfg-in REP=TRTetR
   [comp] ihill_rep[0] cfg-in n=2
   [comp] ihill_rep[0] cfg-in S=LacLp
   [comp] ihill_rep[0] cfg-in Vmax=0.4995
   [comp] ihill_rep[0] cfg-in Km=40
   [comp] ihill_rep[1] cfg-in REP=TRclp
   [comp] ihill_rep[1] cfg-in n=2
   [comp] ihill_rep[1] cfg-in S=TetRp
   [comp] ihill_rep[1] cfg-in Vmax=0.4995
   [comp] ihill_rep[1] cfg-in Km=40
   [comp] ihill_rep[2] cfg-in REP=TRLacL
   [comp] ihill_rep[2] cfg-in n=2
   [comp] ihill_rep[2] cfg-in S=clp
   [comp] ihill_rep[2] cfg-in Vmax=0.4995
   [comp] ihill_rep[2] cfg-in Km=40
   [sln] generate ihill_rep[0].REP = TRTetR
   [sln] add-comp ihill_rep[0]
   [sln] generate ihill_rep[1].REP = TRclp
   [sln] add-comp ihill_rep[1]
   [sln] generate ihill_rep[2].REP = TRLacL
   [sln] add-comp ihill_rep[2]
   [sln] route ihill_rep[0].n = 2
   [sln] route ihill_rep[0].S = LacLp
   [sln] route ihill_rep[0].Vmax = 0.4995
   [sln] route ihill_rep[0].Km = 40
   [sln] route ihill_rep[1].n = 2
   [sln] route ihill_rep[1].S = TetRp
   [sln] route ihill_rep[1].Vmax = 0.4995
   [sln] route ihill_rep[1].Km = 40
   [sln] route ihill_rep[2].n = 2
   [sln] route ihill_rep[2].S = clp
   [sln] route ihill_rep[2].Vmax = 0.4995
   [sln] route ihill_rep[2].Km = 40
   [comp] make-comp ihill_rep0
   [comp] make-comp ihill_rep1
   [comp] make-comp ihill_rep2
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ==== ROUTES =====
[multi] > ihill_rep[0].S = LacLp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[2].S = clp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[1].S = TetRp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[0].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[2].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[1].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[0].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[2].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[1].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[0].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[2].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[1].Km = 40
[multi]    - making an input block.
[multi] ==== GENERATES =====
[multi] > ihill_rep[0].REP = TRTetR
[multi] > ihill_rep[2].REP = TRLacL
[multi] > ihill_rep[1].REP = TRclp
[multi] --> Number of options 9
[multi] --> Number of nodes 1
[multi] ======= Partial (Root) Steps 90 =======
[multi]    remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] ihill_rep[0] cfg-in REP=TRTetR
   [comp] ihill_rep[0] cfg-in n=2
   [comp] ihill_rep[0] cfg-in S=LacLp
   [comp] ihill_rep[0] cfg-in Vmax=0.4995
   [comp] ihill_rep[0] cfg-in Km=40
   [comp] ihill_rep[1] cfg-in REP=TRclp
   [comp] ihill_rep[1] cfg-in n=2
   [comp] ihill_rep[1] cfg-in S=TetRp
   [comp] ihill_rep[1] cfg-in Vmax=0.4995
   [comp] ihill_rep[1] cfg-in Km=40
   [comp] ihill_rep[2] cfg-in REP=TRLacL
   [comp] ihill_rep[2] cfg-in n=2
   [comp] ihill_rep[2] cfg-in S=clp
   [comp] ihill_rep[2] cfg-in Vmax=0.4995
   [comp] ihill_rep[2] cfg-in Km=40
   [sln] generate ihill_rep[0].REP = TRTetR
   [sln] add-comp ihill_rep[0]
   [sln] generate ihill_rep[1].REP = TRclp
   [sln] add-comp ihill_rep[1]
   [sln] generate ihill_rep[2].REP = TRLacL
   [sln] add-comp ihill_rep[2]
   [sln] route ihill_rep[0].n = 2
   [sln] route ihill_rep[0].S = LacLp
   [sln] route ihill_rep[0].Vmax = 0.4995
   [sln] route ihill_rep[0].Km = 40
   [sln] route ihill_rep[1].n = 2
   [sln] route ihill_rep[1].S = TetRp
   [sln] route ihill_rep[1].Vmax = 0.4995
   [sln] route ihill_rep[1].Km = 40
   [sln] route ihill_rep[2].n = 2
   [sln] route ihill_rep[2].S = clp
   [sln] route ihill_rep[2].Vmax = 0.4995
   [sln] route ihill_rep[2].Km = 40
   [comp] make-comp ihill_rep0
   [comp] make-comp ihill_rep1
   [comp] make-comp ihill_rep2
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ============================
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.V[0] cfg-in X=2
     [comp] input.V[0] cfg-out O=2
     [comp] input.V[1] cfg-in X=2
     [comp] input.V[1] cfg-out O=2
     [comp] input.V[2] cfg-in X=2
     [comp] input.V[2] cfg-out O=2
     [comp] input.I[0] cfg-in X=0.4995
     [comp] input.I[0] cfg-out O=0.4995
     [comp] input.I[1] cfg-in X=0.4995
     [comp] input.I[1] cfg-out O=0.4995
     [comp] input.I[2] cfg-in X=0.4995
     [comp] input.I[2] cfg-out O=0.4995
     [comp] input.I[3] cfg-in X=40
     [comp] input.I[3] cfg-out O=40
     [comp] input.I[4] cfg-in X=40
     [comp] input.I[4] cfg-out O=40
     [comp] input.I[5] cfg-in X=40
     [comp] input.I[5] cfg-out O=40
     [sln] rm-route ihill_rep[0].n = 2
     [sln] add-comp input.V[0]
     [sln] generate input.V[0].O = 2
     [sln] rm-route ihill_rep[2].n = 2
     [sln] add-comp input.V[1]
     [sln] generate input.V[1].O = 2
     [sln] rm-route ihill_rep[1].n = 2
     [sln] add-comp input.V[2]
     [sln] generate input.V[2].O = 2
     [sln] rm-route ihill_rep[0].Vmax = 0.4995
     [sln] add-comp input.I[0]
     [sln] generate input.I[0].O = 0.4995
     [sln] rm-route ihill_rep[2].Vmax = 0.4995
     [sln] add-comp input.I[1]
     [sln] generate input.I[1].O = 0.4995
     [sln] rm-route ihill_rep[1].Vmax = 0.4995
     [sln] add-comp input.I[2]
     [sln] generate input.I[2].O = 0.4995
     [sln] rm-route ihill_rep[0].Km = 40
     [sln] add-comp input.I[3]
     [sln] generate input.I[3].O = 40
     [sln] rm-route ihill_rep[2].Km = 40
     [sln] add-comp input.I[4]
     [sln] generate input.I[4].O = 40
     [sln] rm-route ihill_rep[1].Km = 40
     [sln] add-comp input.I[5]
     [sln] generate input.I[5].O = 40
     [sln] route input.V[0].X = 2
     [sln] route input.V[1].X = 2
     [sln] route input.V[2].X = 2
     [sln] route input.I[0].X = 0.4995
     [sln] route input.I[1].X = 0.4995
     [sln] route input.I[2].X = 0.4995
     [sln] route input.I[3].X = 40
     [sln] route input.I[4].X = 40
     [sln] route input.I[5].X = 40
     [comp] make-comp input.V0
     [comp] make-comp input.V1
     [comp] make-comp input.V2
     [comp] make-comp input.I0
     [comp] make-comp input.I1
     [comp] make-comp input.I2
     [comp] make-comp input.I3
     [comp] make-comp input.I4
     [comp] make-comp input.I5
     add-goal [824] [CONN] input.V[0].O => ihill_rep[0].n (2)
     add-goal [825] [CONN] input.V[1].O => ihill_rep[2].n (2)
     add-goal [826] [CONN] input.V[2].O => ihill_rep[1].n (2)
     add-goal [827] [CONN] input.I[0].O => ihill_rep[0].Vmax (0.4995)
     add-goal [828] [CONN] input.I[1].O => ihill_rep[2].Vmax (0.4995)
     add-goal [829] [CONN] input.I[2].O => ihill_rep[1].Vmax (0.4995)
     add-goal [830] [CONN] input.I[3].O => ihill_rep[0].Km (40)
     add-goal [831] [CONN] input.I[4].O => ihill_rep[2].Km (40)
     add-goal [832] [CONN] input.I[5].O => ihill_rep[1].Km (40)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[828] [CONN] input.I[1].O => ihill_rep[2].Vmax (0.4995)
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[831] [CONN] input.I[4].O => ihill_rep[2].Km (40)
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[826] [CONN] input.V[2].O => ihill_rep[1].n (2)
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[832] [CONN] input.I[5].O => ihill_rep[1].Km (40)
[825] [CONN] input.V[1].O => ihill_rep[2].n (2)
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[830] [CONN] input.I[3].O => ihill_rep[0].Km (40)
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[827] [CONN] input.I[0].O => ihill_rep[0].Vmax (0.4995)
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[829] [CONN] input.I[2].O => ihill_rep[1].Vmax (0.4995)
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[824] [CONN] input.V[0].O => ihill_rep[0].n (2)
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> Current Goal: [824] [CONN] input.V[0].O => ihill_rep[0].n (2)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 3
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=5

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] [TERMINATE] found 0 / 1
[eqn] [TERMINATE] could not find another node
[multi]   >> Found # Global Solutions: 1/1
[multi] >>>SOLUTION IS UNFINISHED <<<
[multi] # Found 0, Required: 1
[multi] solving target: TetRp
[multi] search tree is not exhausted. adding existing:TetRp
[multi] finding new partial solution
[multi] made a partial tree with 9 goals
[multi] find a partial solution
[multi] == Finding Local Solution ==
[multi] == Current # Solutions: 0
[multi] == # New Solutions To Find: 1
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> Current Goal: [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
vdadd.OUT -> true
mm.XY -> true
[eqn] >>> NUMBER OF COMPATIBLE COMPONENTS  2 <<<
[eqn] new: [0] <vdadd> output OUT.V
<analog-st> ((vdadd.V{A}:+(vdadd.BSW*vdadd.V{B}:))-(vdadd.DSW*vdadd.I{D}:*vdadd.V{OUT}:)) ic=OUT_0.V / std=none 0
<analog-st> [ddt v]=?? {ddt v}->[ddt v]=@
<analog-st> [v]=[0.,12000.] {v}->[v]=@ {v}->*[v]=@


checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 11 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 11 ssteps
[eqn] new: [0] <mm> output XY.V
<analog-st> ((mm.I{kf}:*mm.V{X}:*mm.V{Y}:)-(mm.I{kr}:*mm.V{XY}:)) ic=XY0.V / std=gauss ((0.001*mm.V{XY}:)+0.1)
<analog-st> [ddt v]=?? {ddt v}->[ddt v]=@
<analog-st> [v]=[0.,3200.] {v}->[v]=@ {v}->*[v]=@


[eqn] [FOUND-SOLS] ===> Found <20> solutions
[slvrsearch] > weight--: <mvar-goal>TetRp
[eqn] -> [valid?] testing node 34
[eqn] <<< SAT => VALID >>
[eqn] found 0 / 1
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> Current Goal: [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
vgain.P -> true
vadd.OUT -> true
mm.X -> true
mm.Y -> true
itov.Y -> true
[eqn] >>> NUMBER OF COMPATIBLE COMPONENTS  5 <<<
[eqn] new: [0] <vgain> output P.V
<analog>:(vgain.V{X}:*vgain.I{Z}:) / std=none 0
<analog> [v]=[0.,5000.] {v}->[v]=@


[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn] new: [0] <vadd> output OUT.V
<analog>:(((vadd.V{A}:+(vadd.BSW*vadd.V{B}:))-(vadd.CSW*vadd.V{C}:))*0.25) / std=gauss ((0.001*vadd.V{OUT}:)+0.1)
<analog> [v]={[-825.,1650.] [0.,1650.] [-825.,825.] [0.,825.] } {v}->[v]=@


[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 13 ssteps
[eqn] new: [0] <mm> output Y.V
<analog>:(mm.V{Ytot}:-mm.V{XY}:) / std=none 0
<analog> [v]=[0.,1600.] {v}->[v]=@


[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[eqn] new: [0] <mm> output X.V
<analog>:(mm.V{Xtot}:-mm.V{XY}:) / std=none 0
<analog> [v]=[0.,1600.] {v}->[v]=@


[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[eqn] new: [0] <itov> output Y.V
<analog>:(itov.V{K}:*itov.I{X}:) / std=gauss 0.1
<analog> [v]=[0.,3300.] {v}->[v]=@


[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn] [FOUND-SOLS] ===> Found <40> solutions
[slvrsearch] > weight--: (3.01029995664*TetRm)
[eqn] -> [valid?] testing node 121
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=6

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 119
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=7

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 117
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=8

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 51
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=9

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 49
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=10

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 47
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=11

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 116
[eqn] <<< SAT => VALID >>
[eqn] [search_tree] Found enough solutions
[multi] === returned from partial search ===
[multi] >>> Partial Results Found <<<
[multi] done with search
[multi] found some partial solutions. Will add partial solution node and global
[multi] == Adding Local Solution : 47 ==
[multi] == Adding Local Solution : 49 ==
[multi] == Adding Local Solution : 117 ==
[multi] == Adding Local Solution : 119 ==
[multi] == Adding Local Solution : 121 ==
[multi] == Adding Local Solution : 51 ==
[multi]  > Added Local Solution
[multi]  > Finding Global Solution
[multi] found # steps: 30
[multi] found # steps: 43
[multi] found # steps: 30
[multi] found # steps: 30
[multi] # partial ids = 4
[multi]    remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [893] [EXPR]vdadd[2].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] ihill_rep[0] cfg-in REP=TRTetR
   [comp] ihill_rep[0] cfg-in n=2
   [comp] ihill_rep[0] cfg-in S=LacLp
   [comp] ihill_rep[0] cfg-in Vmax=0.4995
   [comp] ihill_rep[0] cfg-in Km=40
   [comp] vgain[1] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[1] cfg-in Z=3.01029995664
   [comp] vgain[1] cfg-in X=TetRm
   [comp] vdadd[2] cfg-in OUT_0=40
   [comp] vdadd[2] cfg-in OUT=TetRp
   [comp] vdadd[2] cfg-param BSW=1
   [comp] vdadd[2] cfg-param DSW=1
   [comp] vdadd[2] cfg-in B=0
   [comp] vdadd[2] cfg-in D=0.03010299956
   [comp] vdadd[2] cfg-in A=(3.01029995664*TetRm)
   [comp] ihill_rep[3] cfg-in REP=TRclp
   [comp] ihill_rep[3] cfg-in n=2
   [comp] ihill_rep[3] cfg-in S=TetRp
   [comp] ihill_rep[3] cfg-in Vmax=0.4995
   [comp] ihill_rep[3] cfg-in Km=40
   [comp] ihill_rep[4] cfg-in REP=TRLacL
   [comp] ihill_rep[4] cfg-in n=2
   [comp] ihill_rep[4] cfg-in S=clp
   [comp] ihill_rep[4] cfg-in Vmax=0.4995
   [comp] ihill_rep[4] cfg-in Km=40
   [sln] generate ihill_rep[0].REP = TRTetR
   [sln] add-comp ihill_rep[0]
   [sln] generate vgain[1].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[1]
   [sln] generate vgain[1].P = (3.01029995664*TetRm)
   [sln] conn vgain[1].P->vdadd[2].A
   [sln] generate vdadd[2].OUT = TetRp
   [sln] add-comp vdadd[2]
   [sln] generate ihill_rep[3].REP = TRclp
   [sln] add-comp ihill_rep[3]
   [sln] generate ihill_rep[4].REP = TRLacL
   [sln] add-comp ihill_rep[4]
   [sln] route ihill_rep[0].n = 2
   [sln] route ihill_rep[0].S = LacLp
   [sln] route ihill_rep[0].Vmax = 0.4995
   [sln] route ihill_rep[0].Km = 40
   [sln] route vgain[1].Z = 3.01029995664
   [sln] route vgain[1].X = TetRm
   [sln] route vdadd[2].OUT_0 = 40
   [sln] route vdadd[2].B = 0
   [sln] route vdadd[2].D = 0.03010299956
   [sln] route ihill_rep[3].n = 2
   [sln] route ihill_rep[3].S = TetRp
   [sln] route ihill_rep[3].Vmax = 0.4995
   [sln] route ihill_rep[3].Km = 40
   [sln] route ihill_rep[4].n = 2
   [sln] route ihill_rep[4].S = clp
   [sln] route ihill_rep[4].Vmax = 0.4995
   [sln] route ihill_rep[4].Km = 40
   [comp] make-comp ihill_rep0
   [comp] make-comp vgain1
   [comp] make-comp vdadd2
   [comp] make-comp ihill_rep3
   [comp] make-comp ihill_rep4
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[2].A<V>=(3.01029995664*TetRm)
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ==== ROUTES =====
[multi] > vgain[1].X = TetRm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[0].S = LacLp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[4].S = clp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[3].S = TetRp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[0].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[4].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[3].n = 2
[multi]    - making an input block.
[multi] > vdadd[2].B = 0
[multi]    - making an input block.
[multi] > ihill_rep[0].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[4].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[3].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[0].Km = 40
[multi]    - making an input block.
[multi] > vdadd[2].OUT_0 = 40
[multi]    - making an input block.
[multi] > ihill_rep[4].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[3].Km = 40
[multi]    - making an input block.
[multi] > vgain[1].Z = 3.01029995664
[multi]    - making an input block.
[multi] > vdadd[2].D = 0.03010299956
[multi]    - making an input block.
[multi] ==== GENERATES =====
[multi] > vdadd[2].OUT = TetRp
[multi]    - making an output block.
[multi] > ihill_rep[0].REP = TRTetR
[multi] > ihill_rep[4].REP = TRLacL
[multi] > ihill_rep[3].REP = TRclp
[multi] > vgain[1].P = (3.01029995664*TetRm)
[multi] > vgain[1].P = (3.01029995664*TetRm)
[multi] --> Number of options 15
[multi] --> Number of nodes 1
[multi] ======= Partial (Root) Steps 133 =======
[multi]    remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [893] [EXPR]vdadd[2].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] ihill_rep[0] cfg-in REP=TRTetR
   [comp] ihill_rep[0] cfg-in n=2
   [comp] ihill_rep[0] cfg-in S=LacLp
   [comp] ihill_rep[0] cfg-in Vmax=0.4995
   [comp] ihill_rep[0] cfg-in Km=40
   [comp] vgain[1] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[1] cfg-in Z=3.01029995664
   [comp] vgain[1] cfg-in X=TetRm
   [comp] vdadd[2] cfg-in OUT_0=40
   [comp] vdadd[2] cfg-in OUT=TetRp
   [comp] vdadd[2] cfg-param BSW=1
   [comp] vdadd[2] cfg-param DSW=1
   [comp] vdadd[2] cfg-in B=0
   [comp] vdadd[2] cfg-in D=0.03010299956
   [comp] vdadd[2] cfg-in A=(3.01029995664*TetRm)
   [comp] ihill_rep[3] cfg-in REP=TRclp
   [comp] ihill_rep[3] cfg-in n=2
   [comp] ihill_rep[3] cfg-in S=TetRp
   [comp] ihill_rep[3] cfg-in Vmax=0.4995
   [comp] ihill_rep[3] cfg-in Km=40
   [comp] ihill_rep[4] cfg-in REP=TRLacL
   [comp] ihill_rep[4] cfg-in n=2
   [comp] ihill_rep[4] cfg-in S=clp
   [comp] ihill_rep[4] cfg-in Vmax=0.4995
   [comp] ihill_rep[4] cfg-in Km=40
   [sln] generate ihill_rep[0].REP = TRTetR
   [sln] add-comp ihill_rep[0]
   [sln] generate vgain[1].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[1]
   [sln] generate vgain[1].P = (3.01029995664*TetRm)
   [sln] conn vgain[1].P->vdadd[2].A
   [sln] generate vdadd[2].OUT = TetRp
   [sln] add-comp vdadd[2]
   [sln] generate ihill_rep[3].REP = TRclp
   [sln] add-comp ihill_rep[3]
   [sln] generate ihill_rep[4].REP = TRLacL
   [sln] add-comp ihill_rep[4]
   [sln] route ihill_rep[0].n = 2
   [sln] route ihill_rep[0].S = LacLp
   [sln] route ihill_rep[0].Vmax = 0.4995
   [sln] route ihill_rep[0].Km = 40
   [sln] route vgain[1].Z = 3.01029995664
   [sln] route vgain[1].X = TetRm
   [sln] route vdadd[2].OUT_0 = 40
   [sln] route vdadd[2].B = 0
   [sln] route vdadd[2].D = 0.03010299956
   [sln] route ihill_rep[3].n = 2
   [sln] route ihill_rep[3].S = TetRp
   [sln] route ihill_rep[3].Vmax = 0.4995
   [sln] route ihill_rep[3].Km = 40
   [sln] route ihill_rep[4].n = 2
   [sln] route ihill_rep[4].S = clp
   [sln] route ihill_rep[4].Vmax = 0.4995
   [sln] route ihill_rep[4].Km = 40
   [comp] make-comp ihill_rep0
   [comp] make-comp vgain1
   [comp] make-comp vdadd2
   [comp] make-comp ihill_rep3
   [comp] make-comp ihill_rep4
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[2].A<V>=(3.01029995664*TetRm)
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ============================
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.V[0] cfg-in X=2
     [comp] input.V[0] cfg-out O=2
     [comp] input.V[1] cfg-in X=2
     [comp] input.V[1] cfg-out O=2
     [comp] input.V[2] cfg-in X=2
     [comp] input.V[2] cfg-out O=2
     [comp] input.V[3] cfg-in X=0
     [comp] input.V[3] cfg-out O=0
     [comp] input.I[0] cfg-in X=0.4995
     [comp] input.I[0] cfg-out O=0.4995
     [comp] input.I[1] cfg-in X=0.4995
     [comp] input.I[1] cfg-out O=0.4995
     [comp] input.I[2] cfg-in X=0.4995
     [comp] input.I[2] cfg-out O=0.4995
     [comp] input.I[3] cfg-in X=40
     [comp] input.I[3] cfg-out O=40
     [comp] input.V[4] cfg-in X=40
     [comp] input.V[4] cfg-out O=40
     [comp] input.I[4] cfg-in X=40
     [comp] input.I[4] cfg-out O=40
     [comp] input.I[5] cfg-in X=40
     [comp] input.I[5] cfg-out O=40
     [comp] input.I[6] cfg-in X=3.01029995664
     [comp] input.I[6] cfg-out O=3.01029995664
     [comp] input.I[7] cfg-in X=0.03010299956
     [comp] input.I[7] cfg-out O=0.03010299956
     [comp] output.V[0] cfg-in X=TetRp
     [comp] output.V[0] cfg-out O=TetRp
     [sln] rm-route ihill_rep[3].S = TetRp
     [sln] rm-route ihill_rep[0].n = 2
     [sln] add-comp input.V[0]
     [sln] generate input.V[0].O = 2
     [sln] rm-route ihill_rep[4].n = 2
     [sln] add-comp input.V[1]
     [sln] generate input.V[1].O = 2
     [sln] rm-route ihill_rep[3].n = 2
     [sln] add-comp input.V[2]
     [sln] generate input.V[2].O = 2
     [sln] rm-route vdadd[2].B = 0
     [sln] add-comp input.V[3]
     [sln] generate input.V[3].O = 0
     [sln] rm-route ihill_rep[0].Vmax = 0.4995
     [sln] add-comp input.I[0]
     [sln] generate input.I[0].O = 0.4995
     [sln] rm-route ihill_rep[4].Vmax = 0.4995
     [sln] add-comp input.I[1]
     [sln] generate input.I[1].O = 0.4995
     [sln] rm-route ihill_rep[3].Vmax = 0.4995
     [sln] add-comp input.I[2]
     [sln] generate input.I[2].O = 0.4995
     [sln] rm-route ihill_rep[0].Km = 40
     [sln] add-comp input.I[3]
     [sln] generate input.I[3].O = 40
     [sln] rm-route vdadd[2].OUT_0 = 40
     [sln] add-comp input.V[4]
     [sln] generate input.V[4].O = 40
     [sln] rm-route ihill_rep[4].Km = 40
     [sln] add-comp input.I[4]
     [sln] generate input.I[4].O = 40
     [sln] rm-route ihill_rep[3].Km = 40
     [sln] add-comp input.I[5]
     [sln] generate input.I[5].O = 40
     [sln] rm-route vgain[1].Z = 3.01029995664
     [sln] add-comp input.I[6]
     [sln] generate input.I[6].O = 3.01029995664
     [sln] rm-route vdadd[2].D = 0.03010299956
     [sln] add-comp input.I[7]
     [sln] generate input.I[7].O = 0.03010299956
     [sln] add-comp output.V[0]
     [sln] generate output.V[0].O = TetRp
     [sln] route input.V[0].X = 2
     [sln] route input.V[1].X = 2
     [sln] route input.V[2].X = 2
     [sln] route input.V[3].X = 0
     [sln] route input.I[0].X = 0.4995
     [sln] route input.I[1].X = 0.4995
     [sln] route input.I[2].X = 0.4995
     [sln] route input.I[3].X = 40
     [sln] route input.V[4].X = 40
     [sln] route input.I[4].X = 40
     [sln] route input.I[5].X = 40
     [sln] route input.I[6].X = 3.01029995664
     [sln] route input.I[7].X = 0.03010299956
     [comp] make-comp input.V0
     [comp] make-comp input.V1
     [comp] make-comp input.V2
     [comp] make-comp input.V3
     [comp] make-comp input.I0
     [comp] make-comp input.I1
     [comp] make-comp input.I2
     [comp] make-comp input.I3
     [comp] make-comp input.V4
     [comp] make-comp input.I4
     [comp] make-comp input.I5
     [comp] make-comp input.I6
     [comp] make-comp input.I7
     [comp] make-comp output.V0
     add-goal [992] [CONN] vdadd[2].OUT => ihill_rep[3].S (TetRp)
     add-goal [993] [CONN] input.V[0].O => ihill_rep[0].n (2)
     add-goal [994] [CONN] input.V[1].O => ihill_rep[4].n (2)
     add-goal [995] [CONN] input.V[2].O => ihill_rep[3].n (2)
     add-goal [996] [CONN] input.V[3].O => vdadd[2].B (0)
     add-goal [997] [CONN] input.I[0].O => ihill_rep[0].Vmax (0.4995)
     add-goal [998] [CONN] input.I[1].O => ihill_rep[4].Vmax (0.4995)
     add-goal [999] [CONN] input.I[2].O => ihill_rep[3].Vmax (0.4995)
     add-goal [1000] [CONN] input.I[3].O => ihill_rep[0].Km (40)
     add-goal [1001] [CONN] input.V[4].O => vdadd[2].OUT_0 (40)
     add-goal [1002] [CONN] input.I[4].O => ihill_rep[4].Km (40)
     add-goal [1003] [CONN] input.I[5].O => ihill_rep[3].Km (40)
     add-goal [1004] [CONN] input.I[6].O => vgain[1].Z (3.01029995664)
     add-goal [1005] [CONN] input.I[7].O => vdadd[2].D (0.03010299956)
     add-goal [1006] [CONN] vdadd[2].OUT => output.V[0].X (TetRp)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[997] [CONN] input.I[0].O => ihill_rep[0].Vmax (0.4995)
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1001] [CONN] input.V[4].O => vdadd[2].OUT_0 (40)
[1000] [CONN] input.I[3].O => ihill_rep[0].Km (40)
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1002] [CONN] input.I[4].O => ihill_rep[4].Km (40)
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[994] [CONN] input.V[1].O => ihill_rep[4].n (2)
[996] [CONN] input.V[3].O => vdadd[2].B (0)
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1006] [CONN] vdadd[2].OUT => output.V[0].X (TetRp)
[992] [CONN] vdadd[2].OUT => ihill_rep[3].S (TetRp)
[993] [CONN] input.V[0].O => ihill_rep[0].n (2)
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[995] [CONN] input.V[2].O => ihill_rep[3].n (2)
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1004] [CONN] input.I[6].O => vgain[1].Z (3.01029995664)
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1003] [CONN] input.I[5].O => ihill_rep[3].Km (40)
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[998] [CONN] input.I[1].O => ihill_rep[4].Vmax (0.4995)
[1005] [CONN] input.I[7].O => vdadd[2].D (0.03010299956)
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[999] [CONN] input.I[2].O => ihill_rep[3].Vmax (0.4995)
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> Current Goal: [999] [CONN] input.I[2].O => ihill_rep[3].Vmax (0.4995)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 3
[eqn] <<< SAT => VALID >>
[eqn] found 0 / 1
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1004] [CONN] input.I[6].O => vgain[1].Z (3.01029995664)
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> Current Goal: [1004] [CONN] input.I[6].O => vgain[1].Z (3.01029995664)
iadd.OUT || # ins: 3 / connected / I ?= I/distance=0
iadd.OUT -> true
[eqn] >>> NUMBER OF COMPATIBLE COMPONENTS  1 <<<
[eqn] new: [0] <iadd> output OUT.I
<analog>:((iadd.I{A}:+iadd.I{B}:)-iadd.I{C}:) / std=gauss ((1e-05*iadd.V{OUT}:)+0.001)
<analog> [v]=[-5.,10.] {v}->[v]=@


[eqn] ==== iadd====

[WARN][add_passthru_step.RAddInAssign] this assignment is perfect!: OUT=__tmp__
[WARN][add_passthru_step.RAddInAssign] this assignment is too complicated: C=(-1*__tmp__)
[eqn]     -> failed to convert unify steps
[eqn] ==== iadd====

[WARN][add_passthru_step.RAddInAssign] this assignment is perfect!: OUT=__tmp__
[WARN][add_passthru_step.RAddInAssign] this assignment is perfect!: A=__tmp__
[eqn]     -> converted to 12 ssteps
[eqn] ==== iadd====

[WARN][add_passthru_step.RAddInAssign] this assignment is perfect!: OUT=__tmp__
[WARN][add_passthru_step.RAddInAssign] this assignment is perfect!: B=__tmp__
[eqn]     -> converted to 12 ssteps
[eqn] [FOUND-SOLS] ===> Found <2> solutions
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vgain.Z
[eqn] -> [valid?] testing node 5
[eqn] <<< SAT => VALID >>
[eqn] found 0 / 1
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1008] [CONN] input.I[6].O => iadd[0].B (3.01029995664)
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> Current Goal: [1008] [CONN] input.I[6].O => iadd[0].B (3.01029995664)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->iadd.B
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 6
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=12

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 4
[eqn] <<< SAT => VALID >>
[eqn] [search_tree] Found enough solutions
[multi] ==== ROUTES =====
[multi] > vgain[1].X = TetRm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[0].S = LacLp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[4].S = clp
[multi]    - connecting generates to routes.
[multi] > input.V[0].X = 2
[multi]     - ignoring route to input block.
[multi] > input.V[1].X = 2
[multi]     - ignoring route to input block.
[multi] > input.V[2].X = 2
[multi]     - ignoring route to input block.
[multi] > iadd[0].C = 0
[multi]    - making an input block.
[multi] > input.V[3].X = 0
[multi]     - ignoring route to input block.
[multi] > iadd[0].A = 0
[multi]    - making an input block.
[multi] > input.I[0].X = 0.4995
[multi]     - ignoring route to input block.
[multi] > input.I[1].X = 0.4995
[multi]     - ignoring route to input block.
[multi] > input.I[2].X = 0.4995
[multi]     - ignoring route to input block.
[multi] > input.I[3].X = 40
[multi]     - ignoring route to input block.
[multi] > input.V[4].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[4].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[5].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[6].X = 3.01029995664
[multi]     - ignoring route to input block.
[multi] > input.I[7].X = 0.03010299956
[multi]     - ignoring route to input block.
[multi] ==== GENERATES =====
[multi] > vdadd[2].OUT = TetRp
[multi]     - ignoring connected output block
[multi] > output.V[0].O = TetRp
[multi]     - ignoring generate to output block.
[multi] > ihill_rep[0].REP = TRTetR
[multi] > ihill_rep[4].REP = TRLacL
[multi] > ihill_rep[3].REP = TRclp
[multi] > input.V[0].O = 2
[multi]     - ignoring generate to input block.
[multi] > input.V[2].O = 2
[multi]     - ignoring generate to input block.
[multi] > input.V[1].O = 2
[multi]     - ignoring generate to input block.
[multi] > input.V[3].O = 0
[multi]     - ignoring generate to input block.
[multi] > input.I[0].O = 0.4995
[multi]     - ignoring generate to input block.
[multi] > input.I[2].O = 0.4995
[multi]     - ignoring generate to input block.
[multi] > input.I[1].O = 0.4995
[multi]     - ignoring generate to input block.
[multi] > input.I[3].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.V[4].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.I[5].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.I[4].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.I[6].O = 3.01029995664
[multi]     - ignoring generate to input block.
[multi] > input.I[7].O = 0.03010299956
[multi]     - ignoring generate to input block.
[multi] > iadd[0].OUT = 3.01029995664
[multi] > vgain[1].P = (3.01029995664*TetRm)
[multi] > vgain[1].P = (3.01029995664*TetRm)
[multi] --> Number of options 2
[multi] --> Number of nodes 1
[multi] ======= New Path =======
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.I[8] cfg-in X=0
     [comp] input.I[8] cfg-out O=0
     [comp] input.I[9] cfg-in X=0
     [comp] input.I[9] cfg-out O=0
     [sln] rm-route iadd[0].C = 0
     [sln] add-comp input.I[8]
     [sln] generate input.I[8].O = 0
     [sln] rm-route iadd[0].A = 0
     [sln] add-comp input.I[9]
     [sln] generate input.I[9].O = 0
     [sln] route input.I[8].X = 0
     [sln] route input.I[9].X = 0
     [comp] make-comp input.I8
     [comp] make-comp input.I9
     add-goal [1009] [CONN] input.I[8].O => iadd[0].C (0)
     add-goal [1010] [CONN] input.I[9].O => iadd[0].A (0)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1007] [CONN] input.I[6].O => iadd[0].A (3.01029995664)
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> Current Goal: [1007] [CONN] input.I[6].O => iadd[0].A (3.01029995664)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->iadd.A
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 8
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=13

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 7
[eqn] <<< SAT => VALID >>
[eqn] [search_tree] Found enough solutions
[multi] ==== ROUTES =====
[multi] > vgain[1].X = TetRm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[0].S = LacLp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[4].S = clp
[multi]    - connecting generates to routes.
[multi] > input.V[0].X = 2
[multi]     - ignoring route to input block.
[multi] > input.V[1].X = 2
[multi]     - ignoring route to input block.
[multi] > input.V[2].X = 2
[multi]     - ignoring route to input block.
[multi] > iadd[0].C = 0
[multi]    - making an input block.
[multi] > input.V[3].X = 0
[multi]     - ignoring route to input block.
[multi] > iadd[0].B = 0
[multi]    - making an input block.
[multi] > input.I[0].X = 0.4995
[multi]     - ignoring route to input block.
[multi] > input.I[1].X = 0.4995
[multi]     - ignoring route to input block.
[multi] > input.I[2].X = 0.4995
[multi]     - ignoring route to input block.
[multi] > input.I[3].X = 40
[multi]     - ignoring route to input block.
[multi] > input.V[4].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[4].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[5].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[6].X = 3.01029995664
[multi]     - ignoring route to input block.
[multi] > input.I[7].X = 0.03010299956
[multi]     - ignoring route to input block.
[multi] ==== GENERATES =====
[multi] > vdadd[2].OUT = TetRp
[multi]     - ignoring connected output block
[multi] > output.V[0].O = TetRp
[multi]     - ignoring generate to output block.
[multi] > ihill_rep[0].REP = TRTetR
[multi] > ihill_rep[4].REP = TRLacL
[multi] > ihill_rep[3].REP = TRclp
[multi] > input.V[0].O = 2
[multi]     - ignoring generate to input block.
[multi] > input.V[2].O = 2
[multi]     - ignoring generate to input block.
[multi] > input.V[1].O = 2
[multi]     - ignoring generate to input block.
[multi] > input.V[3].O = 0
[multi]     - ignoring generate to input block.
[multi] > input.I[0].O = 0.4995
[multi]     - ignoring generate to input block.
[multi] > input.I[2].O = 0.4995
[multi]     - ignoring generate to input block.
[multi] > input.I[1].O = 0.4995
[multi]     - ignoring generate to input block.
[multi] > input.I[3].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.V[4].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.I[5].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.I[4].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.I[6].O = 3.01029995664
[multi]     - ignoring generate to input block.
[multi] > input.I[7].O = 0.03010299956
[multi]     - ignoring generate to input block.
[multi] > iadd[0].OUT = 3.01029995664
[multi] > vgain[1].P = (3.01029995664*TetRm)
[multi] > vgain[1].P = (3.01029995664*TetRm)
[multi] --> Number of options 2
[multi] --> Number of nodes 1
[multi] ======= New Path =======
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.I[10] cfg-in X=0
     [comp] input.I[10] cfg-out O=0
     [comp] input.I[11] cfg-in X=0
     [comp] input.I[11] cfg-out O=0
     [sln] rm-route iadd[0].C = 0
     [sln] add-comp input.I[10]
     [sln] generate input.I[10].O = 0
     [sln] rm-route iadd[0].B = 0
     [sln] add-comp input.I[11]
     [sln] generate input.I[11].O = 0
     [sln] route input.I[10].X = 0
     [sln] route input.I[11].X = 0
     [comp] make-comp input.I10
     [comp] make-comp input.I11
     add-goal [1011] [CONN] input.I[10].O => iadd[0].C (0)
     add-goal [1012] [CONN] input.I[11].O => iadd[0].B (0)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1011] [CONN] input.I[10].O => iadd[0].C (0)
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1012] [CONN] input.I[11].O => iadd[0].B (0)
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> Current Goal: [1012] [CONN] input.I[11].O => iadd[0].B (0)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->iadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->iadd.C
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 10
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=14

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 7
[eqn] <<< SAT => VALID >>
[eqn] [search_tree] Found enough solutions
[multi]   >> Found # Global Solutions: 1/1
[multi] >>>SOLUTION IS UNFINISHED <<<
[multi]  > Added Local Solution
[multi]  > Finding Global Solution
[multi] found # steps: 30
[multi] found # steps: 43
[multi] found # steps: 30
[multi] found # steps: 30
[multi] # partial ids = 4
[multi]    remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [893] [EXPR]vdadd[2].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] ihill_rep[0] cfg-in REP=TRTetR
   [comp] ihill_rep[0] cfg-in n=2
   [comp] ihill_rep[0] cfg-in S=LacLp
   [comp] ihill_rep[0] cfg-in Vmax=0.4995
   [comp] ihill_rep[0] cfg-in Km=40
   [comp] vgain[1] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[1] cfg-in X=TetRm
   [comp] vgain[1] cfg-in Z=3.01029995664
   [comp] vdadd[2] cfg-in OUT_0=40
   [comp] vdadd[2] cfg-in OUT=TetRp
   [comp] vdadd[2] cfg-param BSW=1
   [comp] vdadd[2] cfg-param DSW=1
   [comp] vdadd[2] cfg-in B=0
   [comp] vdadd[2] cfg-in D=0.03010299956
   [comp] vdadd[2] cfg-in A=(3.01029995664*TetRm)
   [comp] ihill_rep[3] cfg-in REP=TRclp
   [comp] ihill_rep[3] cfg-in n=2
   [comp] ihill_rep[3] cfg-in S=TetRp
   [comp] ihill_rep[3] cfg-in Vmax=0.4995
   [comp] ihill_rep[3] cfg-in Km=40
   [comp] ihill_rep[4] cfg-in REP=TRLacL
   [comp] ihill_rep[4] cfg-in n=2
   [comp] ihill_rep[4] cfg-in S=clp
   [comp] ihill_rep[4] cfg-in Vmax=0.4995
   [comp] ihill_rep[4] cfg-in Km=40
   [sln] generate ihill_rep[0].REP = TRTetR
   [sln] add-comp ihill_rep[0]
   [sln] generate vgain[1].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[1]
   [sln] generate vgain[1].P = (3.01029995664*TetRm)
   [sln] conn vgain[1].P->vdadd[2].A
   [sln] generate vdadd[2].OUT = TetRp
   [sln] add-comp vdadd[2]
   [sln] generate ihill_rep[3].REP = TRclp
   [sln] add-comp ihill_rep[3]
   [sln] generate ihill_rep[4].REP = TRLacL
   [sln] add-comp ihill_rep[4]
   [sln] route ihill_rep[0].n = 2
   [sln] route ihill_rep[0].S = LacLp
   [sln] route ihill_rep[0].Vmax = 0.4995
   [sln] route ihill_rep[0].Km = 40
   [sln] route vgain[1].X = TetRm
   [sln] route vgain[1].Z = 3.01029995664
   [sln] route vdadd[2].OUT_0 = 40
   [sln] route vdadd[2].B = 0
   [sln] route vdadd[2].D = 0.03010299956
   [sln] route ihill_rep[3].n = 2
   [sln] route ihill_rep[3].S = TetRp
   [sln] route ihill_rep[3].Vmax = 0.4995
   [sln] route ihill_rep[3].Km = 40
   [sln] route ihill_rep[4].n = 2
   [sln] route ihill_rep[4].S = clp
   [sln] route ihill_rep[4].Vmax = 0.4995
   [sln] route ihill_rep[4].Km = 40
   [comp] make-comp ihill_rep0
   [comp] make-comp vgain1
   [comp] make-comp vdadd2
   [comp] make-comp ihill_rep3
   [comp] make-comp ihill_rep4
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[2].A<V>=(3.01029995664*TetRm)
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ==== ROUTES =====
[multi] > vgain[1].X = TetRm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[0].S = LacLp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[4].S = clp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[3].S = TetRp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[0].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[4].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[3].n = 2
[multi]    - making an input block.
[multi] > vdadd[2].B = 0
[multi]    - making an input block.
[multi] > ihill_rep[0].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[4].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[3].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[0].Km = 40
[multi]    - making an input block.
[multi] > vdadd[2].OUT_0 = 40
[multi]    - making an input block.
[multi] > ihill_rep[4].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[3].Km = 40
[multi]    - making an input block.
[multi] > vgain[1].Z = 3.01029995664
[multi]    - making an input block.
[multi] > vdadd[2].D = 0.03010299956
[multi]    - making an input block.
[multi] ==== GENERATES =====
[multi] > vdadd[2].OUT = TetRp
[multi]    - making an output block.
[multi] > ihill_rep[0].REP = TRTetR
[multi] > ihill_rep[4].REP = TRLacL
[multi] > ihill_rep[3].REP = TRclp
[multi] > vgain[1].P = (3.01029995664*TetRm)
[multi] > vgain[1].P = (3.01029995664*TetRm)
[multi] --> Number of options 15
[multi] --> Number of nodes 1
[multi] ======= Partial (Root) Steps 133 =======
[multi]    remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [893] [EXPR]vdadd[2].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] ihill_rep[0] cfg-in REP=TRTetR
   [comp] ihill_rep[0] cfg-in n=2
   [comp] ihill_rep[0] cfg-in S=LacLp
   [comp] ihill_rep[0] cfg-in Vmax=0.4995
   [comp] ihill_rep[0] cfg-in Km=40
   [comp] vgain[1] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[1] cfg-in X=TetRm
   [comp] vgain[1] cfg-in Z=3.01029995664
   [comp] vdadd[2] cfg-in OUT_0=40
   [comp] vdadd[2] cfg-in OUT=TetRp
   [comp] vdadd[2] cfg-param BSW=1
   [comp] vdadd[2] cfg-param DSW=1
   [comp] vdadd[2] cfg-in B=0
   [comp] vdadd[2] cfg-in D=0.03010299956
   [comp] vdadd[2] cfg-in A=(3.01029995664*TetRm)
   [comp] ihill_rep[3] cfg-in REP=TRclp
   [comp] ihill_rep[3] cfg-in n=2
   [comp] ihill_rep[3] cfg-in S=TetRp
   [comp] ihill_rep[3] cfg-in Vmax=0.4995
   [comp] ihill_rep[3] cfg-in Km=40
   [comp] ihill_rep[4] cfg-in REP=TRLacL
   [comp] ihill_rep[4] cfg-in n=2
   [comp] ihill_rep[4] cfg-in S=clp
   [comp] ihill_rep[4] cfg-in Vmax=0.4995
   [comp] ihill_rep[4] cfg-in Km=40
   [sln] generate ihill_rep[0].REP = TRTetR
   [sln] add-comp ihill_rep[0]
   [sln] generate vgain[1].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[1]
   [sln] generate vgain[1].P = (3.01029995664*TetRm)
   [sln] conn vgain[1].P->vdadd[2].A
   [sln] generate vdadd[2].OUT = TetRp
   [sln] add-comp vdadd[2]
   [sln] generate ihill_rep[3].REP = TRclp
   [sln] add-comp ihill_rep[3]
   [sln] generate ihill_rep[4].REP = TRLacL
   [sln] add-comp ihill_rep[4]
   [sln] route ihill_rep[0].n = 2
   [sln] route ihill_rep[0].S = LacLp
   [sln] route ihill_rep[0].Vmax = 0.4995
   [sln] route ihill_rep[0].Km = 40
   [sln] route vgain[1].X = TetRm
   [sln] route vgain[1].Z = 3.01029995664
   [sln] route vdadd[2].OUT_0 = 40
   [sln] route vdadd[2].B = 0
   [sln] route vdadd[2].D = 0.03010299956
   [sln] route ihill_rep[3].n = 2
   [sln] route ihill_rep[3].S = TetRp
   [sln] route ihill_rep[3].Vmax = 0.4995
   [sln] route ihill_rep[3].Km = 40
   [sln] route ihill_rep[4].n = 2
   [sln] route ihill_rep[4].S = clp
   [sln] route ihill_rep[4].Vmax = 0.4995
   [sln] route ihill_rep[4].Km = 40
   [comp] make-comp ihill_rep0
   [comp] make-comp vgain1
   [comp] make-comp vdadd2
   [comp] make-comp ihill_rep3
   [comp] make-comp ihill_rep4
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[2].A<V>=(3.01029995664*TetRm)
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ============================
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.V[0] cfg-in X=2
     [comp] input.V[0] cfg-out O=2
     [comp] input.V[1] cfg-in X=2
     [comp] input.V[1] cfg-out O=2
     [comp] input.V[2] cfg-in X=2
     [comp] input.V[2] cfg-out O=2
     [comp] input.V[3] cfg-in X=0
     [comp] input.V[3] cfg-out O=0
     [comp] input.I[0] cfg-in X=0.4995
     [comp] input.I[0] cfg-out O=0.4995
     [comp] input.I[1] cfg-in X=0.4995
     [comp] input.I[1] cfg-out O=0.4995
     [comp] input.I[2] cfg-in X=0.4995
     [comp] input.I[2] cfg-out O=0.4995
     [comp] input.I[3] cfg-in X=40
     [comp] input.I[3] cfg-out O=40
     [comp] input.V[4] cfg-in X=40
     [comp] input.V[4] cfg-out O=40
     [comp] input.I[4] cfg-in X=40
     [comp] input.I[4] cfg-out O=40
     [comp] input.I[5] cfg-in X=40
     [comp] input.I[5] cfg-out O=40
     [comp] input.I[6] cfg-in X=3.01029995664
     [comp] input.I[6] cfg-out O=3.01029995664
     [comp] input.I[7] cfg-in X=0.03010299956
     [comp] input.I[7] cfg-out O=0.03010299956
     [comp] output.V[0] cfg-in X=TetRp
     [comp] output.V[0] cfg-out O=TetRp
     [sln] rm-route ihill_rep[3].S = TetRp
     [sln] rm-route ihill_rep[0].n = 2
     [sln] add-comp input.V[0]
     [sln] generate input.V[0].O = 2
     [sln] rm-route ihill_rep[4].n = 2
     [sln] add-comp input.V[1]
     [sln] generate input.V[1].O = 2
     [sln] rm-route ihill_rep[3].n = 2
     [sln] add-comp input.V[2]
     [sln] generate input.V[2].O = 2
     [sln] rm-route vdadd[2].B = 0
     [sln] add-comp input.V[3]
     [sln] generate input.V[3].O = 0
     [sln] rm-route ihill_rep[0].Vmax = 0.4995
     [sln] add-comp input.I[0]
     [sln] generate input.I[0].O = 0.4995
     [sln] rm-route ihill_rep[4].Vmax = 0.4995
     [sln] add-comp input.I[1]
     [sln] generate input.I[1].O = 0.4995
     [sln] rm-route ihill_rep[3].Vmax = 0.4995
     [sln] add-comp input.I[2]
     [sln] generate input.I[2].O = 0.4995
     [sln] rm-route ihill_rep[0].Km = 40
     [sln] add-comp input.I[3]
     [sln] generate input.I[3].O = 40
     [sln] rm-route vdadd[2].OUT_0 = 40
     [sln] add-comp input.V[4]
     [sln] generate input.V[4].O = 40
     [sln] rm-route ihill_rep[4].Km = 40
     [sln] add-comp input.I[4]
     [sln] generate input.I[4].O = 40
     [sln] rm-route ihill_rep[3].Km = 40
     [sln] add-comp input.I[5]
     [sln] generate input.I[5].O = 40
     [sln] rm-route vgain[1].Z = 3.01029995664
     [sln] add-comp input.I[6]
     [sln] generate input.I[6].O = 3.01029995664
     [sln] rm-route vdadd[2].D = 0.03010299956
     [sln] add-comp input.I[7]
     [sln] generate input.I[7].O = 0.03010299956
     [sln] add-comp output.V[0]
     [sln] generate output.V[0].O = TetRp
     [sln] route input.V[0].X = 2
     [sln] route input.V[1].X = 2
     [sln] route input.V[2].X = 2
     [sln] route input.V[3].X = 0
     [sln] route input.I[0].X = 0.4995
     [sln] route input.I[1].X = 0.4995
     [sln] route input.I[2].X = 0.4995
     [sln] route input.I[3].X = 40
     [sln] route input.V[4].X = 40
     [sln] route input.I[4].X = 40
     [sln] route input.I[5].X = 40
     [sln] route input.I[6].X = 3.01029995664
     [sln] route input.I[7].X = 0.03010299956
     [comp] make-comp input.V0
     [comp] make-comp input.V1
     [comp] make-comp input.V2
     [comp] make-comp input.V3
     [comp] make-comp input.I0
     [comp] make-comp input.I1
     [comp] make-comp input.I2
     [comp] make-comp input.I3
     [comp] make-comp input.V4
     [comp] make-comp input.I4
     [comp] make-comp input.I5
     [comp] make-comp input.I6
     [comp] make-comp input.I7
     [comp] make-comp output.V0
     add-goal [1013] [CONN] vdadd[2].OUT => ihill_rep[3].S (TetRp)
     add-goal [1014] [CONN] input.V[0].O => ihill_rep[0].n (2)
     add-goal [1015] [CONN] input.V[1].O => ihill_rep[4].n (2)
     add-goal [1016] [CONN] input.V[2].O => ihill_rep[3].n (2)
     add-goal [1017] [CONN] input.V[3].O => vdadd[2].B (0)
     add-goal [1018] [CONN] input.I[0].O => ihill_rep[0].Vmax (0.4995)
     add-goal [1019] [CONN] input.I[1].O => ihill_rep[4].Vmax (0.4995)
     add-goal [1020] [CONN] input.I[2].O => ihill_rep[3].Vmax (0.4995)
     add-goal [1021] [CONN] input.I[3].O => ihill_rep[0].Km (40)
     add-goal [1022] [CONN] input.V[4].O => vdadd[2].OUT_0 (40)
     add-goal [1023] [CONN] input.I[4].O => ihill_rep[4].Km (40)
     add-goal [1024] [CONN] input.I[5].O => ihill_rep[3].Km (40)
     add-goal [1025] [CONN] input.I[6].O => vgain[1].Z (3.01029995664)
     add-goal [1026] [CONN] input.I[7].O => vdadd[2].D (0.03010299956)
     add-goal [1027] [CONN] vdadd[2].OUT => output.V[0].X (TetRp)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1016] [CONN] input.V[2].O => ihill_rep[3].n (2)
[1018] [CONN] input.I[0].O => ihill_rep[0].Vmax (0.4995)
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1025] [CONN] input.I[6].O => vgain[1].Z (3.01029995664)
[1021] [CONN] input.I[3].O => ihill_rep[0].Km (40)
[1023] [CONN] input.I[4].O => ihill_rep[4].Km (40)
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1019] [CONN] input.I[1].O => ihill_rep[4].Vmax (0.4995)
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1022] [CONN] input.V[4].O => vdadd[2].OUT_0 (40)
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1017] [CONN] input.V[3].O => vdadd[2].B (0)
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1020] [CONN] input.I[2].O => ihill_rep[3].Vmax (0.4995)
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1024] [CONN] input.I[5].O => ihill_rep[3].Km (40)
[1026] [CONN] input.I[7].O => vdadd[2].D (0.03010299956)
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1027] [CONN] vdadd[2].OUT => output.V[0].X (TetRp)
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1014] [CONN] input.V[0].O => ihill_rep[0].n (2)
[1015] [CONN] input.V[1].O => ihill_rep[4].n (2)
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1013] [CONN] vdadd[2].OUT => ihill_rep[3].S (TetRp)
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> Current Goal: [1013] [CONN] vdadd[2].OUT => ihill_rep[3].S (TetRp)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 3
[eqn] <<< SAT => VALID >>
[eqn] found 0 / 1
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1025] [CONN] input.I[6].O => vgain[1].Z (3.01029995664)
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> Current Goal: [1025] [CONN] input.I[6].O => vgain[1].Z (3.01029995664)
iadd.OUT || # ins: 3 / connected / I ?= I/distance=0
iadd.OUT -> true
[eqn] >>> NUMBER OF COMPATIBLE COMPONENTS  1 <<<
[eqn] new: [0] <iadd> output OUT.I
<analog>:((iadd.I{A}:+iadd.I{B}:)-iadd.I{C}:) / std=gauss ((1e-05*iadd.V{OUT}:)+0.001)
<analog> [v]=[-5.,10.] {v}->[v]=@


[eqn] ==== iadd====

[WARN][add_passthru_step.RAddInAssign] this assignment is perfect!: OUT=__tmp__
[WARN][add_passthru_step.RAddInAssign] this assignment is too complicated: C=(-1*__tmp__)
[eqn]     -> failed to convert unify steps
[eqn] ==== iadd====

[WARN][add_passthru_step.RAddInAssign] this assignment is perfect!: OUT=__tmp__
[WARN][add_passthru_step.RAddInAssign] this assignment is perfect!: A=__tmp__
[eqn]     -> converted to 12 ssteps
[eqn] ==== iadd====

[WARN][add_passthru_step.RAddInAssign] this assignment is perfect!: OUT=__tmp__
[WARN][add_passthru_step.RAddInAssign] this assignment is perfect!: B=__tmp__
[eqn]     -> converted to 12 ssteps
[eqn] [FOUND-SOLS] ===> Found <2> solutions
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vgain.Z
[eqn] -> [valid?] testing node 5
[eqn] <<< SAT => VALID >>
[eqn] found 0 / 1
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1029] [CONN] input.I[6].O => iadd[0].B (3.01029995664)
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> Current Goal: [1029] [CONN] input.I[6].O => iadd[0].B (3.01029995664)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->iadd.B
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 6
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=15

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 4
[eqn] <<< SAT => VALID >>
[eqn] [search_tree] Found enough solutions
[multi] ==== ROUTES =====
[multi] > vgain[1].X = TetRm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[0].S = LacLp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[4].S = clp
[multi]    - connecting generates to routes.
[multi] > input.V[0].X = 2
[multi]     - ignoring route to input block.
[multi] > input.V[1].X = 2
[multi]     - ignoring route to input block.
[multi] > input.V[2].X = 2
[multi]     - ignoring route to input block.
[multi] > iadd[0].C = 0
[multi]    - making an input block.
[multi] > input.V[3].X = 0
[multi]     - ignoring route to input block.
[multi] > iadd[0].A = 0
[multi]    - making an input block.
[multi] > input.I[0].X = 0.4995
[multi]     - ignoring route to input block.
[multi] > input.I[1].X = 0.4995
[multi]     - ignoring route to input block.
[multi] > input.I[2].X = 0.4995
[multi]     - ignoring route to input block.
[multi] > input.I[3].X = 40
[multi]     - ignoring route to input block.
[multi] > input.V[4].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[4].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[5].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[6].X = 3.01029995664
[multi]     - ignoring route to input block.
[multi] > input.I[7].X = 0.03010299956
[multi]     - ignoring route to input block.
[multi] ==== GENERATES =====
[multi] > vdadd[2].OUT = TetRp
[multi]     - ignoring connected output block
[multi] > output.V[0].O = TetRp
[multi]     - ignoring generate to output block.
[multi] > ihill_rep[0].REP = TRTetR
[multi] > ihill_rep[4].REP = TRLacL
[multi] > ihill_rep[3].REP = TRclp
[multi] > input.V[0].O = 2
[multi]     - ignoring generate to input block.
[multi] > input.V[2].O = 2
[multi]     - ignoring generate to input block.
[multi] > input.V[1].O = 2
[multi]     - ignoring generate to input block.
[multi] > input.V[3].O = 0
[multi]     - ignoring generate to input block.
[multi] > input.I[0].O = 0.4995
[multi]     - ignoring generate to input block.
[multi] > input.I[2].O = 0.4995
[multi]     - ignoring generate to input block.
[multi] > input.I[1].O = 0.4995
[multi]     - ignoring generate to input block.
[multi] > input.I[3].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.V[4].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.I[5].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.I[4].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.I[6].O = 3.01029995664
[multi]     - ignoring generate to input block.
[multi] > input.I[7].O = 0.03010299956
[multi]     - ignoring generate to input block.
[multi] > iadd[0].OUT = 3.01029995664
[multi] > vgain[1].P = (3.01029995664*TetRm)
[multi] > vgain[1].P = (3.01029995664*TetRm)
[multi] --> Number of options 2
[multi] --> Number of nodes 1
[multi] ======= New Path =======
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.I[8] cfg-in X=0
     [comp] input.I[8] cfg-out O=0
     [comp] input.I[9] cfg-in X=0
     [comp] input.I[9] cfg-out O=0
     [sln] rm-route iadd[0].C = 0
     [sln] add-comp input.I[8]
     [sln] generate input.I[8].O = 0
     [sln] rm-route iadd[0].A = 0
     [sln] add-comp input.I[9]
     [sln] generate input.I[9].O = 0
     [sln] route input.I[8].X = 0
     [sln] route input.I[9].X = 0
     [comp] make-comp input.I8
     [comp] make-comp input.I9
     add-goal [1030] [CONN] input.I[8].O => iadd[0].C (0)
     add-goal [1031] [CONN] input.I[9].O => iadd[0].A (0)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1028] [CONN] input.I[6].O => iadd[0].A (3.01029995664)
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> Current Goal: [1028] [CONN] input.I[6].O => iadd[0].A (3.01029995664)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->iadd.A
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 8
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=16

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 7
[eqn] <<< SAT => VALID >>
[eqn] [search_tree] Found enough solutions
[multi] ==== ROUTES =====
[multi] > vgain[1].X = TetRm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[0].S = LacLp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[4].S = clp
[multi]    - connecting generates to routes.
[multi] > input.V[0].X = 2
[multi]     - ignoring route to input block.
[multi] > input.V[1].X = 2
[multi]     - ignoring route to input block.
[multi] > input.V[2].X = 2
[multi]     - ignoring route to input block.
[multi] > iadd[0].C = 0
[multi]    - making an input block.
[multi] > input.V[3].X = 0
[multi]     - ignoring route to input block.
[multi] > iadd[0].B = 0
[multi]    - making an input block.
[multi] > input.I[0].X = 0.4995
[multi]     - ignoring route to input block.
[multi] > input.I[1].X = 0.4995
[multi]     - ignoring route to input block.
[multi] > input.I[2].X = 0.4995
[multi]     - ignoring route to input block.
[multi] > input.I[3].X = 40
[multi]     - ignoring route to input block.
[multi] > input.V[4].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[4].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[5].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[6].X = 3.01029995664
[multi]     - ignoring route to input block.
[multi] > input.I[7].X = 0.03010299956
[multi]     - ignoring route to input block.
[multi] ==== GENERATES =====
[multi] > vdadd[2].OUT = TetRp
[multi]     - ignoring connected output block
[multi] > output.V[0].O = TetRp
[multi]     - ignoring generate to output block.
[multi] > ihill_rep[0].REP = TRTetR
[multi] > ihill_rep[4].REP = TRLacL
[multi] > ihill_rep[3].REP = TRclp
[multi] > input.V[0].O = 2
[multi]     - ignoring generate to input block.
[multi] > input.V[2].O = 2
[multi]     - ignoring generate to input block.
[multi] > input.V[1].O = 2
[multi]     - ignoring generate to input block.
[multi] > input.V[3].O = 0
[multi]     - ignoring generate to input block.
[multi] > input.I[0].O = 0.4995
[multi]     - ignoring generate to input block.
[multi] > input.I[2].O = 0.4995
[multi]     - ignoring generate to input block.
[multi] > input.I[1].O = 0.4995
[multi]     - ignoring generate to input block.
[multi] > input.I[3].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.V[4].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.I[5].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.I[4].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.I[6].O = 3.01029995664
[multi]     - ignoring generate to input block.
[multi] > input.I[7].O = 0.03010299956
[multi]     - ignoring generate to input block.
[multi] > iadd[0].OUT = 3.01029995664
[multi] > vgain[1].P = (3.01029995664*TetRm)
[multi] > vgain[1].P = (3.01029995664*TetRm)
[multi] --> Number of options 2
[multi] --> Number of nodes 1
[multi] ======= New Path =======
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.I[10] cfg-in X=0
     [comp] input.I[10] cfg-out O=0
     [comp] input.I[11] cfg-in X=0
     [comp] input.I[11] cfg-out O=0
     [sln] rm-route iadd[0].C = 0
     [sln] add-comp input.I[10]
     [sln] generate input.I[10].O = 0
     [sln] rm-route iadd[0].B = 0
     [sln] add-comp input.I[11]
     [sln] generate input.I[11].O = 0
     [sln] route input.I[10].X = 0
     [sln] route input.I[11].X = 0
     [comp] make-comp input.I10
     [comp] make-comp input.I11
     add-goal [1032] [CONN] input.I[10].O => iadd[0].C (0)
     add-goal [1033] [CONN] input.I[11].O => iadd[0].B (0)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1032] [CONN] input.I[10].O => iadd[0].C (0)
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1033] [CONN] input.I[11].O => iadd[0].B (0)
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> Current Goal: [1033] [CONN] input.I[11].O => iadd[0].B (0)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->iadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->iadd.C
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 10
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=17

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 7
[eqn] <<< SAT => VALID >>
[eqn] [search_tree] Found enough solutions
[multi]   >> Found # Global Solutions: 1/1
[multi] >>>SOLUTION IS UNFINISHED <<<
[multi]  > Added Local Solution
[multi]  > Finding Global Solution
[multi] found # steps: 43
[multi] found # steps: 30
[multi] found # steps: 30
[multi] found # steps: 30
[multi] # partial ids = 4
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] itov[0] cfg-in Y=(3.01029995664*TetRm)
   [comp] itov[0] cfg-in K=TetRm
   [comp] itov[0] cfg-in X=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] ihill_rep[2] cfg-in REP=TRTetR
   [comp] ihill_rep[2] cfg-in n=2
   [comp] ihill_rep[2] cfg-in S=LacLp
   [comp] ihill_rep[2] cfg-in Vmax=0.4995
   [comp] ihill_rep[2] cfg-in Km=40
   [comp] ihill_rep[3] cfg-in REP=TRclp
   [comp] ihill_rep[3] cfg-in n=2
   [comp] ihill_rep[3] cfg-in S=TetRp
   [comp] ihill_rep[3] cfg-in Vmax=0.4995
   [comp] ihill_rep[3] cfg-in Km=40
   [comp] ihill_rep[4] cfg-in REP=TRLacL
   [comp] ihill_rep[4] cfg-in n=2
   [comp] ihill_rep[4] cfg-in S=clp
   [comp] ihill_rep[4] cfg-in Vmax=0.4995
   [comp] ihill_rep[4] cfg-in Km=40
   [sln] generate itov[0].Y = (3.01029995664*TetRm)
   [sln] add-comp itov[0]
   [sln] generate itov[0].Y = (3.01029995664*TetRm)
   [sln] conn itov[0].Y->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate ihill_rep[2].REP = TRTetR
   [sln] add-comp ihill_rep[2]
   [sln] generate ihill_rep[3].REP = TRclp
   [sln] add-comp ihill_rep[3]
   [sln] generate ihill_rep[4].REP = TRLacL
   [sln] add-comp ihill_rep[4]
   [sln] route itov[0].K = TetRm
   [sln] route itov[0].X = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route ihill_rep[2].n = 2
   [sln] route ihill_rep[2].S = LacLp
   [sln] route ihill_rep[2].Vmax = 0.4995
   [sln] route ihill_rep[2].Km = 40
   [sln] route ihill_rep[3].n = 2
   [sln] route ihill_rep[3].S = TetRp
   [sln] route ihill_rep[3].Vmax = 0.4995
   [sln] route ihill_rep[3].Km = 40
   [sln] route ihill_rep[4].n = 2
   [sln] route ihill_rep[4].S = clp
   [sln] route ihill_rep[4].Vmax = 0.4995
   [sln] route ihill_rep[4].Km = 40
   [comp] make-comp itov0
   [comp] make-comp vdadd1
   [comp] make-comp ihill_rep2
   [comp] make-comp ihill_rep3
   [comp] make-comp ihill_rep4
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ==== ROUTES =====
[multi] > itov[0].K = TetRm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[2].S = LacLp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[4].S = clp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[3].S = TetRp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[2].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[4].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[3].n = 2
[multi]    - making an input block.
[multi] > vdadd[1].B = 0
[multi]    - making an input block.
[multi] > ihill_rep[2].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[4].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[3].Vmax = 0.4995
[multi]    - making an input block.
[multi] > vdadd[1].OUT_0 = 40
[multi]    - making an input block.
[multi] > ihill_rep[2].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[4].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[3].Km = 40
[multi]    - making an input block.
[multi] > itov[0].X = 3.01029995664
[multi]    - making an input block.
[multi] > vdadd[1].D = 0.03010299956
[multi]    - making an input block.
[multi] ==== GENERATES =====
[multi] > vdadd[1].OUT = TetRp
[multi]    - making an output block.
[multi] > ihill_rep[2].REP = TRTetR
[multi] > ihill_rep[4].REP = TRLacL
[multi] > ihill_rep[3].REP = TRclp
[multi] > itov[0].Y = (3.01029995664*TetRm)
[multi] > itov[0].Y = (3.01029995664*TetRm)
[multi] --> Number of options 15
[multi] --> Number of nodes 1
[multi] ======= Partial (Root) Steps 133 =======
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] itov[0] cfg-in Y=(3.01029995664*TetRm)
   [comp] itov[0] cfg-in K=TetRm
   [comp] itov[0] cfg-in X=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] ihill_rep[2] cfg-in REP=TRTetR
   [comp] ihill_rep[2] cfg-in n=2
   [comp] ihill_rep[2] cfg-in S=LacLp
   [comp] ihill_rep[2] cfg-in Vmax=0.4995
   [comp] ihill_rep[2] cfg-in Km=40
   [comp] ihill_rep[3] cfg-in REP=TRclp
   [comp] ihill_rep[3] cfg-in n=2
   [comp] ihill_rep[3] cfg-in S=TetRp
   [comp] ihill_rep[3] cfg-in Vmax=0.4995
   [comp] ihill_rep[3] cfg-in Km=40
   [comp] ihill_rep[4] cfg-in REP=TRLacL
   [comp] ihill_rep[4] cfg-in n=2
   [comp] ihill_rep[4] cfg-in S=clp
   [comp] ihill_rep[4] cfg-in Vmax=0.4995
   [comp] ihill_rep[4] cfg-in Km=40
   [sln] generate itov[0].Y = (3.01029995664*TetRm)
   [sln] add-comp itov[0]
   [sln] generate itov[0].Y = (3.01029995664*TetRm)
   [sln] conn itov[0].Y->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate ihill_rep[2].REP = TRTetR
   [sln] add-comp ihill_rep[2]
   [sln] generate ihill_rep[3].REP = TRclp
   [sln] add-comp ihill_rep[3]
   [sln] generate ihill_rep[4].REP = TRLacL
   [sln] add-comp ihill_rep[4]
   [sln] route itov[0].K = TetRm
   [sln] route itov[0].X = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route ihill_rep[2].n = 2
   [sln] route ihill_rep[2].S = LacLp
   [sln] route ihill_rep[2].Vmax = 0.4995
   [sln] route ihill_rep[2].Km = 40
   [sln] route ihill_rep[3].n = 2
   [sln] route ihill_rep[3].S = TetRp
   [sln] route ihill_rep[3].Vmax = 0.4995
   [sln] route ihill_rep[3].Km = 40
   [sln] route ihill_rep[4].n = 2
   [sln] route ihill_rep[4].S = clp
   [sln] route ihill_rep[4].Vmax = 0.4995
   [sln] route ihill_rep[4].Km = 40
   [comp] make-comp itov0
   [comp] make-comp vdadd1
   [comp] make-comp ihill_rep2
   [comp] make-comp ihill_rep3
   [comp] make-comp ihill_rep4
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ============================
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.V[0] cfg-in X=2
     [comp] input.V[0] cfg-out O=2
     [comp] input.V[1] cfg-in X=2
     [comp] input.V[1] cfg-out O=2
     [comp] input.V[2] cfg-in X=2
     [comp] input.V[2] cfg-out O=2
     [comp] input.V[3] cfg-in X=0
     [comp] input.V[3] cfg-out O=0
     [comp] input.I[0] cfg-in X=0.4995
     [comp] input.I[0] cfg-out O=0.4995
     [comp] input.I[1] cfg-in X=0.4995
     [comp] input.I[1] cfg-out O=0.4995
     [comp] input.I[2] cfg-in X=0.4995
     [comp] input.I[2] cfg-out O=0.4995
     [comp] input.V[4] cfg-in X=40
     [comp] input.V[4] cfg-out O=40
     [comp] input.I[3] cfg-in X=40
     [comp] input.I[3] cfg-out O=40
     [comp] input.I[4] cfg-in X=40
     [comp] input.I[4] cfg-out O=40
     [comp] input.I[5] cfg-in X=40
     [comp] input.I[5] cfg-out O=40
     [comp] input.I[6] cfg-in X=3.01029995664
     [comp] input.I[6] cfg-out O=3.01029995664
     [comp] input.I[7] cfg-in X=0.03010299956
     [comp] input.I[7] cfg-out O=0.03010299956
     [comp] output.V[0] cfg-in X=TetRp
     [comp] output.V[0] cfg-out O=TetRp
     [sln] rm-route ihill_rep[3].S = TetRp
     [sln] rm-route ihill_rep[2].n = 2
     [sln] add-comp input.V[0]
     [sln] generate input.V[0].O = 2
     [sln] rm-route ihill_rep[4].n = 2
     [sln] add-comp input.V[1]
     [sln] generate input.V[1].O = 2
     [sln] rm-route ihill_rep[3].n = 2
     [sln] add-comp input.V[2]
     [sln] generate input.V[2].O = 2
     [sln] rm-route vdadd[1].B = 0
     [sln] add-comp input.V[3]
     [sln] generate input.V[3].O = 0
     [sln] rm-route ihill_rep[2].Vmax = 0.4995
     [sln] add-comp input.I[0]
     [sln] generate input.I[0].O = 0.4995
     [sln] rm-route ihill_rep[4].Vmax = 0.4995
     [sln] add-comp input.I[1]
     [sln] generate input.I[1].O = 0.4995
     [sln] rm-route ihill_rep[3].Vmax = 0.4995
     [sln] add-comp input.I[2]
     [sln] generate input.I[2].O = 0.4995
     [sln] rm-route vdadd[1].OUT_0 = 40
     [sln] add-comp input.V[4]
     [sln] generate input.V[4].O = 40
     [sln] rm-route ihill_rep[2].Km = 40
     [sln] add-comp input.I[3]
     [sln] generate input.I[3].O = 40
     [sln] rm-route ihill_rep[4].Km = 40
     [sln] add-comp input.I[4]
     [sln] generate input.I[4].O = 40
     [sln] rm-route ihill_rep[3].Km = 40
     [sln] add-comp input.I[5]
     [sln] generate input.I[5].O = 40
     [sln] rm-route itov[0].X = 3.01029995664
     [sln] add-comp input.I[6]
     [sln] generate input.I[6].O = 3.01029995664
     [sln] rm-route vdadd[1].D = 0.03010299956
     [sln] add-comp input.I[7]
     [sln] generate input.I[7].O = 0.03010299956
     [sln] add-comp output.V[0]
     [sln] generate output.V[0].O = TetRp
     [sln] route input.V[0].X = 2
     [sln] route input.V[1].X = 2
     [sln] route input.V[2].X = 2
     [sln] route input.V[3].X = 0
     [sln] route input.I[0].X = 0.4995
     [sln] route input.I[1].X = 0.4995
     [sln] route input.I[2].X = 0.4995
     [sln] route input.V[4].X = 40
     [sln] route input.I[3].X = 40
     [sln] route input.I[4].X = 40
     [sln] route input.I[5].X = 40
     [sln] route input.I[6].X = 3.01029995664
     [sln] route input.I[7].X = 0.03010299956
     [comp] make-comp input.V0
     [comp] make-comp input.V1
     [comp] make-comp input.V2
     [comp] make-comp input.V3
     [comp] make-comp input.I0
     [comp] make-comp input.I1
     [comp] make-comp input.I2
     [comp] make-comp input.V4
     [comp] make-comp input.I3
     [comp] make-comp input.I4
     [comp] make-comp input.I5
     [comp] make-comp input.I6
     [comp] make-comp input.I7
     [comp] make-comp output.V0
     add-goal [1034] [CONN] vdadd[1].OUT => ihill_rep[3].S (TetRp)
     add-goal [1035] [CONN] input.V[0].O => ihill_rep[2].n (2)
     add-goal [1036] [CONN] input.V[1].O => ihill_rep[4].n (2)
     add-goal [1037] [CONN] input.V[2].O => ihill_rep[3].n (2)
     add-goal [1038] [CONN] input.V[3].O => vdadd[1].B (0)
     add-goal [1039] [CONN] input.I[0].O => ihill_rep[2].Vmax (0.4995)
     add-goal [1040] [CONN] input.I[1].O => ihill_rep[4].Vmax (0.4995)
     add-goal [1041] [CONN] input.I[2].O => ihill_rep[3].Vmax (0.4995)
     add-goal [1042] [CONN] input.V[4].O => vdadd[1].OUT_0 (40)
     add-goal [1043] [CONN] input.I[3].O => ihill_rep[2].Km (40)
     add-goal [1044] [CONN] input.I[4].O => ihill_rep[4].Km (40)
     add-goal [1045] [CONN] input.I[5].O => ihill_rep[3].Km (40)
     add-goal [1046] [CONN] input.I[6].O => itov[0].X (3.01029995664)
     add-goal [1047] [CONN] input.I[7].O => vdadd[1].D (0.03010299956)
     add-goal [1048] [CONN] vdadd[1].OUT => output.V[0].X (TetRp)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[1042] [CONN] input.V[4].O => vdadd[1].OUT_0 (40)
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1037] [CONN] input.V[2].O => ihill_rep[3].n (2)
[1038] [CONN] input.V[3].O => vdadd[1].B (0)
[1044] [CONN] input.I[4].O => ihill_rep[4].Km (40)
[1047] [CONN] input.I[7].O => vdadd[1].D (0.03010299956)
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1039] [CONN] input.I[0].O => ihill_rep[2].Vmax (0.4995)
[1040] [CONN] input.I[1].O => ihill_rep[4].Vmax (0.4995)
[1043] [CONN] input.I[3].O => ihill_rep[2].Km (40)
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1048] [CONN] vdadd[1].OUT => output.V[0].X (TetRp)
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1035] [CONN] input.V[0].O => ihill_rep[2].n (2)
[1036] [CONN] input.V[1].O => ihill_rep[4].n (2)
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1046] [CONN] input.I[6].O => itov[0].X (3.01029995664)
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1034] [CONN] vdadd[1].OUT => ihill_rep[3].S (TetRp)
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1041] [CONN] input.I[2].O => ihill_rep[3].Vmax (0.4995)
[1045] [CONN] input.I[5].O => ihill_rep[3].Km (40)
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> Current Goal: [1045] [CONN] input.I[5].O => ihill_rep[3].Km (40)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->itov.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 3
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=18

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] [TERMINATE] found 0 / 1
[eqn] [TERMINATE] could not find another node
[multi]   >> Found # Global Solutions: 1/1
[multi] >>>SOLUTION IS UNFINISHED <<<
[multi]  > Added Local Solution
[multi]  > Finding Global Solution
[multi] found # steps: 43
[multi] found # steps: 30
[multi] found # steps: 30
[multi] found # steps: 30
[multi] # partial ids = 4
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] itov[0] cfg-in Y=(3.01029995664*TetRm)
   [comp] itov[0] cfg-in K=TetRm
   [comp] itov[0] cfg-in X=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] ihill_rep[2] cfg-in REP=TRTetR
   [comp] ihill_rep[2] cfg-in n=2
   [comp] ihill_rep[2] cfg-in S=LacLp
   [comp] ihill_rep[2] cfg-in Vmax=0.4995
   [comp] ihill_rep[2] cfg-in Km=40
   [comp] ihill_rep[3] cfg-in REP=TRclp
   [comp] ihill_rep[3] cfg-in n=2
   [comp] ihill_rep[3] cfg-in S=TetRp
   [comp] ihill_rep[3] cfg-in Vmax=0.4995
   [comp] ihill_rep[3] cfg-in Km=40
   [comp] ihill_rep[4] cfg-in REP=TRLacL
   [comp] ihill_rep[4] cfg-in n=2
   [comp] ihill_rep[4] cfg-in S=clp
   [comp] ihill_rep[4] cfg-in Vmax=0.4995
   [comp] ihill_rep[4] cfg-in Km=40
   [sln] generate itov[0].Y = (3.01029995664*TetRm)
   [sln] add-comp itov[0]
   [sln] generate itov[0].Y = (3.01029995664*TetRm)
   [sln] conn itov[0].Y->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate ihill_rep[2].REP = TRTetR
   [sln] add-comp ihill_rep[2]
   [sln] generate ihill_rep[3].REP = TRclp
   [sln] add-comp ihill_rep[3]
   [sln] generate ihill_rep[4].REP = TRLacL
   [sln] add-comp ihill_rep[4]
   [sln] route itov[0].K = TetRm
   [sln] route itov[0].X = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route ihill_rep[2].n = 2
   [sln] route ihill_rep[2].S = LacLp
   [sln] route ihill_rep[2].Vmax = 0.4995
   [sln] route ihill_rep[2].Km = 40
   [sln] route ihill_rep[3].n = 2
   [sln] route ihill_rep[3].S = TetRp
   [sln] route ihill_rep[3].Vmax = 0.4995
   [sln] route ihill_rep[3].Km = 40
   [sln] route ihill_rep[4].n = 2
   [sln] route ihill_rep[4].S = clp
   [sln] route ihill_rep[4].Vmax = 0.4995
   [sln] route ihill_rep[4].Km = 40
   [comp] make-comp itov0
   [comp] make-comp vdadd1
   [comp] make-comp ihill_rep2
   [comp] make-comp ihill_rep3
   [comp] make-comp ihill_rep4
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ==== ROUTES =====
[multi] > itov[0].K = TetRm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[2].S = LacLp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[4].S = clp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[3].S = TetRp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[2].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[4].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[3].n = 2
[multi]    - making an input block.
[multi] > vdadd[1].B = 0
[multi]    - making an input block.
[multi] > ihill_rep[2].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[4].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[3].Vmax = 0.4995
[multi]    - making an input block.
[multi] > vdadd[1].OUT_0 = 40
[multi]    - making an input block.
[multi] > ihill_rep[2].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[4].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[3].Km = 40
[multi]    - making an input block.
[multi] > itov[0].X = 3.01029995664
[multi]    - making an input block.
[multi] > vdadd[1].D = 0.03010299956
[multi]    - making an input block.
[multi] ==== GENERATES =====
[multi] > vdadd[1].OUT = TetRp
[multi]    - making an output block.
[multi] > ihill_rep[2].REP = TRTetR
[multi] > ihill_rep[4].REP = TRLacL
[multi] > ihill_rep[3].REP = TRclp
[multi] > itov[0].Y = (3.01029995664*TetRm)
[multi] > itov[0].Y = (3.01029995664*TetRm)
[multi] --> Number of options 15
[multi] --> Number of nodes 1
[multi] ======= Partial (Root) Steps 133 =======
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] itov[0] cfg-in Y=(3.01029995664*TetRm)
   [comp] itov[0] cfg-in K=TetRm
   [comp] itov[0] cfg-in X=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] ihill_rep[2] cfg-in REP=TRTetR
   [comp] ihill_rep[2] cfg-in n=2
   [comp] ihill_rep[2] cfg-in S=LacLp
   [comp] ihill_rep[2] cfg-in Vmax=0.4995
   [comp] ihill_rep[2] cfg-in Km=40
   [comp] ihill_rep[3] cfg-in REP=TRclp
   [comp] ihill_rep[3] cfg-in n=2
   [comp] ihill_rep[3] cfg-in S=TetRp
   [comp] ihill_rep[3] cfg-in Vmax=0.4995
   [comp] ihill_rep[3] cfg-in Km=40
   [comp] ihill_rep[4] cfg-in REP=TRLacL
   [comp] ihill_rep[4] cfg-in n=2
   [comp] ihill_rep[4] cfg-in S=clp
   [comp] ihill_rep[4] cfg-in Vmax=0.4995
   [comp] ihill_rep[4] cfg-in Km=40
   [sln] generate itov[0].Y = (3.01029995664*TetRm)
   [sln] add-comp itov[0]
   [sln] generate itov[0].Y = (3.01029995664*TetRm)
   [sln] conn itov[0].Y->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate ihill_rep[2].REP = TRTetR
   [sln] add-comp ihill_rep[2]
   [sln] generate ihill_rep[3].REP = TRclp
   [sln] add-comp ihill_rep[3]
   [sln] generate ihill_rep[4].REP = TRLacL
   [sln] add-comp ihill_rep[4]
   [sln] route itov[0].K = TetRm
   [sln] route itov[0].X = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route ihill_rep[2].n = 2
   [sln] route ihill_rep[2].S = LacLp
   [sln] route ihill_rep[2].Vmax = 0.4995
   [sln] route ihill_rep[2].Km = 40
   [sln] route ihill_rep[3].n = 2
   [sln] route ihill_rep[3].S = TetRp
   [sln] route ihill_rep[3].Vmax = 0.4995
   [sln] route ihill_rep[3].Km = 40
   [sln] route ihill_rep[4].n = 2
   [sln] route ihill_rep[4].S = clp
   [sln] route ihill_rep[4].Vmax = 0.4995
   [sln] route ihill_rep[4].Km = 40
   [comp] make-comp itov0
   [comp] make-comp vdadd1
   [comp] make-comp ihill_rep2
   [comp] make-comp ihill_rep3
   [comp] make-comp ihill_rep4
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ============================
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.V[0] cfg-in X=2
     [comp] input.V[0] cfg-out O=2
     [comp] input.V[1] cfg-in X=2
     [comp] input.V[1] cfg-out O=2
     [comp] input.V[2] cfg-in X=2
     [comp] input.V[2] cfg-out O=2
     [comp] input.V[3] cfg-in X=0
     [comp] input.V[3] cfg-out O=0
     [comp] input.I[0] cfg-in X=0.4995
     [comp] input.I[0] cfg-out O=0.4995
     [comp] input.I[1] cfg-in X=0.4995
     [comp] input.I[1] cfg-out O=0.4995
     [comp] input.I[2] cfg-in X=0.4995
     [comp] input.I[2] cfg-out O=0.4995
     [comp] input.V[4] cfg-in X=40
     [comp] input.V[4] cfg-out O=40
     [comp] input.I[3] cfg-in X=40
     [comp] input.I[3] cfg-out O=40
     [comp] input.I[4] cfg-in X=40
     [comp] input.I[4] cfg-out O=40
     [comp] input.I[5] cfg-in X=40
     [comp] input.I[5] cfg-out O=40
     [comp] input.I[6] cfg-in X=3.01029995664
     [comp] input.I[6] cfg-out O=3.01029995664
     [comp] input.I[7] cfg-in X=0.03010299956
     [comp] input.I[7] cfg-out O=0.03010299956
     [comp] output.V[0] cfg-in X=TetRp
     [comp] output.V[0] cfg-out O=TetRp
     [sln] rm-route ihill_rep[3].S = TetRp
     [sln] rm-route ihill_rep[2].n = 2
     [sln] add-comp input.V[0]
     [sln] generate input.V[0].O = 2
     [sln] rm-route ihill_rep[4].n = 2
     [sln] add-comp input.V[1]
     [sln] generate input.V[1].O = 2
     [sln] rm-route ihill_rep[3].n = 2
     [sln] add-comp input.V[2]
     [sln] generate input.V[2].O = 2
     [sln] rm-route vdadd[1].B = 0
     [sln] add-comp input.V[3]
     [sln] generate input.V[3].O = 0
     [sln] rm-route ihill_rep[2].Vmax = 0.4995
     [sln] add-comp input.I[0]
     [sln] generate input.I[0].O = 0.4995
     [sln] rm-route ihill_rep[4].Vmax = 0.4995
     [sln] add-comp input.I[1]
     [sln] generate input.I[1].O = 0.4995
     [sln] rm-route ihill_rep[3].Vmax = 0.4995
     [sln] add-comp input.I[2]
     [sln] generate input.I[2].O = 0.4995
     [sln] rm-route vdadd[1].OUT_0 = 40
     [sln] add-comp input.V[4]
     [sln] generate input.V[4].O = 40
     [sln] rm-route ihill_rep[2].Km = 40
     [sln] add-comp input.I[3]
     [sln] generate input.I[3].O = 40
     [sln] rm-route ihill_rep[4].Km = 40
     [sln] add-comp input.I[4]
     [sln] generate input.I[4].O = 40
     [sln] rm-route ihill_rep[3].Km = 40
     [sln] add-comp input.I[5]
     [sln] generate input.I[5].O = 40
     [sln] rm-route itov[0].X = 3.01029995664
     [sln] add-comp input.I[6]
     [sln] generate input.I[6].O = 3.01029995664
     [sln] rm-route vdadd[1].D = 0.03010299956
     [sln] add-comp input.I[7]
     [sln] generate input.I[7].O = 0.03010299956
     [sln] add-comp output.V[0]
     [sln] generate output.V[0].O = TetRp
     [sln] route input.V[0].X = 2
     [sln] route input.V[1].X = 2
     [sln] route input.V[2].X = 2
     [sln] route input.V[3].X = 0
     [sln] route input.I[0].X = 0.4995
     [sln] route input.I[1].X = 0.4995
     [sln] route input.I[2].X = 0.4995
     [sln] route input.V[4].X = 40
     [sln] route input.I[3].X = 40
     [sln] route input.I[4].X = 40
     [sln] route input.I[5].X = 40
     [sln] route input.I[6].X = 3.01029995664
     [sln] route input.I[7].X = 0.03010299956
     [comp] make-comp input.V0
     [comp] make-comp input.V1
     [comp] make-comp input.V2
     [comp] make-comp input.V3
     [comp] make-comp input.I0
     [comp] make-comp input.I1
     [comp] make-comp input.I2
     [comp] make-comp input.V4
     [comp] make-comp input.I3
     [comp] make-comp input.I4
     [comp] make-comp input.I5
     [comp] make-comp input.I6
     [comp] make-comp input.I7
     [comp] make-comp output.V0
     add-goal [1049] [CONN] vdadd[1].OUT => ihill_rep[3].S (TetRp)
     add-goal [1050] [CONN] input.V[0].O => ihill_rep[2].n (2)
     add-goal [1051] [CONN] input.V[1].O => ihill_rep[4].n (2)
     add-goal [1052] [CONN] input.V[2].O => ihill_rep[3].n (2)
     add-goal [1053] [CONN] input.V[3].O => vdadd[1].B (0)
     add-goal [1054] [CONN] input.I[0].O => ihill_rep[2].Vmax (0.4995)
     add-goal [1055] [CONN] input.I[1].O => ihill_rep[4].Vmax (0.4995)
     add-goal [1056] [CONN] input.I[2].O => ihill_rep[3].Vmax (0.4995)
     add-goal [1057] [CONN] input.V[4].O => vdadd[1].OUT_0 (40)
     add-goal [1058] [CONN] input.I[3].O => ihill_rep[2].Km (40)
     add-goal [1059] [CONN] input.I[4].O => ihill_rep[4].Km (40)
     add-goal [1060] [CONN] input.I[5].O => ihill_rep[3].Km (40)
     add-goal [1061] [CONN] input.I[6].O => itov[0].X (3.01029995664)
     add-goal [1062] [CONN] input.I[7].O => vdadd[1].D (0.03010299956)
     add-goal [1063] [CONN] vdadd[1].OUT => output.V[0].X (TetRp)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1058] [CONN] input.I[3].O => ihill_rep[2].Km (40)
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1054] [CONN] input.I[0].O => ihill_rep[2].Vmax (0.4995)
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1061] [CONN] input.I[6].O => itov[0].X (3.01029995664)
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1060] [CONN] input.I[5].O => ihill_rep[3].Km (40)
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1057] [CONN] input.V[4].O => vdadd[1].OUT_0 (40)
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1053] [CONN] input.V[3].O => vdadd[1].B (0)
[1055] [CONN] input.I[1].O => ihill_rep[4].Vmax (0.4995)
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1063] [CONN] vdadd[1].OUT => output.V[0].X (TetRp)
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1062] [CONN] input.I[7].O => vdadd[1].D (0.03010299956)
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1050] [CONN] input.V[0].O => ihill_rep[2].n (2)
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1051] [CONN] input.V[1].O => ihill_rep[4].n (2)
[1059] [CONN] input.I[4].O => ihill_rep[4].Km (40)
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1052] [CONN] input.V[2].O => ihill_rep[3].n (2)
[1056] [CONN] input.I[2].O => ihill_rep[3].Vmax (0.4995)
[1049] [CONN] vdadd[1].OUT => ihill_rep[3].S (TetRp)
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> Current Goal: [1049] [CONN] vdadd[1].OUT => ihill_rep[3].S (TetRp)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->itov.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 3
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=19

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] [TERMINATE] found 0 / 1
[eqn] [TERMINATE] could not find another node
[multi]   >> Found # Global Solutions: 1/1
[multi] >>>SOLUTION IS UNFINISHED <<<
[multi]  > Added Local Solution
[multi]  > Finding Global Solution
[multi] found # steps: 43
[multi] found # steps: 30
[multi] found # steps: 30
[multi] found # steps: 30
[multi] # partial ids = 4
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] itov[0] cfg-in Y=(3.01029995664*TetRm)
   [comp] itov[0] cfg-in X=TetRm
   [comp] itov[0] cfg-in K=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] ihill_rep[2] cfg-in REP=TRTetR
   [comp] ihill_rep[2] cfg-in n=2
   [comp] ihill_rep[2] cfg-in S=LacLp
   [comp] ihill_rep[2] cfg-in Vmax=0.4995
   [comp] ihill_rep[2] cfg-in Km=40
   [comp] ihill_rep[3] cfg-in REP=TRclp
   [comp] ihill_rep[3] cfg-in n=2
   [comp] ihill_rep[3] cfg-in S=TetRp
   [comp] ihill_rep[3] cfg-in Vmax=0.4995
   [comp] ihill_rep[3] cfg-in Km=40
   [comp] ihill_rep[4] cfg-in REP=TRLacL
   [comp] ihill_rep[4] cfg-in n=2
   [comp] ihill_rep[4] cfg-in S=clp
   [comp] ihill_rep[4] cfg-in Vmax=0.4995
   [comp] ihill_rep[4] cfg-in Km=40
   [sln] generate itov[0].Y = (3.01029995664*TetRm)
   [sln] add-comp itov[0]
   [sln] generate itov[0].Y = (3.01029995664*TetRm)
   [sln] conn itov[0].Y->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate ihill_rep[2].REP = TRTetR
   [sln] add-comp ihill_rep[2]
   [sln] generate ihill_rep[3].REP = TRclp
   [sln] add-comp ihill_rep[3]
   [sln] generate ihill_rep[4].REP = TRLacL
   [sln] add-comp ihill_rep[4]
   [sln] route itov[0].X = TetRm
   [sln] route itov[0].K = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route ihill_rep[2].n = 2
   [sln] route ihill_rep[2].S = LacLp
   [sln] route ihill_rep[2].Vmax = 0.4995
   [sln] route ihill_rep[2].Km = 40
   [sln] route ihill_rep[3].n = 2
   [sln] route ihill_rep[3].S = TetRp
   [sln] route ihill_rep[3].Vmax = 0.4995
   [sln] route ihill_rep[3].Km = 40
   [sln] route ihill_rep[4].n = 2
   [sln] route ihill_rep[4].S = clp
   [sln] route ihill_rep[4].Vmax = 0.4995
   [sln] route ihill_rep[4].Km = 40
   [comp] make-comp itov0
   [comp] make-comp vdadd1
   [comp] make-comp ihill_rep2
   [comp] make-comp ihill_rep3
   [comp] make-comp ihill_rep4
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ==== ROUTES =====
[multi] > itov[0].X = TetRm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[2].S = LacLp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[4].S = clp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[3].S = TetRp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[2].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[4].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[3].n = 2
[multi]    - making an input block.
[multi] > vdadd[1].B = 0
[multi]    - making an input block.
[multi] > ihill_rep[2].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[4].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[3].Vmax = 0.4995
[multi]    - making an input block.
[multi] > vdadd[1].OUT_0 = 40
[multi]    - making an input block.
[multi] > ihill_rep[2].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[4].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[3].Km = 40
[multi]    - making an input block.
[multi] > itov[0].K = 3.01029995664
[multi]    - making an input block.
[multi] > vdadd[1].D = 0.03010299956
[multi]    - making an input block.
[multi] ==== GENERATES =====
[multi] > vdadd[1].OUT = TetRp
[multi]    - making an output block.
[multi] > ihill_rep[2].REP = TRTetR
[multi] > ihill_rep[4].REP = TRLacL
[multi] > ihill_rep[3].REP = TRclp
[multi] > itov[0].Y = (3.01029995664*TetRm)
[multi] > itov[0].Y = (3.01029995664*TetRm)
[multi] --> Number of options 15
[multi] --> Number of nodes 1
[multi] ======= Partial (Root) Steps 133 =======
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] itov[0] cfg-in Y=(3.01029995664*TetRm)
   [comp] itov[0] cfg-in X=TetRm
   [comp] itov[0] cfg-in K=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] ihill_rep[2] cfg-in REP=TRTetR
   [comp] ihill_rep[2] cfg-in n=2
   [comp] ihill_rep[2] cfg-in S=LacLp
   [comp] ihill_rep[2] cfg-in Vmax=0.4995
   [comp] ihill_rep[2] cfg-in Km=40
   [comp] ihill_rep[3] cfg-in REP=TRclp
   [comp] ihill_rep[3] cfg-in n=2
   [comp] ihill_rep[3] cfg-in S=TetRp
   [comp] ihill_rep[3] cfg-in Vmax=0.4995
   [comp] ihill_rep[3] cfg-in Km=40
   [comp] ihill_rep[4] cfg-in REP=TRLacL
   [comp] ihill_rep[4] cfg-in n=2
   [comp] ihill_rep[4] cfg-in S=clp
   [comp] ihill_rep[4] cfg-in Vmax=0.4995
   [comp] ihill_rep[4] cfg-in Km=40
   [sln] generate itov[0].Y = (3.01029995664*TetRm)
   [sln] add-comp itov[0]
   [sln] generate itov[0].Y = (3.01029995664*TetRm)
   [sln] conn itov[0].Y->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate ihill_rep[2].REP = TRTetR
   [sln] add-comp ihill_rep[2]
   [sln] generate ihill_rep[3].REP = TRclp
   [sln] add-comp ihill_rep[3]
   [sln] generate ihill_rep[4].REP = TRLacL
   [sln] add-comp ihill_rep[4]
   [sln] route itov[0].X = TetRm
   [sln] route itov[0].K = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route ihill_rep[2].n = 2
   [sln] route ihill_rep[2].S = LacLp
   [sln] route ihill_rep[2].Vmax = 0.4995
   [sln] route ihill_rep[2].Km = 40
   [sln] route ihill_rep[3].n = 2
   [sln] route ihill_rep[3].S = TetRp
   [sln] route ihill_rep[3].Vmax = 0.4995
   [sln] route ihill_rep[3].Km = 40
   [sln] route ihill_rep[4].n = 2
   [sln] route ihill_rep[4].S = clp
   [sln] route ihill_rep[4].Vmax = 0.4995
   [sln] route ihill_rep[4].Km = 40
   [comp] make-comp itov0
   [comp] make-comp vdadd1
   [comp] make-comp ihill_rep2
   [comp] make-comp ihill_rep3
   [comp] make-comp ihill_rep4
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ============================
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.V[0] cfg-in X=2
     [comp] input.V[0] cfg-out O=2
     [comp] input.V[1] cfg-in X=2
     [comp] input.V[1] cfg-out O=2
     [comp] input.V[2] cfg-in X=2
     [comp] input.V[2] cfg-out O=2
     [comp] input.V[3] cfg-in X=0
     [comp] input.V[3] cfg-out O=0
     [comp] input.I[0] cfg-in X=0.4995
     [comp] input.I[0] cfg-out O=0.4995
     [comp] input.I[1] cfg-in X=0.4995
     [comp] input.I[1] cfg-out O=0.4995
     [comp] input.I[2] cfg-in X=0.4995
     [comp] input.I[2] cfg-out O=0.4995
     [comp] input.V[4] cfg-in X=40
     [comp] input.V[4] cfg-out O=40
     [comp] input.I[3] cfg-in X=40
     [comp] input.I[3] cfg-out O=40
     [comp] input.I[4] cfg-in X=40
     [comp] input.I[4] cfg-out O=40
     [comp] input.I[5] cfg-in X=40
     [comp] input.I[5] cfg-out O=40
     [comp] input.V[5] cfg-in X=3.01029995664
     [comp] input.V[5] cfg-out O=3.01029995664
     [comp] input.I[6] cfg-in X=0.03010299956
     [comp] input.I[6] cfg-out O=0.03010299956
     [comp] output.V[0] cfg-in X=TetRp
     [comp] output.V[0] cfg-out O=TetRp
     [sln] rm-route ihill_rep[3].S = TetRp
     [sln] rm-route ihill_rep[2].n = 2
     [sln] add-comp input.V[0]
     [sln] generate input.V[0].O = 2
     [sln] rm-route ihill_rep[4].n = 2
     [sln] add-comp input.V[1]
     [sln] generate input.V[1].O = 2
     [sln] rm-route ihill_rep[3].n = 2
     [sln] add-comp input.V[2]
     [sln] generate input.V[2].O = 2
     [sln] rm-route vdadd[1].B = 0
     [sln] add-comp input.V[3]
     [sln] generate input.V[3].O = 0
     [sln] rm-route ihill_rep[2].Vmax = 0.4995
     [sln] add-comp input.I[0]
     [sln] generate input.I[0].O = 0.4995
     [sln] rm-route ihill_rep[4].Vmax = 0.4995
     [sln] add-comp input.I[1]
     [sln] generate input.I[1].O = 0.4995
     [sln] rm-route ihill_rep[3].Vmax = 0.4995
     [sln] add-comp input.I[2]
     [sln] generate input.I[2].O = 0.4995
     [sln] rm-route vdadd[1].OUT_0 = 40
     [sln] add-comp input.V[4]
     [sln] generate input.V[4].O = 40
     [sln] rm-route ihill_rep[2].Km = 40
     [sln] add-comp input.I[3]
     [sln] generate input.I[3].O = 40
     [sln] rm-route ihill_rep[4].Km = 40
     [sln] add-comp input.I[4]
     [sln] generate input.I[4].O = 40
     [sln] rm-route ihill_rep[3].Km = 40
     [sln] add-comp input.I[5]
     [sln] generate input.I[5].O = 40
     [sln] rm-route itov[0].K = 3.01029995664
     [sln] add-comp input.V[5]
     [sln] generate input.V[5].O = 3.01029995664
     [sln] rm-route vdadd[1].D = 0.03010299956
     [sln] add-comp input.I[6]
     [sln] generate input.I[6].O = 0.03010299956
     [sln] add-comp output.V[0]
     [sln] generate output.V[0].O = TetRp
     [sln] route input.V[0].X = 2
     [sln] route input.V[1].X = 2
     [sln] route input.V[2].X = 2
     [sln] route input.V[3].X = 0
     [sln] route input.I[0].X = 0.4995
     [sln] route input.I[1].X = 0.4995
     [sln] route input.I[2].X = 0.4995
     [sln] route input.V[4].X = 40
     [sln] route input.I[3].X = 40
     [sln] route input.I[4].X = 40
     [sln] route input.I[5].X = 40
     [sln] route input.V[5].X = 3.01029995664
     [sln] route input.I[6].X = 0.03010299956
     [comp] make-comp input.V0
     [comp] make-comp input.V1
     [comp] make-comp input.V2
     [comp] make-comp input.V3
     [comp] make-comp input.I0
     [comp] make-comp input.I1
     [comp] make-comp input.I2
     [comp] make-comp input.V4
     [comp] make-comp input.I3
     [comp] make-comp input.I4
     [comp] make-comp input.I5
     [comp] make-comp input.V5
     [comp] make-comp input.I6
     [comp] make-comp output.V0
     add-goal [1064] [CONN] vdadd[1].OUT => ihill_rep[3].S (TetRp)
     add-goal [1065] [CONN] input.V[0].O => ihill_rep[2].n (2)
     add-goal [1066] [CONN] input.V[1].O => ihill_rep[4].n (2)
     add-goal [1067] [CONN] input.V[2].O => ihill_rep[3].n (2)
     add-goal [1068] [CONN] input.V[3].O => vdadd[1].B (0)
     add-goal [1069] [CONN] input.I[0].O => ihill_rep[2].Vmax (0.4995)
     add-goal [1070] [CONN] input.I[1].O => ihill_rep[4].Vmax (0.4995)
     add-goal [1071] [CONN] input.I[2].O => ihill_rep[3].Vmax (0.4995)
     add-goal [1072] [CONN] input.V[4].O => vdadd[1].OUT_0 (40)
     add-goal [1073] [CONN] input.I[3].O => ihill_rep[2].Km (40)
     add-goal [1074] [CONN] input.I[4].O => ihill_rep[4].Km (40)
     add-goal [1075] [CONN] input.I[5].O => ihill_rep[3].Km (40)
     add-goal [1076] [CONN] input.V[5].O => itov[0].K (3.01029995664)
     add-goal [1077] [CONN] input.I[6].O => vdadd[1].D (0.03010299956)
     add-goal [1078] [CONN] vdadd[1].OUT => output.V[0].X (TetRp)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1067] [CONN] input.V[2].O => ihill_rep[3].n (2)
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1077] [CONN] input.I[6].O => vdadd[1].D (0.03010299956)
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1076] [CONN] input.V[5].O => itov[0].K (3.01029995664)
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1071] [CONN] input.I[2].O => ihill_rep[3].Vmax (0.4995)
[1075] [CONN] input.I[5].O => ihill_rep[3].Km (40)
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1074] [CONN] input.I[4].O => ihill_rep[4].Km (40)
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1069] [CONN] input.I[0].O => ihill_rep[2].Vmax (0.4995)
[1072] [CONN] input.V[4].O => vdadd[1].OUT_0 (40)
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1066] [CONN] input.V[1].O => ihill_rep[4].n (2)
[1073] [CONN] input.I[3].O => ihill_rep[2].Km (40)
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1068] [CONN] input.V[3].O => vdadd[1].B (0)
[1078] [CONN] vdadd[1].OUT => output.V[0].X (TetRp)
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1065] [CONN] input.V[0].O => ihill_rep[2].n (2)
[1070] [CONN] input.I[1].O => ihill_rep[4].Vmax (0.4995)
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1064] [CONN] vdadd[1].OUT => ihill_rep[3].S (TetRp)
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> Current Goal: [1064] [CONN] vdadd[1].OUT => ihill_rep[3].S (TetRp)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->itov.K
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 3
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=20

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] [TERMINATE] found 0 / 1
[eqn] [TERMINATE] could not find another node
[multi]   >> Found # Global Solutions: 1/1
[multi] >>>SOLUTION IS UNFINISHED <<<
[multi]  > Added Local Solution
[multi]  > Finding Global Solution
[multi] found # steps: 43
[multi] found # steps: 30
[multi] found # steps: 30
[multi] found # steps: 30
[multi] # partial ids = 4
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] vgain[0] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[0] cfg-in Z=TetRm
   [comp] vgain[0] cfg-in X=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] ihill_rep[2] cfg-in REP=TRTetR
   [comp] ihill_rep[2] cfg-in n=2
   [comp] ihill_rep[2] cfg-in S=LacLp
   [comp] ihill_rep[2] cfg-in Vmax=0.4995
   [comp] ihill_rep[2] cfg-in Km=40
   [comp] ihill_rep[3] cfg-in REP=TRclp
   [comp] ihill_rep[3] cfg-in n=2
   [comp] ihill_rep[3] cfg-in S=TetRp
   [comp] ihill_rep[3] cfg-in Vmax=0.4995
   [comp] ihill_rep[3] cfg-in Km=40
   [comp] ihill_rep[4] cfg-in REP=TRLacL
   [comp] ihill_rep[4] cfg-in n=2
   [comp] ihill_rep[4] cfg-in S=clp
   [comp] ihill_rep[4] cfg-in Vmax=0.4995
   [comp] ihill_rep[4] cfg-in Km=40
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[0]
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] conn vgain[0].P->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate ihill_rep[2].REP = TRTetR
   [sln] add-comp ihill_rep[2]
   [sln] generate ihill_rep[3].REP = TRclp
   [sln] add-comp ihill_rep[3]
   [sln] generate ihill_rep[4].REP = TRLacL
   [sln] add-comp ihill_rep[4]
   [sln] route vgain[0].Z = TetRm
   [sln] route vgain[0].X = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route ihill_rep[2].n = 2
   [sln] route ihill_rep[2].S = LacLp
   [sln] route ihill_rep[2].Vmax = 0.4995
   [sln] route ihill_rep[2].Km = 40
   [sln] route ihill_rep[3].n = 2
   [sln] route ihill_rep[3].S = TetRp
   [sln] route ihill_rep[3].Vmax = 0.4995
   [sln] route ihill_rep[3].Km = 40
   [sln] route ihill_rep[4].n = 2
   [sln] route ihill_rep[4].S = clp
   [sln] route ihill_rep[4].Vmax = 0.4995
   [sln] route ihill_rep[4].Km = 40
   [comp] make-comp vgain0
   [comp] make-comp vdadd1
   [comp] make-comp ihill_rep2
   [comp] make-comp ihill_rep3
   [comp] make-comp ihill_rep4
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ==== ROUTES =====
[multi] > vgain[0].Z = TetRm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[2].S = LacLp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[4].S = clp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[3].S = TetRp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[2].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[4].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[3].n = 2
[multi]    - making an input block.
[multi] > vdadd[1].B = 0
[multi]    - making an input block.
[multi] > ihill_rep[2].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[4].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[3].Vmax = 0.4995
[multi]    - making an input block.
[multi] > vdadd[1].OUT_0 = 40
[multi]    - making an input block.
[multi] > ihill_rep[2].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[4].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[3].Km = 40
[multi]    - making an input block.
[multi] > vgain[0].X = 3.01029995664
[multi]    - making an input block.
[multi] > vdadd[1].D = 0.03010299956
[multi]    - making an input block.
[multi] ==== GENERATES =====
[multi] > vdadd[1].OUT = TetRp
[multi]    - making an output block.
[multi] > ihill_rep[2].REP = TRTetR
[multi] > ihill_rep[4].REP = TRLacL
[multi] > ihill_rep[3].REP = TRclp
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] --> Number of options 15
[multi] --> Number of nodes 1
[multi] ======= Partial (Root) Steps 133 =======
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] vgain[0] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[0] cfg-in Z=TetRm
   [comp] vgain[0] cfg-in X=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] ihill_rep[2] cfg-in REP=TRTetR
   [comp] ihill_rep[2] cfg-in n=2
   [comp] ihill_rep[2] cfg-in S=LacLp
   [comp] ihill_rep[2] cfg-in Vmax=0.4995
   [comp] ihill_rep[2] cfg-in Km=40
   [comp] ihill_rep[3] cfg-in REP=TRclp
   [comp] ihill_rep[3] cfg-in n=2
   [comp] ihill_rep[3] cfg-in S=TetRp
   [comp] ihill_rep[3] cfg-in Vmax=0.4995
   [comp] ihill_rep[3] cfg-in Km=40
   [comp] ihill_rep[4] cfg-in REP=TRLacL
   [comp] ihill_rep[4] cfg-in n=2
   [comp] ihill_rep[4] cfg-in S=clp
   [comp] ihill_rep[4] cfg-in Vmax=0.4995
   [comp] ihill_rep[4] cfg-in Km=40
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[0]
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] conn vgain[0].P->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate ihill_rep[2].REP = TRTetR
   [sln] add-comp ihill_rep[2]
   [sln] generate ihill_rep[3].REP = TRclp
   [sln] add-comp ihill_rep[3]
   [sln] generate ihill_rep[4].REP = TRLacL
   [sln] add-comp ihill_rep[4]
   [sln] route vgain[0].Z = TetRm
   [sln] route vgain[0].X = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route ihill_rep[2].n = 2
   [sln] route ihill_rep[2].S = LacLp
   [sln] route ihill_rep[2].Vmax = 0.4995
   [sln] route ihill_rep[2].Km = 40
   [sln] route ihill_rep[3].n = 2
   [sln] route ihill_rep[3].S = TetRp
   [sln] route ihill_rep[3].Vmax = 0.4995
   [sln] route ihill_rep[3].Km = 40
   [sln] route ihill_rep[4].n = 2
   [sln] route ihill_rep[4].S = clp
   [sln] route ihill_rep[4].Vmax = 0.4995
   [sln] route ihill_rep[4].Km = 40
   [comp] make-comp vgain0
   [comp] make-comp vdadd1
   [comp] make-comp ihill_rep2
   [comp] make-comp ihill_rep3
   [comp] make-comp ihill_rep4
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ============================
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.V[0] cfg-in X=2
     [comp] input.V[0] cfg-out O=2
     [comp] input.V[1] cfg-in X=2
     [comp] input.V[1] cfg-out O=2
     [comp] input.V[2] cfg-in X=2
     [comp] input.V[2] cfg-out O=2
     [comp] input.V[3] cfg-in X=0
     [comp] input.V[3] cfg-out O=0
     [comp] input.I[0] cfg-in X=0.4995
     [comp] input.I[0] cfg-out O=0.4995
     [comp] input.I[1] cfg-in X=0.4995
     [comp] input.I[1] cfg-out O=0.4995
     [comp] input.I[2] cfg-in X=0.4995
     [comp] input.I[2] cfg-out O=0.4995
     [comp] input.V[4] cfg-in X=40
     [comp] input.V[4] cfg-out O=40
     [comp] input.I[3] cfg-in X=40
     [comp] input.I[3] cfg-out O=40
     [comp] input.I[4] cfg-in X=40
     [comp] input.I[4] cfg-out O=40
     [comp] input.I[5] cfg-in X=40
     [comp] input.I[5] cfg-out O=40
     [comp] input.V[5] cfg-in X=3.01029995664
     [comp] input.V[5] cfg-out O=3.01029995664
     [comp] input.I[6] cfg-in X=0.03010299956
     [comp] input.I[6] cfg-out O=0.03010299956
     [comp] output.V[0] cfg-in X=TetRp
     [comp] output.V[0] cfg-out O=TetRp
     [sln] rm-route ihill_rep[3].S = TetRp
     [sln] rm-route ihill_rep[2].n = 2
     [sln] add-comp input.V[0]
     [sln] generate input.V[0].O = 2
     [sln] rm-route ihill_rep[4].n = 2
     [sln] add-comp input.V[1]
     [sln] generate input.V[1].O = 2
     [sln] rm-route ihill_rep[3].n = 2
     [sln] add-comp input.V[2]
     [sln] generate input.V[2].O = 2
     [sln] rm-route vdadd[1].B = 0
     [sln] add-comp input.V[3]
     [sln] generate input.V[3].O = 0
     [sln] rm-route ihill_rep[2].Vmax = 0.4995
     [sln] add-comp input.I[0]
     [sln] generate input.I[0].O = 0.4995
     [sln] rm-route ihill_rep[4].Vmax = 0.4995
     [sln] add-comp input.I[1]
     [sln] generate input.I[1].O = 0.4995
     [sln] rm-route ihill_rep[3].Vmax = 0.4995
     [sln] add-comp input.I[2]
     [sln] generate input.I[2].O = 0.4995
     [sln] rm-route vdadd[1].OUT_0 = 40
     [sln] add-comp input.V[4]
     [sln] generate input.V[4].O = 40
     [sln] rm-route ihill_rep[2].Km = 40
     [sln] add-comp input.I[3]
     [sln] generate input.I[3].O = 40
     [sln] rm-route ihill_rep[4].Km = 40
     [sln] add-comp input.I[4]
     [sln] generate input.I[4].O = 40
     [sln] rm-route ihill_rep[3].Km = 40
     [sln] add-comp input.I[5]
     [sln] generate input.I[5].O = 40
     [sln] rm-route vgain[0].X = 3.01029995664
     [sln] add-comp input.V[5]
     [sln] generate input.V[5].O = 3.01029995664
     [sln] rm-route vdadd[1].D = 0.03010299956
     [sln] add-comp input.I[6]
     [sln] generate input.I[6].O = 0.03010299956
     [sln] add-comp output.V[0]
     [sln] generate output.V[0].O = TetRp
     [sln] route input.V[0].X = 2
     [sln] route input.V[1].X = 2
     [sln] route input.V[2].X = 2
     [sln] route input.V[3].X = 0
     [sln] route input.I[0].X = 0.4995
     [sln] route input.I[1].X = 0.4995
     [sln] route input.I[2].X = 0.4995
     [sln] route input.V[4].X = 40
     [sln] route input.I[3].X = 40
     [sln] route input.I[4].X = 40
     [sln] route input.I[5].X = 40
     [sln] route input.V[5].X = 3.01029995664
     [sln] route input.I[6].X = 0.03010299956
     [comp] make-comp input.V0
     [comp] make-comp input.V1
     [comp] make-comp input.V2
     [comp] make-comp input.V3
     [comp] make-comp input.I0
     [comp] make-comp input.I1
     [comp] make-comp input.I2
     [comp] make-comp input.V4
     [comp] make-comp input.I3
     [comp] make-comp input.I4
     [comp] make-comp input.I5
     [comp] make-comp input.V5
     [comp] make-comp input.I6
     [comp] make-comp output.V0
     add-goal [1079] [CONN] vdadd[1].OUT => ihill_rep[3].S (TetRp)
     add-goal [1080] [CONN] input.V[0].O => ihill_rep[2].n (2)
     add-goal [1081] [CONN] input.V[1].O => ihill_rep[4].n (2)
     add-goal [1082] [CONN] input.V[2].O => ihill_rep[3].n (2)
     add-goal [1083] [CONN] input.V[3].O => vdadd[1].B (0)
     add-goal [1084] [CONN] input.I[0].O => ihill_rep[2].Vmax (0.4995)
     add-goal [1085] [CONN] input.I[1].O => ihill_rep[4].Vmax (0.4995)
     add-goal [1086] [CONN] input.I[2].O => ihill_rep[3].Vmax (0.4995)
     add-goal [1087] [CONN] input.V[4].O => vdadd[1].OUT_0 (40)
     add-goal [1088] [CONN] input.I[3].O => ihill_rep[2].Km (40)
     add-goal [1089] [CONN] input.I[4].O => ihill_rep[4].Km (40)
     add-goal [1090] [CONN] input.I[5].O => ihill_rep[3].Km (40)
     add-goal [1091] [CONN] input.V[5].O => vgain[0].X (3.01029995664)
     add-goal [1092] [CONN] input.I[6].O => vdadd[1].D (0.03010299956)
     add-goal [1093] [CONN] vdadd[1].OUT => output.V[0].X (TetRp)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1080] [CONN] input.V[0].O => ihill_rep[2].n (2)
[1088] [CONN] input.I[3].O => ihill_rep[2].Km (40)
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1086] [CONN] input.I[2].O => ihill_rep[3].Vmax (0.4995)
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1082] [CONN] input.V[2].O => ihill_rep[3].n (2)
[1091] [CONN] input.V[5].O => vgain[0].X (3.01029995664)
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1083] [CONN] input.V[3].O => vdadd[1].B (0)
[1085] [CONN] input.I[1].O => ihill_rep[4].Vmax (0.4995)
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1079] [CONN] vdadd[1].OUT => ihill_rep[3].S (TetRp)
[1087] [CONN] input.V[4].O => vdadd[1].OUT_0 (40)
[1089] [CONN] input.I[4].O => ihill_rep[4].Km (40)
[1093] [CONN] vdadd[1].OUT => output.V[0].X (TetRp)
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1092] [CONN] input.I[6].O => vdadd[1].D (0.03010299956)
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1081] [CONN] input.V[1].O => ihill_rep[4].n (2)
[1084] [CONN] input.I[0].O => ihill_rep[2].Vmax (0.4995)
[1090] [CONN] input.I[5].O => ihill_rep[3].Km (40)
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> Current Goal: [1090] [CONN] input.I[5].O => ihill_rep[3].Km (40)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vgain.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 3
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=21

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] [TERMINATE] found 0 / 1
[eqn] [TERMINATE] could not find another node
[multi]   >> Found # Global Solutions: 1/1
[multi] >>>SOLUTION IS UNFINISHED <<<
[multi] # Found 0, Required: 1
[multi] solving target: clp
[multi] search tree is not exhausted. adding existing:clp
[multi] finding new partial solution
[multi] made a partial tree with 9 goals
[multi] find a partial solution
[multi] == Finding Local Solution ==
[multi] == Current # Solutions: 0
[multi] == # New Solutions To Find: 1
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}

============
>> Current Goal: [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
vdadd.OUT -> true
mm.XY -> true
[eqn] >>> NUMBER OF COMPATIBLE COMPONENTS  2 <<<
[eqn] new: [0] <vdadd> output OUT.V
<analog-st> ((vdadd.V{A}:+(vdadd.BSW*vdadd.V{B}:))-(vdadd.DSW*vdadd.I{D}:*vdadd.V{OUT}:)) ic=OUT_0.V / std=none 0
<analog-st> [ddt v]=?? {ddt v}->[ddt v]=@
<analog-st> [v]=[0.,12000.] {v}->[v]=@ {v}->*[v]=@


checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 11 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 11 ssteps
[eqn] new: [0] <mm> output XY.V
<analog-st> ((mm.I{kf}:*mm.V{X}:*mm.V{Y}:)-(mm.I{kr}:*mm.V{XY}:)) ic=XY0.V / std=gauss ((0.001*mm.V{XY}:)+0.1)
<analog-st> [ddt v]=?? {ddt v}->[ddt v]=@
<analog-st> [v]=[0.,3200.] {v}->[v]=@ {v}->*[v]=@


[eqn] [FOUND-SOLS] ===> Found <20> solutions
[slvrsearch] > weight--: <mvar-goal>clp
[eqn] -> [valid?] testing node 34
[eqn] <<< SAT => VALID >>
[eqn] found 0 / 1
==== Goals ===
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1154] [EXPR]vdadd[1].A<V>=(3.01029995664*clm)
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}

============
>> Current Goal: [1154] [EXPR]vdadd[1].A<V>=(3.01029995664*clm)
vgain.P -> true
vadd.OUT -> true
mm.X -> true
mm.Y -> true
itov.Y -> true
[eqn] >>> NUMBER OF COMPATIBLE COMPONENTS  5 <<<
[eqn] new: [0] <vgain> output P.V
<analog>:(vgain.V{X}:*vgain.I{Z}:) / std=none 0
<analog> [v]=[0.,5000.] {v}->[v]=@


[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn] new: [0] <vadd> output OUT.V
<analog>:(((vadd.V{A}:+(vadd.BSW*vadd.V{B}:))-(vadd.CSW*vadd.V{C}:))*0.25) / std=gauss ((0.001*vadd.V{OUT}:)+0.1)
<analog> [v]={[-825.,1650.] [0.,1650.] [-825.,825.] [0.,825.] } {v}->[v]=@


[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 13 ssteps
[eqn] new: [0] <mm> output Y.V
<analog>:(mm.V{Ytot}:-mm.V{XY}:) / std=none 0
<analog> [v]=[0.,1600.] {v}->[v]=@


[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[eqn] new: [0] <mm> output X.V
<analog>:(mm.V{Xtot}:-mm.V{XY}:) / std=none 0
<analog> [v]=[0.,1600.] {v}->[v]=@


[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[eqn] new: [0] <itov> output Y.V
<analog>:(itov.V{K}:*itov.I{X}:) / std=gauss 0.1
<analog> [v]=[0.,3300.] {v}->[v]=@


[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn] [FOUND-SOLS] ===> Found <40> solutions
[slvrsearch] > weight--: (3.01029995664*clm)
[eqn] -> [valid?] testing node 121
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=22

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 119
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=23

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 117
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=24

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 51
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=25

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 49
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=26

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 47
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=27

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 116
[eqn] <<< SAT => VALID >>
[eqn] [search_tree] Found enough solutions
[multi] === returned from partial search ===
[multi] >>> Partial Results Found <<<
[multi] done with search
[multi] found some partial solutions. Will add partial solution node and global
[multi] == Adding Local Solution : 47 ==
[multi] == Adding Local Solution : 49 ==
[multi] == Adding Local Solution : 117 ==
[multi] == Adding Local Solution : 119 ==
[multi] == Adding Local Solution : 121 ==
[multi] == Adding Local Solution : 51 ==
[multi]  > Added Local Solution
[multi]  > Finding Global Solution
[multi] found # steps: 43
[multi] found # steps: 43
[multi] found # steps: 30
[multi] found # steps: 30
[multi] found # steps: 30
[multi] # partial ids = 5
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] vgain[0] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[0] cfg-in Z=TetRm
   [comp] vgain[0] cfg-in X=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] vgain[2] cfg-in P=(3.01029995664*clm)
   [comp] vgain[2] cfg-in Z=3.01029995664
   [comp] vgain[2] cfg-in X=clm
   [comp] vdadd[3] cfg-in OUT_0=20
   [comp] vdadd[3] cfg-in OUT=clp
   [comp] vdadd[3] cfg-param BSW=1
   [comp] vdadd[3] cfg-param DSW=1
   [comp] vdadd[3] cfg-in D=0.03010299956
   [comp] vdadd[3] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[3] cfg-in B=0
   [comp] ihill_rep[4] cfg-in REP=TRTetR
   [comp] ihill_rep[4] cfg-in n=2
   [comp] ihill_rep[4] cfg-in S=LacLp
   [comp] ihill_rep[4] cfg-in Vmax=0.4995
   [comp] ihill_rep[4] cfg-in Km=40
   [comp] ihill_rep[5] cfg-in REP=TRclp
   [comp] ihill_rep[5] cfg-in n=2
   [comp] ihill_rep[5] cfg-in S=TetRp
   [comp] ihill_rep[5] cfg-in Vmax=0.4995
   [comp] ihill_rep[5] cfg-in Km=40
   [comp] ihill_rep[6] cfg-in REP=TRLacL
   [comp] ihill_rep[6] cfg-in n=2
   [comp] ihill_rep[6] cfg-in S=clp
   [comp] ihill_rep[6] cfg-in Vmax=0.4995
   [comp] ihill_rep[6] cfg-in Km=40
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[0]
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] conn vgain[0].P->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate vgain[2].P = (3.01029995664*clm)
   [sln] add-comp vgain[2]
   [sln] generate vgain[2].P = (3.01029995664*clm)
   [sln] conn vgain[2].P->vdadd[3].A
   [sln] generate vdadd[3].OUT = clp
   [sln] add-comp vdadd[3]
   [sln] generate ihill_rep[4].REP = TRTetR
   [sln] add-comp ihill_rep[4]
   [sln] generate ihill_rep[5].REP = TRclp
   [sln] add-comp ihill_rep[5]
   [sln] generate ihill_rep[6].REP = TRLacL
   [sln] add-comp ihill_rep[6]
   [sln] route vgain[0].Z = TetRm
   [sln] route vgain[0].X = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route vgain[2].Z = 3.01029995664
   [sln] route vgain[2].X = clm
   [sln] route vdadd[3].OUT_0 = 20
   [sln] route vdadd[3].D = 0.03010299956
   [sln] route vdadd[3].B = 0
   [sln] route ihill_rep[4].n = 2
   [sln] route ihill_rep[4].S = LacLp
   [sln] route ihill_rep[4].Vmax = 0.4995
   [sln] route ihill_rep[4].Km = 40
   [sln] route ihill_rep[5].n = 2
   [sln] route ihill_rep[5].S = TetRp
   [sln] route ihill_rep[5].Vmax = 0.4995
   [sln] route ihill_rep[5].Km = 40
   [sln] route ihill_rep[6].n = 2
   [sln] route ihill_rep[6].S = clp
   [sln] route ihill_rep[6].Vmax = 0.4995
   [sln] route ihill_rep[6].Km = 40
   [comp] make-comp vgain0
   [comp] make-comp vdadd1
   [comp] make-comp vgain2
   [comp] make-comp vdadd3
   [comp] make-comp ihill_rep4
   [comp] make-comp ihill_rep5
   [comp] make-comp ihill_rep6
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ==== ROUTES =====
[multi] > vgain[0].Z = TetRm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[4].S = LacLp
[multi]    - connecting generates to routes.
[multi] > vgain[2].X = clm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[6].S = clp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[5].S = TetRp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[4].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[6].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[5].n = 2
[multi]    - making an input block.
[multi] > vdadd[3].B = 0
[multi]    - making an input block.
[multi] > vdadd[1].B = 0
[multi]    - making an input block.
[multi] > ihill_rep[4].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[6].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[5].Vmax = 0.4995
[multi]    - making an input block.
[multi] > vdadd[1].OUT_0 = 40
[multi]    - making an input block.
[multi] > ihill_rep[4].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[6].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[5].Km = 40
[multi]    - making an input block.
[multi] > vgain[2].Z = 3.01029995664
[multi]    - making an input block.
[multi] > vgain[0].X = 3.01029995664
[multi]    - making an input block.
[multi] > vdadd[3].OUT_0 = 20
[multi]    - making an input block.
[multi] > vdadd[3].D = 0.03010299956
[multi]    - making an input block.
[multi] > vdadd[1].D = 0.03010299956
[multi]    - making an input block.
[multi] ==== GENERATES =====
[multi] > vdadd[3].OUT = clp
[multi]    - making an output block.
[multi] > vdadd[1].OUT = TetRp
[multi]    - making an output block.
[multi] > ihill_rep[4].REP = TRTetR
[multi] > ihill_rep[6].REP = TRLacL
[multi] > ihill_rep[5].REP = TRclp
[multi] > vgain[2].P = (3.01029995664*clm)
[multi] > vgain[2].P = (3.01029995664*clm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] --> Number of options 21
[multi] --> Number of nodes 1
[multi] ======= Partial (Root) Steps 176 =======
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] vgain[0] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[0] cfg-in Z=TetRm
   [comp] vgain[0] cfg-in X=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] vgain[2] cfg-in P=(3.01029995664*clm)
   [comp] vgain[2] cfg-in Z=3.01029995664
   [comp] vgain[2] cfg-in X=clm
   [comp] vdadd[3] cfg-in OUT_0=20
   [comp] vdadd[3] cfg-in OUT=clp
   [comp] vdadd[3] cfg-param BSW=1
   [comp] vdadd[3] cfg-param DSW=1
   [comp] vdadd[3] cfg-in D=0.03010299956
   [comp] vdadd[3] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[3] cfg-in B=0
   [comp] ihill_rep[4] cfg-in REP=TRTetR
   [comp] ihill_rep[4] cfg-in n=2
   [comp] ihill_rep[4] cfg-in S=LacLp
   [comp] ihill_rep[4] cfg-in Vmax=0.4995
   [comp] ihill_rep[4] cfg-in Km=40
   [comp] ihill_rep[5] cfg-in REP=TRclp
   [comp] ihill_rep[5] cfg-in n=2
   [comp] ihill_rep[5] cfg-in S=TetRp
   [comp] ihill_rep[5] cfg-in Vmax=0.4995
   [comp] ihill_rep[5] cfg-in Km=40
   [comp] ihill_rep[6] cfg-in REP=TRLacL
   [comp] ihill_rep[6] cfg-in n=2
   [comp] ihill_rep[6] cfg-in S=clp
   [comp] ihill_rep[6] cfg-in Vmax=0.4995
   [comp] ihill_rep[6] cfg-in Km=40
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[0]
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] conn vgain[0].P->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate vgain[2].P = (3.01029995664*clm)
   [sln] add-comp vgain[2]
   [sln] generate vgain[2].P = (3.01029995664*clm)
   [sln] conn vgain[2].P->vdadd[3].A
   [sln] generate vdadd[3].OUT = clp
   [sln] add-comp vdadd[3]
   [sln] generate ihill_rep[4].REP = TRTetR
   [sln] add-comp ihill_rep[4]
   [sln] generate ihill_rep[5].REP = TRclp
   [sln] add-comp ihill_rep[5]
   [sln] generate ihill_rep[6].REP = TRLacL
   [sln] add-comp ihill_rep[6]
   [sln] route vgain[0].Z = TetRm
   [sln] route vgain[0].X = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route vgain[2].Z = 3.01029995664
   [sln] route vgain[2].X = clm
   [sln] route vdadd[3].OUT_0 = 20
   [sln] route vdadd[3].D = 0.03010299956
   [sln] route vdadd[3].B = 0
   [sln] route ihill_rep[4].n = 2
   [sln] route ihill_rep[4].S = LacLp
   [sln] route ihill_rep[4].Vmax = 0.4995
   [sln] route ihill_rep[4].Km = 40
   [sln] route ihill_rep[5].n = 2
   [sln] route ihill_rep[5].S = TetRp
   [sln] route ihill_rep[5].Vmax = 0.4995
   [sln] route ihill_rep[5].Km = 40
   [sln] route ihill_rep[6].n = 2
   [sln] route ihill_rep[6].S = clp
   [sln] route ihill_rep[6].Vmax = 0.4995
   [sln] route ihill_rep[6].Km = 40
   [comp] make-comp vgain0
   [comp] make-comp vdadd1
   [comp] make-comp vgain2
   [comp] make-comp vdadd3
   [comp] make-comp ihill_rep4
   [comp] make-comp ihill_rep5
   [comp] make-comp ihill_rep6
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ============================
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.V[0] cfg-in X=2
     [comp] input.V[0] cfg-out O=2
     [comp] input.V[1] cfg-in X=2
     [comp] input.V[1] cfg-out O=2
     [comp] input.V[2] cfg-in X=2
     [comp] input.V[2] cfg-out O=2
     [comp] input.V[3] cfg-in X=0
     [comp] input.V[3] cfg-out O=0
     [comp] input.V[4] cfg-in X=0
     [comp] input.V[4] cfg-out O=0
     [comp] input.I[0] cfg-in X=0.4995
     [comp] input.I[0] cfg-out O=0.4995
     [comp] input.I[1] cfg-in X=0.4995
     [comp] input.I[1] cfg-out O=0.4995
     [comp] input.I[2] cfg-in X=0.4995
     [comp] input.I[2] cfg-out O=0.4995
     [comp] input.V[5] cfg-in X=40
     [comp] input.V[5] cfg-out O=40
     [comp] input.I[3] cfg-in X=40
     [comp] input.I[3] cfg-out O=40
     [comp] input.I[4] cfg-in X=40
     [comp] input.I[4] cfg-out O=40
     [comp] input.I[5] cfg-in X=40
     [comp] input.I[5] cfg-out O=40
     [comp] input.I[6] cfg-in X=3.01029995664
     [comp] input.I[6] cfg-out O=3.01029995664
     [comp] input.V[6] cfg-in X=3.01029995664
     [comp] input.V[6] cfg-out O=3.01029995664
     [comp] input.V[7] cfg-in X=20
     [comp] input.V[7] cfg-out O=20
     [comp] input.I[7] cfg-in X=0.03010299956
     [comp] input.I[7] cfg-out O=0.03010299956
     [comp] input.I[8] cfg-in X=0.03010299956
     [comp] input.I[8] cfg-out O=0.03010299956
     [comp] output.V[0] cfg-in X=clp
     [comp] output.V[0] cfg-out O=clp
     [comp] output.V[1] cfg-in X=TetRp
     [comp] output.V[1] cfg-out O=TetRp
     [sln] rm-route ihill_rep[6].S = clp
     [sln] rm-route ihill_rep[5].S = TetRp
     [sln] rm-route ihill_rep[4].n = 2
     [sln] add-comp input.V[0]
     [sln] generate input.V[0].O = 2
     [sln] rm-route ihill_rep[6].n = 2
     [sln] add-comp input.V[1]
     [sln] generate input.V[1].O = 2
     [sln] rm-route ihill_rep[5].n = 2
     [sln] add-comp input.V[2]
     [sln] generate input.V[2].O = 2
     [sln] rm-route vdadd[3].B = 0
     [sln] add-comp input.V[3]
     [sln] generate input.V[3].O = 0
     [sln] rm-route vdadd[1].B = 0
     [sln] add-comp input.V[4]
     [sln] generate input.V[4].O = 0
     [sln] rm-route ihill_rep[4].Vmax = 0.4995
     [sln] add-comp input.I[0]
     [sln] generate input.I[0].O = 0.4995
     [sln] rm-route ihill_rep[6].Vmax = 0.4995
     [sln] add-comp input.I[1]
     [sln] generate input.I[1].O = 0.4995
     [sln] rm-route ihill_rep[5].Vmax = 0.4995
     [sln] add-comp input.I[2]
     [sln] generate input.I[2].O = 0.4995
     [sln] rm-route vdadd[1].OUT_0 = 40
     [sln] add-comp input.V[5]
     [sln] generate input.V[5].O = 40
     [sln] rm-route ihill_rep[4].Km = 40
     [sln] add-comp input.I[3]
     [sln] generate input.I[3].O = 40
     [sln] rm-route ihill_rep[6].Km = 40
     [sln] add-comp input.I[4]
     [sln] generate input.I[4].O = 40
     [sln] rm-route ihill_rep[5].Km = 40
     [sln] add-comp input.I[5]
     [sln] generate input.I[5].O = 40
     [sln] rm-route vgain[2].Z = 3.01029995664
     [sln] add-comp input.I[6]
     [sln] generate input.I[6].O = 3.01029995664
     [sln] rm-route vgain[0].X = 3.01029995664
     [sln] add-comp input.V[6]
     [sln] generate input.V[6].O = 3.01029995664
     [sln] rm-route vdadd[3].OUT_0 = 20
     [sln] add-comp input.V[7]
     [sln] generate input.V[7].O = 20
     [sln] rm-route vdadd[3].D = 0.03010299956
     [sln] add-comp input.I[7]
     [sln] generate input.I[7].O = 0.03010299956
     [sln] rm-route vdadd[1].D = 0.03010299956
     [sln] add-comp input.I[8]
     [sln] generate input.I[8].O = 0.03010299956
     [sln] add-comp output.V[0]
     [sln] generate output.V[0].O = clp
     [sln] add-comp output.V[1]
     [sln] generate output.V[1].O = TetRp
     [sln] route input.V[0].X = 2
     [sln] route input.V[1].X = 2
     [sln] route input.V[2].X = 2
     [sln] route input.V[3].X = 0
     [sln] route input.V[4].X = 0
     [sln] route input.I[0].X = 0.4995
     [sln] route input.I[1].X = 0.4995
     [sln] route input.I[2].X = 0.4995
     [sln] route input.V[5].X = 40
     [sln] route input.I[3].X = 40
     [sln] route input.I[4].X = 40
     [sln] route input.I[5].X = 40
     [sln] route input.I[6].X = 3.01029995664
     [sln] route input.V[6].X = 3.01029995664
     [sln] route input.V[7].X = 20
     [sln] route input.I[7].X = 0.03010299956
     [sln] route input.I[8].X = 0.03010299956
     [comp] make-comp input.V0
     [comp] make-comp input.V1
     [comp] make-comp input.V2
     [comp] make-comp input.V3
     [comp] make-comp input.V4
     [comp] make-comp input.I0
     [comp] make-comp input.I1
     [comp] make-comp input.I2
     [comp] make-comp input.V5
     [comp] make-comp input.I3
     [comp] make-comp input.I4
     [comp] make-comp input.I5
     [comp] make-comp input.I6
     [comp] make-comp input.V6
     [comp] make-comp input.V7
     [comp] make-comp input.I7
     [comp] make-comp input.I8
     [comp] make-comp output.V0
     [comp] make-comp output.V1
     add-goal [1253] [CONN] vdadd[3].OUT => ihill_rep[6].S (clp)
     add-goal [1254] [CONN] vdadd[1].OUT => ihill_rep[5].S (TetRp)
     add-goal [1255] [CONN] input.V[0].O => ihill_rep[4].n (2)
     add-goal [1256] [CONN] input.V[1].O => ihill_rep[6].n (2)
     add-goal [1257] [CONN] input.V[2].O => ihill_rep[5].n (2)
     add-goal [1258] [CONN] input.V[3].O => vdadd[3].B (0)
     add-goal [1259] [CONN] input.V[4].O => vdadd[1].B (0)
     add-goal [1260] [CONN] input.I[0].O => ihill_rep[4].Vmax (0.4995)
     add-goal [1261] [CONN] input.I[1].O => ihill_rep[6].Vmax (0.4995)
     add-goal [1262] [CONN] input.I[2].O => ihill_rep[5].Vmax (0.4995)
     add-goal [1263] [CONN] input.V[5].O => vdadd[1].OUT_0 (40)
     add-goal [1264] [CONN] input.I[3].O => ihill_rep[4].Km (40)
     add-goal [1265] [CONN] input.I[4].O => ihill_rep[6].Km (40)
     add-goal [1266] [CONN] input.I[5].O => ihill_rep[5].Km (40)
     add-goal [1267] [CONN] input.I[6].O => vgain[2].Z (3.01029995664)
     add-goal [1268] [CONN] input.V[6].O => vgain[0].X (3.01029995664)
     add-goal [1269] [CONN] input.V[7].O => vdadd[3].OUT_0 (20)
     add-goal [1270] [CONN] input.I[7].O => vdadd[3].D (0.03010299956)
     add-goal [1271] [CONN] input.I[8].O => vdadd[1].D (0.03010299956)
     add-goal [1272] [CONN] vdadd[3].OUT => output.V[0].X (clp)
     add-goal [1273] [CONN] vdadd[1].OUT => output.V[1].X (TetRp)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[1253] [CONN] vdadd[3].OUT => ihill_rep[6].S (clp)
[1268] [CONN] input.V[6].O => vgain[0].X (3.01029995664)
[1273] [CONN] vdadd[1].OUT => output.V[1].X (TetRp)
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1260] [CONN] input.I[0].O => ihill_rep[4].Vmax (0.4995)
[1265] [CONN] input.I[4].O => ihill_rep[6].Km (40)
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1262] [CONN] input.I[2].O => ihill_rep[5].Vmax (0.4995)
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1259] [CONN] input.V[4].O => vdadd[1].B (0)
[1270] [CONN] input.I[7].O => vdadd[3].D (0.03010299956)
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1272] [CONN] vdadd[3].OUT => output.V[0].X (clp)
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1255] [CONN] input.V[0].O => ihill_rep[4].n (2)
[1271] [CONN] input.I[8].O => vdadd[1].D (0.03010299956)
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1258] [CONN] input.V[3].O => vdadd[3].B (0)
[1263] [CONN] input.V[5].O => vdadd[1].OUT_0 (40)
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1254] [CONN] vdadd[1].OUT => ihill_rep[5].S (TetRp)
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1256] [CONN] input.V[1].O => ihill_rep[6].n (2)
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1257] [CONN] input.V[2].O => ihill_rep[5].n (2)
[1266] [CONN] input.I[5].O => ihill_rep[5].Km (40)
[1261] [CONN] input.I[1].O => ihill_rep[6].Vmax (0.4995)
[1264] [CONN] input.I[3].O => ihill_rep[4].Km (40)
[1267] [CONN] input.I[6].O => vgain[2].Z (3.01029995664)
[1269] [CONN] input.V[7].O => vdadd[3].OUT_0 (20)
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> Current Goal: [1269] [CONN] input.V[7].O => vdadd[3].OUT_0 (20)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vgain.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 3
[eqn] <<< SAT => VALID >>
[eqn] found 0 / 1
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1267] [CONN] input.I[6].O => vgain[2].Z (3.01029995664)
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> Current Goal: [1267] [CONN] input.I[6].O => vgain[2].Z (3.01029995664)
iadd.OUT || # ins: 3 / connected / I ?= I/distance=0
iadd.OUT -> true
[eqn] >>> NUMBER OF COMPATIBLE COMPONENTS  1 <<<
[eqn] new: [0] <iadd> output OUT.I
<analog>:((iadd.I{A}:+iadd.I{B}:)-iadd.I{C}:) / std=gauss ((1e-05*iadd.V{OUT}:)+0.001)
<analog> [v]=[-5.,10.] {v}->[v]=@


[eqn] ==== iadd====

[WARN][add_passthru_step.RAddInAssign] this assignment is perfect!: OUT=__tmp__
[WARN][add_passthru_step.RAddInAssign] this assignment is too complicated: C=(-1*__tmp__)
[eqn]     -> failed to convert unify steps
[eqn] ==== iadd====

[WARN][add_passthru_step.RAddInAssign] this assignment is perfect!: OUT=__tmp__
[WARN][add_passthru_step.RAddInAssign] this assignment is perfect!: A=__tmp__
[eqn]     -> converted to 12 ssteps
[eqn] ==== iadd====

[WARN][add_passthru_step.RAddInAssign] this assignment is perfect!: OUT=__tmp__
[WARN][add_passthru_step.RAddInAssign] this assignment is perfect!: B=__tmp__
[eqn]     -> converted to 12 ssteps
[eqn] [FOUND-SOLS] ===> Found <2> solutions
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vgain.Z
[eqn] -> [valid?] testing node 5
[eqn] <<< SAT => VALID >>
[eqn] found 0 / 1
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1275] [CONN] input.I[6].O => iadd[0].B (3.01029995664)
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> Current Goal: [1275] [CONN] input.I[6].O => iadd[0].B (3.01029995664)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->iadd.B
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 6
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=28

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 4
[eqn] <<< SAT => VALID >>
[eqn] [search_tree] Found enough solutions
[multi] ==== ROUTES =====
[multi] > vgain[0].Z = TetRm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[4].S = LacLp
[multi]    - connecting generates to routes.
[multi] > vgain[2].X = clm
[multi]    - connecting generates to routes.
[multi] > input.V[0].X = 2
[multi]     - ignoring route to input block.
[multi] > input.V[1].X = 2
[multi]     - ignoring route to input block.
[multi] > input.V[2].X = 2
[multi]     - ignoring route to input block.
[multi] > iadd[0].C = 0
[multi]    - making an input block.
[multi] > iadd[0].A = 0
[multi]    - making an input block.
[multi] > input.V[3].X = 0
[multi]     - ignoring route to input block.
[multi] > input.V[4].X = 0
[multi]     - ignoring route to input block.
[multi] > input.I[0].X = 0.4995
[multi]     - ignoring route to input block.
[multi] > input.I[1].X = 0.4995
[multi]     - ignoring route to input block.
[multi] > input.I[2].X = 0.4995
[multi]     - ignoring route to input block.
[multi] > input.V[5].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[3].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[4].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[5].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[6].X = 3.01029995664
[multi]     - ignoring route to input block.
[multi] > input.V[6].X = 3.01029995664
[multi]     - ignoring route to input block.
[multi] > input.V[7].X = 20
[multi]     - ignoring route to input block.
[multi] > input.I[7].X = 0.03010299956
[multi]     - ignoring route to input block.
[multi] > input.I[8].X = 0.03010299956
[multi]     - ignoring route to input block.
[multi] ==== GENERATES =====
[multi] > vdadd[3].OUT = clp
[multi]     - ignoring connected output block
[multi] > output.V[0].O = clp
[multi]     - ignoring generate to output block.
[multi] > vdadd[1].OUT = TetRp
[multi]     - ignoring connected output block
[multi] > output.V[1].O = TetRp
[multi]     - ignoring generate to output block.
[multi] > ihill_rep[4].REP = TRTetR
[multi] > ihill_rep[6].REP = TRLacL
[multi] > ihill_rep[5].REP = TRclp
[multi] > input.V[0].O = 2
[multi]     - ignoring generate to input block.
[multi] > input.V[2].O = 2
[multi]     - ignoring generate to input block.
[multi] > input.V[1].O = 2
[multi]     - ignoring generate to input block.
[multi] > input.V[4].O = 0
[multi]     - ignoring generate to input block.
[multi] > input.V[3].O = 0
[multi]     - ignoring generate to input block.
[multi] > input.I[0].O = 0.4995
[multi]     - ignoring generate to input block.
[multi] > input.I[2].O = 0.4995
[multi]     - ignoring generate to input block.
[multi] > input.I[1].O = 0.4995
[multi]     - ignoring generate to input block.
[multi] > input.V[5].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.I[3].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.I[5].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.I[4].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.V[6].O = 3.01029995664
[multi]     - ignoring generate to input block.
[multi] > input.I[6].O = 3.01029995664
[multi]     - ignoring generate to input block.
[multi] > input.V[7].O = 20
[multi]     - ignoring generate to input block.
[multi] > input.I[8].O = 0.03010299956
[multi]     - ignoring generate to input block.
[multi] > input.I[7].O = 0.03010299956
[multi]     - ignoring generate to input block.
[multi] > vgain[2].P = (3.01029995664*clm)
[multi] > vgain[2].P = (3.01029995664*clm)
[multi] > iadd[0].OUT = 3.01029995664
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] --> Number of options 2
[multi] --> Number of nodes 1
[multi] ======= New Path =======
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.I[9] cfg-in X=0
     [comp] input.I[9] cfg-out O=0
     [comp] input.I[10] cfg-in X=0
     [comp] input.I[10] cfg-out O=0
     [sln] rm-route iadd[0].C = 0
     [sln] add-comp input.I[9]
     [sln] generate input.I[9].O = 0
     [sln] rm-route iadd[0].A = 0
     [sln] add-comp input.I[10]
     [sln] generate input.I[10].O = 0
     [sln] route input.I[9].X = 0
     [sln] route input.I[10].X = 0
     [comp] make-comp input.I9
     [comp] make-comp input.I10
     add-goal [1276] [CONN] input.I[9].O => iadd[0].C (0)
     add-goal [1277] [CONN] input.I[10].O => iadd[0].A (0)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1274] [CONN] input.I[6].O => iadd[0].A (3.01029995664)
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> Current Goal: [1274] [CONN] input.I[6].O => iadd[0].A (3.01029995664)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->iadd.A
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 8
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=29

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 7
[eqn] <<< SAT => VALID >>
[eqn] [search_tree] Found enough solutions
[multi] ==== ROUTES =====
[multi] > vgain[0].Z = TetRm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[4].S = LacLp
[multi]    - connecting generates to routes.
[multi] > vgain[2].X = clm
[multi]    - connecting generates to routes.
[multi] > input.V[0].X = 2
[multi]     - ignoring route to input block.
[multi] > input.V[1].X = 2
[multi]     - ignoring route to input block.
[multi] > input.V[2].X = 2
[multi]     - ignoring route to input block.
[multi] > iadd[0].C = 0
[multi]    - making an input block.
[multi] > iadd[0].B = 0
[multi]    - making an input block.
[multi] > input.V[3].X = 0
[multi]     - ignoring route to input block.
[multi] > input.V[4].X = 0
[multi]     - ignoring route to input block.
[multi] > input.I[0].X = 0.4995
[multi]     - ignoring route to input block.
[multi] > input.I[1].X = 0.4995
[multi]     - ignoring route to input block.
[multi] > input.I[2].X = 0.4995
[multi]     - ignoring route to input block.
[multi] > input.V[5].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[3].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[4].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[5].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[6].X = 3.01029995664
[multi]     - ignoring route to input block.
[multi] > input.V[6].X = 3.01029995664
[multi]     - ignoring route to input block.
[multi] > input.V[7].X = 20
[multi]     - ignoring route to input block.
[multi] > input.I[7].X = 0.03010299956
[multi]     - ignoring route to input block.
[multi] > input.I[8].X = 0.03010299956
[multi]     - ignoring route to input block.
[multi] ==== GENERATES =====
[multi] > vdadd[3].OUT = clp
[multi]     - ignoring connected output block
[multi] > output.V[0].O = clp
[multi]     - ignoring generate to output block.
[multi] > vdadd[1].OUT = TetRp
[multi]     - ignoring connected output block
[multi] > output.V[1].O = TetRp
[multi]     - ignoring generate to output block.
[multi] > ihill_rep[4].REP = TRTetR
[multi] > ihill_rep[6].REP = TRLacL
[multi] > ihill_rep[5].REP = TRclp
[multi] > input.V[0].O = 2
[multi]     - ignoring generate to input block.
[multi] > input.V[2].O = 2
[multi]     - ignoring generate to input block.
[multi] > input.V[1].O = 2
[multi]     - ignoring generate to input block.
[multi] > input.V[4].O = 0
[multi]     - ignoring generate to input block.
[multi] > input.V[3].O = 0
[multi]     - ignoring generate to input block.
[multi] > input.I[0].O = 0.4995
[multi]     - ignoring generate to input block.
[multi] > input.I[2].O = 0.4995
[multi]     - ignoring generate to input block.
[multi] > input.I[1].O = 0.4995
[multi]     - ignoring generate to input block.
[multi] > input.V[5].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.I[3].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.I[5].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.I[4].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.V[6].O = 3.01029995664
[multi]     - ignoring generate to input block.
[multi] > input.I[6].O = 3.01029995664
[multi]     - ignoring generate to input block.
[multi] > input.V[7].O = 20
[multi]     - ignoring generate to input block.
[multi] > input.I[8].O = 0.03010299956
[multi]     - ignoring generate to input block.
[multi] > input.I[7].O = 0.03010299956
[multi]     - ignoring generate to input block.
[multi] > vgain[2].P = (3.01029995664*clm)
[multi] > vgain[2].P = (3.01029995664*clm)
[multi] > iadd[0].OUT = 3.01029995664
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] --> Number of options 2
[multi] --> Number of nodes 1
[multi] ======= New Path =======
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.I[11] cfg-in X=0
     [comp] input.I[11] cfg-out O=0
     [comp] input.I[12] cfg-in X=0
     [comp] input.I[12] cfg-out O=0
     [sln] rm-route iadd[0].C = 0
     [sln] add-comp input.I[11]
     [sln] generate input.I[11].O = 0
     [sln] rm-route iadd[0].B = 0
     [sln] add-comp input.I[12]
     [sln] generate input.I[12].O = 0
     [sln] route input.I[11].X = 0
     [sln] route input.I[12].X = 0
     [comp] make-comp input.I11
     [comp] make-comp input.I12
     add-goal [1278] [CONN] input.I[11].O => iadd[0].C (0)
     add-goal [1279] [CONN] input.I[12].O => iadd[0].B (0)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1278] [CONN] input.I[11].O => iadd[0].C (0)
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1279] [CONN] input.I[12].O => iadd[0].B (0)
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> Current Goal: [1279] [CONN] input.I[12].O => iadd[0].B (0)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->iadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->iadd.C
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 10
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=30

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 7
[eqn] <<< SAT => VALID >>
[eqn] [search_tree] Found enough solutions
[multi]   >> Found # Global Solutions: 1/1
[multi] >>>SOLUTION IS UNFINISHED <<<
[multi]  > Added Local Solution
[multi]  > Finding Global Solution
[multi] found # steps: 43
[multi] found # steps: 30
[multi] found # steps: 30
[multi] found # steps: 43
[multi] found # steps: 30
[multi] # partial ids = 5
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [1154] [EXPR]vdadd[5].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] vgain[0] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[0] cfg-in Z=TetRm
   [comp] vgain[0] cfg-in X=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] ihill_rep[2] cfg-in REP=TRTetR
   [comp] ihill_rep[2] cfg-in n=2
   [comp] ihill_rep[2] cfg-in S=LacLp
   [comp] ihill_rep[2] cfg-in Vmax=0.4995
   [comp] ihill_rep[2] cfg-in Km=40
   [comp] ihill_rep[3] cfg-in REP=TRclp
   [comp] ihill_rep[3] cfg-in n=2
   [comp] ihill_rep[3] cfg-in S=TetRp
   [comp] ihill_rep[3] cfg-in Vmax=0.4995
   [comp] ihill_rep[3] cfg-in Km=40
   [comp] vgain[4] cfg-in P=(3.01029995664*clm)
   [comp] vgain[4] cfg-in X=clm
   [comp] vgain[4] cfg-in Z=3.01029995664
   [comp] vdadd[5] cfg-in OUT_0=20
   [comp] vdadd[5] cfg-in OUT=clp
   [comp] vdadd[5] cfg-param BSW=1
   [comp] vdadd[5] cfg-param DSW=1
   [comp] vdadd[5] cfg-in D=0.03010299956
   [comp] vdadd[5] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[5] cfg-in B=0
   [comp] ihill_rep[6] cfg-in REP=TRLacL
   [comp] ihill_rep[6] cfg-in n=2
   [comp] ihill_rep[6] cfg-in S=clp
   [comp] ihill_rep[6] cfg-in Vmax=0.4995
   [comp] ihill_rep[6] cfg-in Km=40
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[0]
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] conn vgain[0].P->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate ihill_rep[2].REP = TRTetR
   [sln] add-comp ihill_rep[2]
   [sln] generate ihill_rep[3].REP = TRclp
   [sln] add-comp ihill_rep[3]
   [sln] generate vgain[4].P = (3.01029995664*clm)
   [sln] add-comp vgain[4]
   [sln] generate vgain[4].P = (3.01029995664*clm)
   [sln] conn vgain[4].P->vdadd[5].A
   [sln] generate vdadd[5].OUT = clp
   [sln] add-comp vdadd[5]
   [sln] generate ihill_rep[6].REP = TRLacL
   [sln] add-comp ihill_rep[6]
   [sln] route vgain[0].Z = TetRm
   [sln] route vgain[0].X = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route ihill_rep[2].n = 2
   [sln] route ihill_rep[2].S = LacLp
   [sln] route ihill_rep[2].Vmax = 0.4995
   [sln] route ihill_rep[2].Km = 40
   [sln] route ihill_rep[3].n = 2
   [sln] route ihill_rep[3].S = TetRp
   [sln] route ihill_rep[3].Vmax = 0.4995
   [sln] route ihill_rep[3].Km = 40
   [sln] route vgain[4].X = clm
   [sln] route vgain[4].Z = 3.01029995664
   [sln] route vdadd[5].OUT_0 = 20
   [sln] route vdadd[5].D = 0.03010299956
   [sln] route vdadd[5].B = 0
   [sln] route ihill_rep[6].n = 2
   [sln] route ihill_rep[6].S = clp
   [sln] route ihill_rep[6].Vmax = 0.4995
   [sln] route ihill_rep[6].Km = 40
   [comp] make-comp vgain0
   [comp] make-comp vdadd1
   [comp] make-comp ihill_rep2
   [comp] make-comp ihill_rep3
   [comp] make-comp vgain4
   [comp] make-comp vdadd5
   [comp] make-comp ihill_rep6
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[5].A<V>=(3.01029995664*clm)
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ==== ROUTES =====
[multi] > vgain[0].Z = TetRm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[2].S = LacLp
[multi]    - connecting generates to routes.
[multi] > vgain[4].X = clm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[6].S = clp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[3].S = TetRp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[2].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[6].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[3].n = 2
[multi]    - making an input block.
[multi] > vdadd[5].B = 0
[multi]    - making an input block.
[multi] > vdadd[1].B = 0
[multi]    - making an input block.
[multi] > ihill_rep[2].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[6].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[3].Vmax = 0.4995
[multi]    - making an input block.
[multi] > vdadd[1].OUT_0 = 40
[multi]    - making an input block.
[multi] > ihill_rep[2].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[6].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[3].Km = 40
[multi]    - making an input block.
[multi] > vgain[4].Z = 3.01029995664
[multi]    - making an input block.
[multi] > vgain[0].X = 3.01029995664
[multi]    - making an input block.
[multi] > vdadd[5].OUT_0 = 20
[multi]    - making an input block.
[multi] > vdadd[5].D = 0.03010299956
[multi]    - making an input block.
[multi] > vdadd[1].D = 0.03010299956
[multi]    - making an input block.
[multi] ==== GENERATES =====
[multi] > vdadd[5].OUT = clp
[multi]    - making an output block.
[multi] > vdadd[1].OUT = TetRp
[multi]    - making an output block.
[multi] > ihill_rep[2].REP = TRTetR
[multi] > ihill_rep[6].REP = TRLacL
[multi] > ihill_rep[3].REP = TRclp
[multi] > vgain[4].P = (3.01029995664*clm)
[multi] > vgain[4].P = (3.01029995664*clm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] --> Number of options 21
[multi] --> Number of nodes 1
[multi] ======= Partial (Root) Steps 176 =======
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [1154] [EXPR]vdadd[5].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] vgain[0] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[0] cfg-in Z=TetRm
   [comp] vgain[0] cfg-in X=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] ihill_rep[2] cfg-in REP=TRTetR
   [comp] ihill_rep[2] cfg-in n=2
   [comp] ihill_rep[2] cfg-in S=LacLp
   [comp] ihill_rep[2] cfg-in Vmax=0.4995
   [comp] ihill_rep[2] cfg-in Km=40
   [comp] ihill_rep[3] cfg-in REP=TRclp
   [comp] ihill_rep[3] cfg-in n=2
   [comp] ihill_rep[3] cfg-in S=TetRp
   [comp] ihill_rep[3] cfg-in Vmax=0.4995
   [comp] ihill_rep[3] cfg-in Km=40
   [comp] vgain[4] cfg-in P=(3.01029995664*clm)
   [comp] vgain[4] cfg-in X=clm
   [comp] vgain[4] cfg-in Z=3.01029995664
   [comp] vdadd[5] cfg-in OUT_0=20
   [comp] vdadd[5] cfg-in OUT=clp
   [comp] vdadd[5] cfg-param BSW=1
   [comp] vdadd[5] cfg-param DSW=1
   [comp] vdadd[5] cfg-in D=0.03010299956
   [comp] vdadd[5] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[5] cfg-in B=0
   [comp] ihill_rep[6] cfg-in REP=TRLacL
   [comp] ihill_rep[6] cfg-in n=2
   [comp] ihill_rep[6] cfg-in S=clp
   [comp] ihill_rep[6] cfg-in Vmax=0.4995
   [comp] ihill_rep[6] cfg-in Km=40
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[0]
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] conn vgain[0].P->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate ihill_rep[2].REP = TRTetR
   [sln] add-comp ihill_rep[2]
   [sln] generate ihill_rep[3].REP = TRclp
   [sln] add-comp ihill_rep[3]
   [sln] generate vgain[4].P = (3.01029995664*clm)
   [sln] add-comp vgain[4]
   [sln] generate vgain[4].P = (3.01029995664*clm)
   [sln] conn vgain[4].P->vdadd[5].A
   [sln] generate vdadd[5].OUT = clp
   [sln] add-comp vdadd[5]
   [sln] generate ihill_rep[6].REP = TRLacL
   [sln] add-comp ihill_rep[6]
   [sln] route vgain[0].Z = TetRm
   [sln] route vgain[0].X = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route ihill_rep[2].n = 2
   [sln] route ihill_rep[2].S = LacLp
   [sln] route ihill_rep[2].Vmax = 0.4995
   [sln] route ihill_rep[2].Km = 40
   [sln] route ihill_rep[3].n = 2
   [sln] route ihill_rep[3].S = TetRp
   [sln] route ihill_rep[3].Vmax = 0.4995
   [sln] route ihill_rep[3].Km = 40
   [sln] route vgain[4].X = clm
   [sln] route vgain[4].Z = 3.01029995664
   [sln] route vdadd[5].OUT_0 = 20
   [sln] route vdadd[5].D = 0.03010299956
   [sln] route vdadd[5].B = 0
   [sln] route ihill_rep[6].n = 2
   [sln] route ihill_rep[6].S = clp
   [sln] route ihill_rep[6].Vmax = 0.4995
   [sln] route ihill_rep[6].Km = 40
   [comp] make-comp vgain0
   [comp] make-comp vdadd1
   [comp] make-comp ihill_rep2
   [comp] make-comp ihill_rep3
   [comp] make-comp vgain4
   [comp] make-comp vdadd5
   [comp] make-comp ihill_rep6
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[5].A<V>=(3.01029995664*clm)
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ============================
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.V[0] cfg-in X=2
     [comp] input.V[0] cfg-out O=2
     [comp] input.V[1] cfg-in X=2
     [comp] input.V[1] cfg-out O=2
     [comp] input.V[2] cfg-in X=2
     [comp] input.V[2] cfg-out O=2
     [comp] input.V[3] cfg-in X=0
     [comp] input.V[3] cfg-out O=0
     [comp] input.V[4] cfg-in X=0
     [comp] input.V[4] cfg-out O=0
     [comp] input.I[0] cfg-in X=0.4995
     [comp] input.I[0] cfg-out O=0.4995
     [comp] input.I[1] cfg-in X=0.4995
     [comp] input.I[1] cfg-out O=0.4995
     [comp] input.I[2] cfg-in X=0.4995
     [comp] input.I[2] cfg-out O=0.4995
     [comp] input.V[5] cfg-in X=40
     [comp] input.V[5] cfg-out O=40
     [comp] input.I[3] cfg-in X=40
     [comp] input.I[3] cfg-out O=40
     [comp] input.I[4] cfg-in X=40
     [comp] input.I[4] cfg-out O=40
     [comp] input.I[5] cfg-in X=40
     [comp] input.I[5] cfg-out O=40
     [comp] input.I[6] cfg-in X=3.01029995664
     [comp] input.I[6] cfg-out O=3.01029995664
     [comp] input.V[6] cfg-in X=3.01029995664
     [comp] input.V[6] cfg-out O=3.01029995664
     [comp] input.V[7] cfg-in X=20
     [comp] input.V[7] cfg-out O=20
     [comp] input.I[7] cfg-in X=0.03010299956
     [comp] input.I[7] cfg-out O=0.03010299956
     [comp] input.I[8] cfg-in X=0.03010299956
     [comp] input.I[8] cfg-out O=0.03010299956
     [comp] output.V[0] cfg-in X=clp
     [comp] output.V[0] cfg-out O=clp
     [comp] output.V[1] cfg-in X=TetRp
     [comp] output.V[1] cfg-out O=TetRp
     [sln] rm-route ihill_rep[6].S = clp
     [sln] rm-route ihill_rep[3].S = TetRp
     [sln] rm-route ihill_rep[2].n = 2
     [sln] add-comp input.V[0]
     [sln] generate input.V[0].O = 2
     [sln] rm-route ihill_rep[6].n = 2
     [sln] add-comp input.V[1]
     [sln] generate input.V[1].O = 2
     [sln] rm-route ihill_rep[3].n = 2
     [sln] add-comp input.V[2]
     [sln] generate input.V[2].O = 2
     [sln] rm-route vdadd[5].B = 0
     [sln] add-comp input.V[3]
     [sln] generate input.V[3].O = 0
     [sln] rm-route vdadd[1].B = 0
     [sln] add-comp input.V[4]
     [sln] generate input.V[4].O = 0
     [sln] rm-route ihill_rep[2].Vmax = 0.4995
     [sln] add-comp input.I[0]
     [sln] generate input.I[0].O = 0.4995
     [sln] rm-route ihill_rep[6].Vmax = 0.4995
     [sln] add-comp input.I[1]
     [sln] generate input.I[1].O = 0.4995
     [sln] rm-route ihill_rep[3].Vmax = 0.4995
     [sln] add-comp input.I[2]
     [sln] generate input.I[2].O = 0.4995
     [sln] rm-route vdadd[1].OUT_0 = 40
     [sln] add-comp input.V[5]
     [sln] generate input.V[5].O = 40
     [sln] rm-route ihill_rep[2].Km = 40
     [sln] add-comp input.I[3]
     [sln] generate input.I[3].O = 40
     [sln] rm-route ihill_rep[6].Km = 40
     [sln] add-comp input.I[4]
     [sln] generate input.I[4].O = 40
     [sln] rm-route ihill_rep[3].Km = 40
     [sln] add-comp input.I[5]
     [sln] generate input.I[5].O = 40
     [sln] rm-route vgain[4].Z = 3.01029995664
     [sln] add-comp input.I[6]
     [sln] generate input.I[6].O = 3.01029995664
     [sln] rm-route vgain[0].X = 3.01029995664
     [sln] add-comp input.V[6]
     [sln] generate input.V[6].O = 3.01029995664
     [sln] rm-route vdadd[5].OUT_0 = 20
     [sln] add-comp input.V[7]
     [sln] generate input.V[7].O = 20
     [sln] rm-route vdadd[5].D = 0.03010299956
     [sln] add-comp input.I[7]
     [sln] generate input.I[7].O = 0.03010299956
     [sln] rm-route vdadd[1].D = 0.03010299956
     [sln] add-comp input.I[8]
     [sln] generate input.I[8].O = 0.03010299956
     [sln] add-comp output.V[0]
     [sln] generate output.V[0].O = clp
     [sln] add-comp output.V[1]
     [sln] generate output.V[1].O = TetRp
     [sln] route input.V[0].X = 2
     [sln] route input.V[1].X = 2
     [sln] route input.V[2].X = 2
     [sln] route input.V[3].X = 0
     [sln] route input.V[4].X = 0
     [sln] route input.I[0].X = 0.4995
     [sln] route input.I[1].X = 0.4995
     [sln] route input.I[2].X = 0.4995
     [sln] route input.V[5].X = 40
     [sln] route input.I[3].X = 40
     [sln] route input.I[4].X = 40
     [sln] route input.I[5].X = 40
     [sln] route input.I[6].X = 3.01029995664
     [sln] route input.V[6].X = 3.01029995664
     [sln] route input.V[7].X = 20
     [sln] route input.I[7].X = 0.03010299956
     [sln] route input.I[8].X = 0.03010299956
     [comp] make-comp input.V0
     [comp] make-comp input.V1
     [comp] make-comp input.V2
     [comp] make-comp input.V3
     [comp] make-comp input.V4
     [comp] make-comp input.I0
     [comp] make-comp input.I1
     [comp] make-comp input.I2
     [comp] make-comp input.V5
     [comp] make-comp input.I3
     [comp] make-comp input.I4
     [comp] make-comp input.I5
     [comp] make-comp input.I6
     [comp] make-comp input.V6
     [comp] make-comp input.V7
     [comp] make-comp input.I7
     [comp] make-comp input.I8
     [comp] make-comp output.V0
     [comp] make-comp output.V1
     add-goal [1280] [CONN] vdadd[5].OUT => ihill_rep[6].S (clp)
     add-goal [1281] [CONN] vdadd[1].OUT => ihill_rep[3].S (TetRp)
     add-goal [1282] [CONN] input.V[0].O => ihill_rep[2].n (2)
     add-goal [1283] [CONN] input.V[1].O => ihill_rep[6].n (2)
     add-goal [1284] [CONN] input.V[2].O => ihill_rep[3].n (2)
     add-goal [1285] [CONN] input.V[3].O => vdadd[5].B (0)
     add-goal [1286] [CONN] input.V[4].O => vdadd[1].B (0)
     add-goal [1287] [CONN] input.I[0].O => ihill_rep[2].Vmax (0.4995)
     add-goal [1288] [CONN] input.I[1].O => ihill_rep[6].Vmax (0.4995)
     add-goal [1289] [CONN] input.I[2].O => ihill_rep[3].Vmax (0.4995)
     add-goal [1290] [CONN] input.V[5].O => vdadd[1].OUT_0 (40)
     add-goal [1291] [CONN] input.I[3].O => ihill_rep[2].Km (40)
     add-goal [1292] [CONN] input.I[4].O => ihill_rep[6].Km (40)
     add-goal [1293] [CONN] input.I[5].O => ihill_rep[3].Km (40)
     add-goal [1294] [CONN] input.I[6].O => vgain[4].Z (3.01029995664)
     add-goal [1295] [CONN] input.V[6].O => vgain[0].X (3.01029995664)
     add-goal [1296] [CONN] input.V[7].O => vdadd[5].OUT_0 (20)
     add-goal [1297] [CONN] input.I[7].O => vdadd[5].D (0.03010299956)
     add-goal [1298] [CONN] input.I[8].O => vdadd[1].D (0.03010299956)
     add-goal [1299] [CONN] vdadd[5].OUT => output.V[0].X (clp)
     add-goal [1300] [CONN] vdadd[1].OUT => output.V[1].X (TetRp)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[1286] [CONN] input.V[4].O => vdadd[1].B (0)
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1296] [CONN] input.V[7].O => vdadd[5].OUT_0 (20)
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1289] [CONN] input.I[2].O => ihill_rep[3].Vmax (0.4995)
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1285] [CONN] input.V[3].O => vdadd[5].B (0)
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1280] [CONN] vdadd[5].OUT => ihill_rep[6].S (clp)
[1290] [CONN] input.V[5].O => vdadd[1].OUT_0 (40)
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1300] [CONN] vdadd[1].OUT => output.V[1].X (TetRp)
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1297] [CONN] input.I[7].O => vdadd[5].D (0.03010299956)
[1299] [CONN] vdadd[5].OUT => output.V[0].X (clp)
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1293] [CONN] input.I[5].O => ihill_rep[3].Km (40)
[1298] [CONN] input.I[8].O => vdadd[1].D (0.03010299956)
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1295] [CONN] input.V[6].O => vgain[0].X (3.01029995664)
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1287] [CONN] input.I[0].O => ihill_rep[2].Vmax (0.4995)
[1288] [CONN] input.I[1].O => ihill_rep[6].Vmax (0.4995)
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1292] [CONN] input.I[4].O => ihill_rep[6].Km (40)
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1284] [CONN] input.V[2].O => ihill_rep[3].n (2)
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1283] [CONN] input.V[1].O => ihill_rep[6].n (2)
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1282] [CONN] input.V[0].O => ihill_rep[2].n (2)
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1281] [CONN] vdadd[1].OUT => ihill_rep[3].S (TetRp)
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1294] [CONN] input.I[6].O => vgain[4].Z (3.01029995664)
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1291] [CONN] input.I[3].O => ihill_rep[2].Km (40)
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> Current Goal: [1291] [CONN] input.I[3].O => ihill_rep[2].Km (40)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vgain.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 3
[eqn] <<< SAT => VALID >>
[eqn] found 0 / 1
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1294] [CONN] input.I[6].O => vgain[4].Z (3.01029995664)
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> Current Goal: [1294] [CONN] input.I[6].O => vgain[4].Z (3.01029995664)
iadd.OUT || # ins: 3 / connected / I ?= I/distance=0
iadd.OUT -> true
[eqn] >>> NUMBER OF COMPATIBLE COMPONENTS  1 <<<
[eqn] new: [0] <iadd> output OUT.I
<analog>:((iadd.I{A}:+iadd.I{B}:)-iadd.I{C}:) / std=gauss ((1e-05*iadd.V{OUT}:)+0.001)
<analog> [v]=[-5.,10.] {v}->[v]=@


[eqn] ==== iadd====

[WARN][add_passthru_step.RAddInAssign] this assignment is perfect!: OUT=__tmp__
[WARN][add_passthru_step.RAddInAssign] this assignment is too complicated: C=(-1*__tmp__)
[eqn]     -> failed to convert unify steps
[eqn] ==== iadd====

[WARN][add_passthru_step.RAddInAssign] this assignment is perfect!: OUT=__tmp__
[WARN][add_passthru_step.RAddInAssign] this assignment is perfect!: A=__tmp__
[eqn]     -> converted to 12 ssteps
[eqn] ==== iadd====

[WARN][add_passthru_step.RAddInAssign] this assignment is perfect!: OUT=__tmp__
[WARN][add_passthru_step.RAddInAssign] this assignment is perfect!: B=__tmp__
[eqn]     -> converted to 12 ssteps
[eqn] [FOUND-SOLS] ===> Found <2> solutions
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vgain.Z
[eqn] -> [valid?] testing node 5
[eqn] <<< SAT => VALID >>
[eqn] found 0 / 1
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1302] [CONN] input.I[6].O => iadd[0].B (3.01029995664)
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> Current Goal: [1302] [CONN] input.I[6].O => iadd[0].B (3.01029995664)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->iadd.B
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 6
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=31

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 4
[eqn] <<< SAT => VALID >>
[eqn] [search_tree] Found enough solutions
[multi] ==== ROUTES =====
[multi] > vgain[0].Z = TetRm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[2].S = LacLp
[multi]    - connecting generates to routes.
[multi] > vgain[4].X = clm
[multi]    - connecting generates to routes.
[multi] > input.V[0].X = 2
[multi]     - ignoring route to input block.
[multi] > input.V[1].X = 2
[multi]     - ignoring route to input block.
[multi] > input.V[2].X = 2
[multi]     - ignoring route to input block.
[multi] > iadd[0].C = 0
[multi]    - making an input block.
[multi] > iadd[0].A = 0
[multi]    - making an input block.
[multi] > input.V[3].X = 0
[multi]     - ignoring route to input block.
[multi] > input.V[4].X = 0
[multi]     - ignoring route to input block.
[multi] > input.I[0].X = 0.4995
[multi]     - ignoring route to input block.
[multi] > input.I[1].X = 0.4995
[multi]     - ignoring route to input block.
[multi] > input.I[2].X = 0.4995
[multi]     - ignoring route to input block.
[multi] > input.V[5].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[3].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[4].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[5].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[6].X = 3.01029995664
[multi]     - ignoring route to input block.
[multi] > input.V[6].X = 3.01029995664
[multi]     - ignoring route to input block.
[multi] > input.V[7].X = 20
[multi]     - ignoring route to input block.
[multi] > input.I[7].X = 0.03010299956
[multi]     - ignoring route to input block.
[multi] > input.I[8].X = 0.03010299956
[multi]     - ignoring route to input block.
[multi] ==== GENERATES =====
[multi] > vdadd[5].OUT = clp
[multi]     - ignoring connected output block
[multi] > output.V[0].O = clp
[multi]     - ignoring generate to output block.
[multi] > vdadd[1].OUT = TetRp
[multi]     - ignoring connected output block
[multi] > output.V[1].O = TetRp
[multi]     - ignoring generate to output block.
[multi] > ihill_rep[2].REP = TRTetR
[multi] > ihill_rep[6].REP = TRLacL
[multi] > ihill_rep[3].REP = TRclp
[multi] > input.V[0].O = 2
[multi]     - ignoring generate to input block.
[multi] > input.V[2].O = 2
[multi]     - ignoring generate to input block.
[multi] > input.V[1].O = 2
[multi]     - ignoring generate to input block.
[multi] > input.V[4].O = 0
[multi]     - ignoring generate to input block.
[multi] > input.V[3].O = 0
[multi]     - ignoring generate to input block.
[multi] > input.I[0].O = 0.4995
[multi]     - ignoring generate to input block.
[multi] > input.I[2].O = 0.4995
[multi]     - ignoring generate to input block.
[multi] > input.I[1].O = 0.4995
[multi]     - ignoring generate to input block.
[multi] > input.V[5].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.I[3].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.I[5].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.I[4].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.V[6].O = 3.01029995664
[multi]     - ignoring generate to input block.
[multi] > input.I[6].O = 3.01029995664
[multi]     - ignoring generate to input block.
[multi] > input.V[7].O = 20
[multi]     - ignoring generate to input block.
[multi] > input.I[8].O = 0.03010299956
[multi]     - ignoring generate to input block.
[multi] > input.I[7].O = 0.03010299956
[multi]     - ignoring generate to input block.
[multi] > vgain[4].P = (3.01029995664*clm)
[multi] > vgain[4].P = (3.01029995664*clm)
[multi] > iadd[0].OUT = 3.01029995664
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] --> Number of options 2
[multi] --> Number of nodes 1
[multi] ======= New Path =======
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.I[9] cfg-in X=0
     [comp] input.I[9] cfg-out O=0
     [comp] input.I[10] cfg-in X=0
     [comp] input.I[10] cfg-out O=0
     [sln] rm-route iadd[0].C = 0
     [sln] add-comp input.I[9]
     [sln] generate input.I[9].O = 0
     [sln] rm-route iadd[0].A = 0
     [sln] add-comp input.I[10]
     [sln] generate input.I[10].O = 0
     [sln] route input.I[9].X = 0
     [sln] route input.I[10].X = 0
     [comp] make-comp input.I9
     [comp] make-comp input.I10
     add-goal [1303] [CONN] input.I[9].O => iadd[0].C (0)
     add-goal [1304] [CONN] input.I[10].O => iadd[0].A (0)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1301] [CONN] input.I[6].O => iadd[0].A (3.01029995664)
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> Current Goal: [1301] [CONN] input.I[6].O => iadd[0].A (3.01029995664)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->iadd.A
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 8
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=32

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 7
[eqn] <<< SAT => VALID >>
[eqn] [search_tree] Found enough solutions
[multi] ==== ROUTES =====
[multi] > vgain[0].Z = TetRm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[2].S = LacLp
[multi]    - connecting generates to routes.
[multi] > vgain[4].X = clm
[multi]    - connecting generates to routes.
[multi] > input.V[0].X = 2
[multi]     - ignoring route to input block.
[multi] > input.V[1].X = 2
[multi]     - ignoring route to input block.
[multi] > input.V[2].X = 2
[multi]     - ignoring route to input block.
[multi] > iadd[0].C = 0
[multi]    - making an input block.
[multi] > iadd[0].B = 0
[multi]    - making an input block.
[multi] > input.V[3].X = 0
[multi]     - ignoring route to input block.
[multi] > input.V[4].X = 0
[multi]     - ignoring route to input block.
[multi] > input.I[0].X = 0.4995
[multi]     - ignoring route to input block.
[multi] > input.I[1].X = 0.4995
[multi]     - ignoring route to input block.
[multi] > input.I[2].X = 0.4995
[multi]     - ignoring route to input block.
[multi] > input.V[5].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[3].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[4].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[5].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[6].X = 3.01029995664
[multi]     - ignoring route to input block.
[multi] > input.V[6].X = 3.01029995664
[multi]     - ignoring route to input block.
[multi] > input.V[7].X = 20
[multi]     - ignoring route to input block.
[multi] > input.I[7].X = 0.03010299956
[multi]     - ignoring route to input block.
[multi] > input.I[8].X = 0.03010299956
[multi]     - ignoring route to input block.
[multi] ==== GENERATES =====
[multi] > vdadd[5].OUT = clp
[multi]     - ignoring connected output block
[multi] > output.V[0].O = clp
[multi]     - ignoring generate to output block.
[multi] > vdadd[1].OUT = TetRp
[multi]     - ignoring connected output block
[multi] > output.V[1].O = TetRp
[multi]     - ignoring generate to output block.
[multi] > ihill_rep[2].REP = TRTetR
[multi] > ihill_rep[6].REP = TRLacL
[multi] > ihill_rep[3].REP = TRclp
[multi] > input.V[0].O = 2
[multi]     - ignoring generate to input block.
[multi] > input.V[2].O = 2
[multi]     - ignoring generate to input block.
[multi] > input.V[1].O = 2
[multi]     - ignoring generate to input block.
[multi] > input.V[4].O = 0
[multi]     - ignoring generate to input block.
[multi] > input.V[3].O = 0
[multi]     - ignoring generate to input block.
[multi] > input.I[0].O = 0.4995
[multi]     - ignoring generate to input block.
[multi] > input.I[2].O = 0.4995
[multi]     - ignoring generate to input block.
[multi] > input.I[1].O = 0.4995
[multi]     - ignoring generate to input block.
[multi] > input.V[5].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.I[3].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.I[5].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.I[4].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.V[6].O = 3.01029995664
[multi]     - ignoring generate to input block.
[multi] > input.I[6].O = 3.01029995664
[multi]     - ignoring generate to input block.
[multi] > input.V[7].O = 20
[multi]     - ignoring generate to input block.
[multi] > input.I[8].O = 0.03010299956
[multi]     - ignoring generate to input block.
[multi] > input.I[7].O = 0.03010299956
[multi]     - ignoring generate to input block.
[multi] > vgain[4].P = (3.01029995664*clm)
[multi] > vgain[4].P = (3.01029995664*clm)
[multi] > iadd[0].OUT = 3.01029995664
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] --> Number of options 2
[multi] --> Number of nodes 1
[multi] ======= New Path =======
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.I[11] cfg-in X=0
     [comp] input.I[11] cfg-out O=0
     [comp] input.I[12] cfg-in X=0
     [comp] input.I[12] cfg-out O=0
     [sln] rm-route iadd[0].C = 0
     [sln] add-comp input.I[11]
     [sln] generate input.I[11].O = 0
     [sln] rm-route iadd[0].B = 0
     [sln] add-comp input.I[12]
     [sln] generate input.I[12].O = 0
     [sln] route input.I[11].X = 0
     [sln] route input.I[12].X = 0
     [comp] make-comp input.I11
     [comp] make-comp input.I12
     add-goal [1305] [CONN] input.I[11].O => iadd[0].C (0)
     add-goal [1306] [CONN] input.I[12].O => iadd[0].B (0)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1306] [CONN] input.I[12].O => iadd[0].B (0)
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1305] [CONN] input.I[11].O => iadd[0].C (0)
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> Current Goal: [1305] [CONN] input.I[11].O => iadd[0].C (0)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->iadd.C
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->iadd.B
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 10
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=33

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 7
[eqn] <<< SAT => VALID >>
[eqn] [search_tree] Found enough solutions
[multi]   >> Found # Global Solutions: 1/1
[multi] >>>SOLUTION IS UNFINISHED <<<
[multi]  > Added Local Solution
[multi]  > Finding Global Solution
[multi] found # steps: 43
[multi] found # steps: 43
[multi] found # steps: 30
[multi] found # steps: 30
[multi] found # steps: 30
[multi] # partial ids = 5
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] vgain[0] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[0] cfg-in Z=TetRm
   [comp] vgain[0] cfg-in X=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] itov[2] cfg-in Y=(3.01029995664*clm)
   [comp] itov[2] cfg-in K=clm
   [comp] itov[2] cfg-in X=3.01029995664
   [comp] vdadd[3] cfg-in OUT_0=20
   [comp] vdadd[3] cfg-in OUT=clp
   [comp] vdadd[3] cfg-param BSW=1
   [comp] vdadd[3] cfg-param DSW=1
   [comp] vdadd[3] cfg-in D=0.03010299956
   [comp] vdadd[3] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[3] cfg-in B=0
   [comp] ihill_rep[4] cfg-in REP=TRTetR
   [comp] ihill_rep[4] cfg-in n=2
   [comp] ihill_rep[4] cfg-in S=LacLp
   [comp] ihill_rep[4] cfg-in Vmax=0.4995
   [comp] ihill_rep[4] cfg-in Km=40
   [comp] ihill_rep[5] cfg-in REP=TRclp
   [comp] ihill_rep[5] cfg-in n=2
   [comp] ihill_rep[5] cfg-in S=TetRp
   [comp] ihill_rep[5] cfg-in Vmax=0.4995
   [comp] ihill_rep[5] cfg-in Km=40
   [comp] ihill_rep[6] cfg-in REP=TRLacL
   [comp] ihill_rep[6] cfg-in n=2
   [comp] ihill_rep[6] cfg-in S=clp
   [comp] ihill_rep[6] cfg-in Vmax=0.4995
   [comp] ihill_rep[6] cfg-in Km=40
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[0]
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] conn vgain[0].P->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] add-comp itov[2]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] conn itov[2].Y->vdadd[3].A
   [sln] generate vdadd[3].OUT = clp
   [sln] add-comp vdadd[3]
   [sln] generate ihill_rep[4].REP = TRTetR
   [sln] add-comp ihill_rep[4]
   [sln] generate ihill_rep[5].REP = TRclp
   [sln] add-comp ihill_rep[5]
   [sln] generate ihill_rep[6].REP = TRLacL
   [sln] add-comp ihill_rep[6]
   [sln] route vgain[0].Z = TetRm
   [sln] route vgain[0].X = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route itov[2].K = clm
   [sln] route itov[2].X = 3.01029995664
   [sln] route vdadd[3].OUT_0 = 20
   [sln] route vdadd[3].D = 0.03010299956
   [sln] route vdadd[3].B = 0
   [sln] route ihill_rep[4].n = 2
   [sln] route ihill_rep[4].S = LacLp
   [sln] route ihill_rep[4].Vmax = 0.4995
   [sln] route ihill_rep[4].Km = 40
   [sln] route ihill_rep[5].n = 2
   [sln] route ihill_rep[5].S = TetRp
   [sln] route ihill_rep[5].Vmax = 0.4995
   [sln] route ihill_rep[5].Km = 40
   [sln] route ihill_rep[6].n = 2
   [sln] route ihill_rep[6].S = clp
   [sln] route ihill_rep[6].Vmax = 0.4995
   [sln] route ihill_rep[6].Km = 40
   [comp] make-comp vgain0
   [comp] make-comp vdadd1
   [comp] make-comp itov2
   [comp] make-comp vdadd3
   [comp] make-comp ihill_rep4
   [comp] make-comp ihill_rep5
   [comp] make-comp ihill_rep6
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ==== ROUTES =====
[multi] > vgain[0].Z = TetRm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[4].S = LacLp
[multi]    - connecting generates to routes.
[multi] > itov[2].K = clm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[6].S = clp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[5].S = TetRp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[4].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[6].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[5].n = 2
[multi]    - making an input block.
[multi] > vdadd[3].B = 0
[multi]    - making an input block.
[multi] > vdadd[1].B = 0
[multi]    - making an input block.
[multi] > ihill_rep[4].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[6].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[5].Vmax = 0.4995
[multi]    - making an input block.
[multi] > vdadd[1].OUT_0 = 40
[multi]    - making an input block.
[multi] > ihill_rep[4].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[6].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[5].Km = 40
[multi]    - making an input block.
[multi] > itov[2].X = 3.01029995664
[multi]    - making an input block.
[multi] > vgain[0].X = 3.01029995664
[multi]    - making an input block.
[multi] > vdadd[3].OUT_0 = 20
[multi]    - making an input block.
[multi] > vdadd[3].D = 0.03010299956
[multi]    - making an input block.
[multi] > vdadd[1].D = 0.03010299956
[multi]    - making an input block.
[multi] ==== GENERATES =====
[multi] > vdadd[3].OUT = clp
[multi]    - making an output block.
[multi] > vdadd[1].OUT = TetRp
[multi]    - making an output block.
[multi] > ihill_rep[4].REP = TRTetR
[multi] > ihill_rep[6].REP = TRLacL
[multi] > ihill_rep[5].REP = TRclp
[multi] > itov[2].Y = (3.01029995664*clm)
[multi] > itov[2].Y = (3.01029995664*clm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] --> Number of options 21
[multi] --> Number of nodes 1
[multi] ======= Partial (Root) Steps 176 =======
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] vgain[0] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[0] cfg-in Z=TetRm
   [comp] vgain[0] cfg-in X=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] itov[2] cfg-in Y=(3.01029995664*clm)
   [comp] itov[2] cfg-in K=clm
   [comp] itov[2] cfg-in X=3.01029995664
   [comp] vdadd[3] cfg-in OUT_0=20
   [comp] vdadd[3] cfg-in OUT=clp
   [comp] vdadd[3] cfg-param BSW=1
   [comp] vdadd[3] cfg-param DSW=1
   [comp] vdadd[3] cfg-in D=0.03010299956
   [comp] vdadd[3] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[3] cfg-in B=0
   [comp] ihill_rep[4] cfg-in REP=TRTetR
   [comp] ihill_rep[4] cfg-in n=2
   [comp] ihill_rep[4] cfg-in S=LacLp
   [comp] ihill_rep[4] cfg-in Vmax=0.4995
   [comp] ihill_rep[4] cfg-in Km=40
   [comp] ihill_rep[5] cfg-in REP=TRclp
   [comp] ihill_rep[5] cfg-in n=2
   [comp] ihill_rep[5] cfg-in S=TetRp
   [comp] ihill_rep[5] cfg-in Vmax=0.4995
   [comp] ihill_rep[5] cfg-in Km=40
   [comp] ihill_rep[6] cfg-in REP=TRLacL
   [comp] ihill_rep[6] cfg-in n=2
   [comp] ihill_rep[6] cfg-in S=clp
   [comp] ihill_rep[6] cfg-in Vmax=0.4995
   [comp] ihill_rep[6] cfg-in Km=40
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[0]
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] conn vgain[0].P->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] add-comp itov[2]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] conn itov[2].Y->vdadd[3].A
   [sln] generate vdadd[3].OUT = clp
   [sln] add-comp vdadd[3]
   [sln] generate ihill_rep[4].REP = TRTetR
   [sln] add-comp ihill_rep[4]
   [sln] generate ihill_rep[5].REP = TRclp
   [sln] add-comp ihill_rep[5]
   [sln] generate ihill_rep[6].REP = TRLacL
   [sln] add-comp ihill_rep[6]
   [sln] route vgain[0].Z = TetRm
   [sln] route vgain[0].X = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route itov[2].K = clm
   [sln] route itov[2].X = 3.01029995664
   [sln] route vdadd[3].OUT_0 = 20
   [sln] route vdadd[3].D = 0.03010299956
   [sln] route vdadd[3].B = 0
   [sln] route ihill_rep[4].n = 2
   [sln] route ihill_rep[4].S = LacLp
   [sln] route ihill_rep[4].Vmax = 0.4995
   [sln] route ihill_rep[4].Km = 40
   [sln] route ihill_rep[5].n = 2
   [sln] route ihill_rep[5].S = TetRp
   [sln] route ihill_rep[5].Vmax = 0.4995
   [sln] route ihill_rep[5].Km = 40
   [sln] route ihill_rep[6].n = 2
   [sln] route ihill_rep[6].S = clp
   [sln] route ihill_rep[6].Vmax = 0.4995
   [sln] route ihill_rep[6].Km = 40
   [comp] make-comp vgain0
   [comp] make-comp vdadd1
   [comp] make-comp itov2
   [comp] make-comp vdadd3
   [comp] make-comp ihill_rep4
   [comp] make-comp ihill_rep5
   [comp] make-comp ihill_rep6
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ============================
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.V[0] cfg-in X=2
     [comp] input.V[0] cfg-out O=2
     [comp] input.V[1] cfg-in X=2
     [comp] input.V[1] cfg-out O=2
     [comp] input.V[2] cfg-in X=2
     [comp] input.V[2] cfg-out O=2
     [comp] input.V[3] cfg-in X=0
     [comp] input.V[3] cfg-out O=0
     [comp] input.V[4] cfg-in X=0
     [comp] input.V[4] cfg-out O=0
     [comp] input.I[0] cfg-in X=0.4995
     [comp] input.I[0] cfg-out O=0.4995
     [comp] input.I[1] cfg-in X=0.4995
     [comp] input.I[1] cfg-out O=0.4995
     [comp] input.I[2] cfg-in X=0.4995
     [comp] input.I[2] cfg-out O=0.4995
     [comp] input.V[5] cfg-in X=40
     [comp] input.V[5] cfg-out O=40
     [comp] input.I[3] cfg-in X=40
     [comp] input.I[3] cfg-out O=40
     [comp] input.I[4] cfg-in X=40
     [comp] input.I[4] cfg-out O=40
     [comp] input.I[5] cfg-in X=40
     [comp] input.I[5] cfg-out O=40
     [comp] input.I[6] cfg-in X=3.01029995664
     [comp] input.I[6] cfg-out O=3.01029995664
     [comp] input.V[6] cfg-in X=3.01029995664
     [comp] input.V[6] cfg-out O=3.01029995664
     [comp] input.V[7] cfg-in X=20
     [comp] input.V[7] cfg-out O=20
     [comp] input.I[7] cfg-in X=0.03010299956
     [comp] input.I[7] cfg-out O=0.03010299956
     [comp] input.I[8] cfg-in X=0.03010299956
     [comp] input.I[8] cfg-out O=0.03010299956
     [comp] output.V[0] cfg-in X=clp
     [comp] output.V[0] cfg-out O=clp
     [comp] output.V[1] cfg-in X=TetRp
     [comp] output.V[1] cfg-out O=TetRp
     [sln] rm-route ihill_rep[6].S = clp
     [sln] rm-route ihill_rep[5].S = TetRp
     [sln] rm-route ihill_rep[4].n = 2
     [sln] add-comp input.V[0]
     [sln] generate input.V[0].O = 2
     [sln] rm-route ihill_rep[6].n = 2
     [sln] add-comp input.V[1]
     [sln] generate input.V[1].O = 2
     [sln] rm-route ihill_rep[5].n = 2
     [sln] add-comp input.V[2]
     [sln] generate input.V[2].O = 2
     [sln] rm-route vdadd[3].B = 0
     [sln] add-comp input.V[3]
     [sln] generate input.V[3].O = 0
     [sln] rm-route vdadd[1].B = 0
     [sln] add-comp input.V[4]
     [sln] generate input.V[4].O = 0
     [sln] rm-route ihill_rep[4].Vmax = 0.4995
     [sln] add-comp input.I[0]
     [sln] generate input.I[0].O = 0.4995
     [sln] rm-route ihill_rep[6].Vmax = 0.4995
     [sln] add-comp input.I[1]
     [sln] generate input.I[1].O = 0.4995
     [sln] rm-route ihill_rep[5].Vmax = 0.4995
     [sln] add-comp input.I[2]
     [sln] generate input.I[2].O = 0.4995
     [sln] rm-route vdadd[1].OUT_0 = 40
     [sln] add-comp input.V[5]
     [sln] generate input.V[5].O = 40
     [sln] rm-route ihill_rep[4].Km = 40
     [sln] add-comp input.I[3]
     [sln] generate input.I[3].O = 40
     [sln] rm-route ihill_rep[6].Km = 40
     [sln] add-comp input.I[4]
     [sln] generate input.I[4].O = 40
     [sln] rm-route ihill_rep[5].Km = 40
     [sln] add-comp input.I[5]
     [sln] generate input.I[5].O = 40
     [sln] rm-route itov[2].X = 3.01029995664
     [sln] add-comp input.I[6]
     [sln] generate input.I[6].O = 3.01029995664
     [sln] rm-route vgain[0].X = 3.01029995664
     [sln] add-comp input.V[6]
     [sln] generate input.V[6].O = 3.01029995664
     [sln] rm-route vdadd[3].OUT_0 = 20
     [sln] add-comp input.V[7]
     [sln] generate input.V[7].O = 20
     [sln] rm-route vdadd[3].D = 0.03010299956
     [sln] add-comp input.I[7]
     [sln] generate input.I[7].O = 0.03010299956
     [sln] rm-route vdadd[1].D = 0.03010299956
     [sln] add-comp input.I[8]
     [sln] generate input.I[8].O = 0.03010299956
     [sln] add-comp output.V[0]
     [sln] generate output.V[0].O = clp
     [sln] add-comp output.V[1]
     [sln] generate output.V[1].O = TetRp
     [sln] route input.V[0].X = 2
     [sln] route input.V[1].X = 2
     [sln] route input.V[2].X = 2
     [sln] route input.V[3].X = 0
     [sln] route input.V[4].X = 0
     [sln] route input.I[0].X = 0.4995
     [sln] route input.I[1].X = 0.4995
     [sln] route input.I[2].X = 0.4995
     [sln] route input.V[5].X = 40
     [sln] route input.I[3].X = 40
     [sln] route input.I[4].X = 40
     [sln] route input.I[5].X = 40
     [sln] route input.I[6].X = 3.01029995664
     [sln] route input.V[6].X = 3.01029995664
     [sln] route input.V[7].X = 20
     [sln] route input.I[7].X = 0.03010299956
     [sln] route input.I[8].X = 0.03010299956
     [comp] make-comp input.V0
     [comp] make-comp input.V1
     [comp] make-comp input.V2
     [comp] make-comp input.V3
     [comp] make-comp input.V4
     [comp] make-comp input.I0
     [comp] make-comp input.I1
     [comp] make-comp input.I2
     [comp] make-comp input.V5
     [comp] make-comp input.I3
     [comp] make-comp input.I4
     [comp] make-comp input.I5
     [comp] make-comp input.I6
     [comp] make-comp input.V6
     [comp] make-comp input.V7
     [comp] make-comp input.I7
     [comp] make-comp input.I8
     [comp] make-comp output.V0
     [comp] make-comp output.V1
     add-goal [1307] [CONN] vdadd[3].OUT => ihill_rep[6].S (clp)
     add-goal [1308] [CONN] vdadd[1].OUT => ihill_rep[5].S (TetRp)
     add-goal [1309] [CONN] input.V[0].O => ihill_rep[4].n (2)
     add-goal [1310] [CONN] input.V[1].O => ihill_rep[6].n (2)
     add-goal [1311] [CONN] input.V[2].O => ihill_rep[5].n (2)
     add-goal [1312] [CONN] input.V[3].O => vdadd[3].B (0)
     add-goal [1313] [CONN] input.V[4].O => vdadd[1].B (0)
     add-goal [1314] [CONN] input.I[0].O => ihill_rep[4].Vmax (0.4995)
     add-goal [1315] [CONN] input.I[1].O => ihill_rep[6].Vmax (0.4995)
     add-goal [1316] [CONN] input.I[2].O => ihill_rep[5].Vmax (0.4995)
     add-goal [1317] [CONN] input.V[5].O => vdadd[1].OUT_0 (40)
     add-goal [1318] [CONN] input.I[3].O => ihill_rep[4].Km (40)
     add-goal [1319] [CONN] input.I[4].O => ihill_rep[6].Km (40)
     add-goal [1320] [CONN] input.I[5].O => ihill_rep[5].Km (40)
     add-goal [1321] [CONN] input.I[6].O => itov[2].X (3.01029995664)
     add-goal [1322] [CONN] input.V[6].O => vgain[0].X (3.01029995664)
     add-goal [1323] [CONN] input.V[7].O => vdadd[3].OUT_0 (20)
     add-goal [1324] [CONN] input.I[7].O => vdadd[3].D (0.03010299956)
     add-goal [1325] [CONN] input.I[8].O => vdadd[1].D (0.03010299956)
     add-goal [1326] [CONN] vdadd[3].OUT => output.V[0].X (clp)
     add-goal [1327] [CONN] vdadd[1].OUT => output.V[1].X (TetRp)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1320] [CONN] input.I[5].O => ihill_rep[5].Km (40)
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1310] [CONN] input.V[1].O => ihill_rep[6].n (2)
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1316] [CONN] input.I[2].O => ihill_rep[5].Vmax (0.4995)
[1322] [CONN] input.V[6].O => vgain[0].X (3.01029995664)
[1319] [CONN] input.I[4].O => ihill_rep[6].Km (40)
[1323] [CONN] input.V[7].O => vdadd[3].OUT_0 (20)
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1313] [CONN] input.V[4].O => vdadd[1].B (0)
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1326] [CONN] vdadd[3].OUT => output.V[0].X (clp)
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1311] [CONN] input.V[2].O => ihill_rep[5].n (2)
[1307] [CONN] vdadd[3].OUT => ihill_rep[6].S (clp)
[1318] [CONN] input.I[3].O => ihill_rep[4].Km (40)
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1324] [CONN] input.I[7].O => vdadd[3].D (0.03010299956)
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1315] [CONN] input.I[1].O => ihill_rep[6].Vmax (0.4995)
[1321] [CONN] input.I[6].O => itov[2].X (3.01029995664)
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1327] [CONN] vdadd[1].OUT => output.V[1].X (TetRp)
[1314] [CONN] input.I[0].O => ihill_rep[4].Vmax (0.4995)
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1325] [CONN] input.I[8].O => vdadd[1].D (0.03010299956)
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1309] [CONN] input.V[0].O => ihill_rep[4].n (2)
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1312] [CONN] input.V[3].O => vdadd[3].B (0)
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1317] [CONN] input.V[5].O => vdadd[1].OUT_0 (40)
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1308] [CONN] vdadd[1].OUT => ihill_rep[5].S (TetRp)
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> Current Goal: [1308] [CONN] vdadd[1].OUT => ihill_rep[5].S (TetRp)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->itov.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vgain.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 3
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=34

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] [TERMINATE] found 0 / 1
[eqn] [TERMINATE] could not find another node
[multi]   >> Found # Global Solutions: 1/1
[multi] >>>SOLUTION IS UNFINISHED <<<
[multi]  > Added Local Solution
[multi]  > Finding Global Solution
[multi] found # steps: 43
[multi] found # steps: 30
[multi] found # steps: 43
[multi] found # steps: 30
[multi] found # steps: 30
[multi] # partial ids = 5
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [1154] [EXPR]vdadd[4].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] vgain[0] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[0] cfg-in Z=TetRm
   [comp] vgain[0] cfg-in X=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] ihill_rep[2] cfg-in REP=TRTetR
   [comp] ihill_rep[2] cfg-in n=2
   [comp] ihill_rep[2] cfg-in S=LacLp
   [comp] ihill_rep[2] cfg-in Vmax=0.4995
   [comp] ihill_rep[2] cfg-in Km=40
   [comp] itov[3] cfg-in Y=(3.01029995664*clm)
   [comp] itov[3] cfg-in X=3.01029995664
   [comp] itov[3] cfg-in K=clm
   [comp] vdadd[4] cfg-in OUT_0=20
   [comp] vdadd[4] cfg-in OUT=clp
   [comp] vdadd[4] cfg-param BSW=1
   [comp] vdadd[4] cfg-param DSW=1
   [comp] vdadd[4] cfg-in D=0.03010299956
   [comp] vdadd[4] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[4] cfg-in B=0
   [comp] ihill_rep[5] cfg-in REP=TRclp
   [comp] ihill_rep[5] cfg-in n=2
   [comp] ihill_rep[5] cfg-in S=TetRp
   [comp] ihill_rep[5] cfg-in Vmax=0.4995
   [comp] ihill_rep[5] cfg-in Km=40
   [comp] ihill_rep[6] cfg-in REP=TRLacL
   [comp] ihill_rep[6] cfg-in n=2
   [comp] ihill_rep[6] cfg-in S=clp
   [comp] ihill_rep[6] cfg-in Vmax=0.4995
   [comp] ihill_rep[6] cfg-in Km=40
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[0]
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] conn vgain[0].P->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate ihill_rep[2].REP = TRTetR
   [sln] add-comp ihill_rep[2]
   [sln] generate itov[3].Y = (3.01029995664*clm)
   [sln] add-comp itov[3]
   [sln] generate itov[3].Y = (3.01029995664*clm)
   [sln] conn itov[3].Y->vdadd[4].A
   [sln] generate vdadd[4].OUT = clp
   [sln] add-comp vdadd[4]
   [sln] generate ihill_rep[5].REP = TRclp
   [sln] add-comp ihill_rep[5]
   [sln] generate ihill_rep[6].REP = TRLacL
   [sln] add-comp ihill_rep[6]
   [sln] route vgain[0].Z = TetRm
   [sln] route vgain[0].X = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route ihill_rep[2].n = 2
   [sln] route ihill_rep[2].S = LacLp
   [sln] route ihill_rep[2].Vmax = 0.4995
   [sln] route ihill_rep[2].Km = 40
   [sln] route itov[3].X = 3.01029995664
   [sln] route itov[3].K = clm
   [sln] route vdadd[4].OUT_0 = 20
   [sln] route vdadd[4].D = 0.03010299956
   [sln] route vdadd[4].B = 0
   [sln] route ihill_rep[5].n = 2
   [sln] route ihill_rep[5].S = TetRp
   [sln] route ihill_rep[5].Vmax = 0.4995
   [sln] route ihill_rep[5].Km = 40
   [sln] route ihill_rep[6].n = 2
   [sln] route ihill_rep[6].S = clp
   [sln] route ihill_rep[6].Vmax = 0.4995
   [sln] route ihill_rep[6].Km = 40
   [comp] make-comp vgain0
   [comp] make-comp vdadd1
   [comp] make-comp ihill_rep2
   [comp] make-comp itov3
   [comp] make-comp vdadd4
   [comp] make-comp ihill_rep5
   [comp] make-comp ihill_rep6
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[4].A<V>=(3.01029995664*clm)
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ==== ROUTES =====
[multi] > vgain[0].Z = TetRm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[2].S = LacLp
[multi]    - connecting generates to routes.
[multi] > itov[3].K = clm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[6].S = clp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[5].S = TetRp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[2].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[6].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[5].n = 2
[multi]    - making an input block.
[multi] > vdadd[4].B = 0
[multi]    - making an input block.
[multi] > vdadd[1].B = 0
[multi]    - making an input block.
[multi] > ihill_rep[2].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[6].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[5].Vmax = 0.4995
[multi]    - making an input block.
[multi] > vdadd[1].OUT_0 = 40
[multi]    - making an input block.
[multi] > ihill_rep[2].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[6].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[5].Km = 40
[multi]    - making an input block.
[multi] > itov[3].X = 3.01029995664
[multi]    - making an input block.
[multi] > vgain[0].X = 3.01029995664
[multi]    - making an input block.
[multi] > vdadd[4].OUT_0 = 20
[multi]    - making an input block.
[multi] > vdadd[4].D = 0.03010299956
[multi]    - making an input block.
[multi] > vdadd[1].D = 0.03010299956
[multi]    - making an input block.
[multi] ==== GENERATES =====
[multi] > vdadd[4].OUT = clp
[multi]    - making an output block.
[multi] > vdadd[1].OUT = TetRp
[multi]    - making an output block.
[multi] > ihill_rep[2].REP = TRTetR
[multi] > ihill_rep[6].REP = TRLacL
[multi] > ihill_rep[5].REP = TRclp
[multi] > itov[3].Y = (3.01029995664*clm)
[multi] > itov[3].Y = (3.01029995664*clm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] --> Number of options 21
[multi] --> Number of nodes 1
[multi] ======= Partial (Root) Steps 176 =======
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [1154] [EXPR]vdadd[4].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] vgain[0] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[0] cfg-in Z=TetRm
   [comp] vgain[0] cfg-in X=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] ihill_rep[2] cfg-in REP=TRTetR
   [comp] ihill_rep[2] cfg-in n=2
   [comp] ihill_rep[2] cfg-in S=LacLp
   [comp] ihill_rep[2] cfg-in Vmax=0.4995
   [comp] ihill_rep[2] cfg-in Km=40
   [comp] itov[3] cfg-in Y=(3.01029995664*clm)
   [comp] itov[3] cfg-in X=3.01029995664
   [comp] itov[3] cfg-in K=clm
   [comp] vdadd[4] cfg-in OUT_0=20
   [comp] vdadd[4] cfg-in OUT=clp
   [comp] vdadd[4] cfg-param BSW=1
   [comp] vdadd[4] cfg-param DSW=1
   [comp] vdadd[4] cfg-in D=0.03010299956
   [comp] vdadd[4] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[4] cfg-in B=0
   [comp] ihill_rep[5] cfg-in REP=TRclp
   [comp] ihill_rep[5] cfg-in n=2
   [comp] ihill_rep[5] cfg-in S=TetRp
   [comp] ihill_rep[5] cfg-in Vmax=0.4995
   [comp] ihill_rep[5] cfg-in Km=40
   [comp] ihill_rep[6] cfg-in REP=TRLacL
   [comp] ihill_rep[6] cfg-in n=2
   [comp] ihill_rep[6] cfg-in S=clp
   [comp] ihill_rep[6] cfg-in Vmax=0.4995
   [comp] ihill_rep[6] cfg-in Km=40
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[0]
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] conn vgain[0].P->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate ihill_rep[2].REP = TRTetR
   [sln] add-comp ihill_rep[2]
   [sln] generate itov[3].Y = (3.01029995664*clm)
   [sln] add-comp itov[3]
   [sln] generate itov[3].Y = (3.01029995664*clm)
   [sln] conn itov[3].Y->vdadd[4].A
   [sln] generate vdadd[4].OUT = clp
   [sln] add-comp vdadd[4]
   [sln] generate ihill_rep[5].REP = TRclp
   [sln] add-comp ihill_rep[5]
   [sln] generate ihill_rep[6].REP = TRLacL
   [sln] add-comp ihill_rep[6]
   [sln] route vgain[0].Z = TetRm
   [sln] route vgain[0].X = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route ihill_rep[2].n = 2
   [sln] route ihill_rep[2].S = LacLp
   [sln] route ihill_rep[2].Vmax = 0.4995
   [sln] route ihill_rep[2].Km = 40
   [sln] route itov[3].X = 3.01029995664
   [sln] route itov[3].K = clm
   [sln] route vdadd[4].OUT_0 = 20
   [sln] route vdadd[4].D = 0.03010299956
   [sln] route vdadd[4].B = 0
   [sln] route ihill_rep[5].n = 2
   [sln] route ihill_rep[5].S = TetRp
   [sln] route ihill_rep[5].Vmax = 0.4995
   [sln] route ihill_rep[5].Km = 40
   [sln] route ihill_rep[6].n = 2
   [sln] route ihill_rep[6].S = clp
   [sln] route ihill_rep[6].Vmax = 0.4995
   [sln] route ihill_rep[6].Km = 40
   [comp] make-comp vgain0
   [comp] make-comp vdadd1
   [comp] make-comp ihill_rep2
   [comp] make-comp itov3
   [comp] make-comp vdadd4
   [comp] make-comp ihill_rep5
   [comp] make-comp ihill_rep6
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[4].A<V>=(3.01029995664*clm)
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ============================
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.V[0] cfg-in X=2
     [comp] input.V[0] cfg-out O=2
     [comp] input.V[1] cfg-in X=2
     [comp] input.V[1] cfg-out O=2
     [comp] input.V[2] cfg-in X=2
     [comp] input.V[2] cfg-out O=2
     [comp] input.V[3] cfg-in X=0
     [comp] input.V[3] cfg-out O=0
     [comp] input.V[4] cfg-in X=0
     [comp] input.V[4] cfg-out O=0
     [comp] input.I[0] cfg-in X=0.4995
     [comp] input.I[0] cfg-out O=0.4995
     [comp] input.I[1] cfg-in X=0.4995
     [comp] input.I[1] cfg-out O=0.4995
     [comp] input.I[2] cfg-in X=0.4995
     [comp] input.I[2] cfg-out O=0.4995
     [comp] input.V[5] cfg-in X=40
     [comp] input.V[5] cfg-out O=40
     [comp] input.I[3] cfg-in X=40
     [comp] input.I[3] cfg-out O=40
     [comp] input.I[4] cfg-in X=40
     [comp] input.I[4] cfg-out O=40
     [comp] input.I[5] cfg-in X=40
     [comp] input.I[5] cfg-out O=40
     [comp] input.I[6] cfg-in X=3.01029995664
     [comp] input.I[6] cfg-out O=3.01029995664
     [comp] input.V[6] cfg-in X=3.01029995664
     [comp] input.V[6] cfg-out O=3.01029995664
     [comp] input.V[7] cfg-in X=20
     [comp] input.V[7] cfg-out O=20
     [comp] input.I[7] cfg-in X=0.03010299956
     [comp] input.I[7] cfg-out O=0.03010299956
     [comp] input.I[8] cfg-in X=0.03010299956
     [comp] input.I[8] cfg-out O=0.03010299956
     [comp] output.V[0] cfg-in X=clp
     [comp] output.V[0] cfg-out O=clp
     [comp] output.V[1] cfg-in X=TetRp
     [comp] output.V[1] cfg-out O=TetRp
     [sln] rm-route ihill_rep[6].S = clp
     [sln] rm-route ihill_rep[5].S = TetRp
     [sln] rm-route ihill_rep[2].n = 2
     [sln] add-comp input.V[0]
     [sln] generate input.V[0].O = 2
     [sln] rm-route ihill_rep[6].n = 2
     [sln] add-comp input.V[1]
     [sln] generate input.V[1].O = 2
     [sln] rm-route ihill_rep[5].n = 2
     [sln] add-comp input.V[2]
     [sln] generate input.V[2].O = 2
     [sln] rm-route vdadd[4].B = 0
     [sln] add-comp input.V[3]
     [sln] generate input.V[3].O = 0
     [sln] rm-route vdadd[1].B = 0
     [sln] add-comp input.V[4]
     [sln] generate input.V[4].O = 0
     [sln] rm-route ihill_rep[2].Vmax = 0.4995
     [sln] add-comp input.I[0]
     [sln] generate input.I[0].O = 0.4995
     [sln] rm-route ihill_rep[6].Vmax = 0.4995
     [sln] add-comp input.I[1]
     [sln] generate input.I[1].O = 0.4995
     [sln] rm-route ihill_rep[5].Vmax = 0.4995
     [sln] add-comp input.I[2]
     [sln] generate input.I[2].O = 0.4995
     [sln] rm-route vdadd[1].OUT_0 = 40
     [sln] add-comp input.V[5]
     [sln] generate input.V[5].O = 40
     [sln] rm-route ihill_rep[2].Km = 40
     [sln] add-comp input.I[3]
     [sln] generate input.I[3].O = 40
     [sln] rm-route ihill_rep[6].Km = 40
     [sln] add-comp input.I[4]
     [sln] generate input.I[4].O = 40
     [sln] rm-route ihill_rep[5].Km = 40
     [sln] add-comp input.I[5]
     [sln] generate input.I[5].O = 40
     [sln] rm-route itov[3].X = 3.01029995664
     [sln] add-comp input.I[6]
     [sln] generate input.I[6].O = 3.01029995664
     [sln] rm-route vgain[0].X = 3.01029995664
     [sln] add-comp input.V[6]
     [sln] generate input.V[6].O = 3.01029995664
     [sln] rm-route vdadd[4].OUT_0 = 20
     [sln] add-comp input.V[7]
     [sln] generate input.V[7].O = 20
     [sln] rm-route vdadd[4].D = 0.03010299956
     [sln] add-comp input.I[7]
     [sln] generate input.I[7].O = 0.03010299956
     [sln] rm-route vdadd[1].D = 0.03010299956
     [sln] add-comp input.I[8]
     [sln] generate input.I[8].O = 0.03010299956
     [sln] add-comp output.V[0]
     [sln] generate output.V[0].O = clp
     [sln] add-comp output.V[1]
     [sln] generate output.V[1].O = TetRp
     [sln] route input.V[0].X = 2
     [sln] route input.V[1].X = 2
     [sln] route input.V[2].X = 2
     [sln] route input.V[3].X = 0
     [sln] route input.V[4].X = 0
     [sln] route input.I[0].X = 0.4995
     [sln] route input.I[1].X = 0.4995
     [sln] route input.I[2].X = 0.4995
     [sln] route input.V[5].X = 40
     [sln] route input.I[3].X = 40
     [sln] route input.I[4].X = 40
     [sln] route input.I[5].X = 40
     [sln] route input.I[6].X = 3.01029995664
     [sln] route input.V[6].X = 3.01029995664
     [sln] route input.V[7].X = 20
     [sln] route input.I[7].X = 0.03010299956
     [sln] route input.I[8].X = 0.03010299956
     [comp] make-comp input.V0
     [comp] make-comp input.V1
     [comp] make-comp input.V2
     [comp] make-comp input.V3
     [comp] make-comp input.V4
     [comp] make-comp input.I0
     [comp] make-comp input.I1
     [comp] make-comp input.I2
     [comp] make-comp input.V5
     [comp] make-comp input.I3
     [comp] make-comp input.I4
     [comp] make-comp input.I5
     [comp] make-comp input.I6
     [comp] make-comp input.V6
     [comp] make-comp input.V7
     [comp] make-comp input.I7
     [comp] make-comp input.I8
     [comp] make-comp output.V0
     [comp] make-comp output.V1
     add-goal [1328] [CONN] vdadd[4].OUT => ihill_rep[6].S (clp)
     add-goal [1329] [CONN] vdadd[1].OUT => ihill_rep[5].S (TetRp)
     add-goal [1330] [CONN] input.V[0].O => ihill_rep[2].n (2)
     add-goal [1331] [CONN] input.V[1].O => ihill_rep[6].n (2)
     add-goal [1332] [CONN] input.V[2].O => ihill_rep[5].n (2)
     add-goal [1333] [CONN] input.V[3].O => vdadd[4].B (0)
     add-goal [1334] [CONN] input.V[4].O => vdadd[1].B (0)
     add-goal [1335] [CONN] input.I[0].O => ihill_rep[2].Vmax (0.4995)
     add-goal [1336] [CONN] input.I[1].O => ihill_rep[6].Vmax (0.4995)
     add-goal [1337] [CONN] input.I[2].O => ihill_rep[5].Vmax (0.4995)
     add-goal [1338] [CONN] input.V[5].O => vdadd[1].OUT_0 (40)
     add-goal [1339] [CONN] input.I[3].O => ihill_rep[2].Km (40)
     add-goal [1340] [CONN] input.I[4].O => ihill_rep[6].Km (40)
     add-goal [1341] [CONN] input.I[5].O => ihill_rep[5].Km (40)
     add-goal [1342] [CONN] input.I[6].O => itov[3].X (3.01029995664)
     add-goal [1343] [CONN] input.V[6].O => vgain[0].X (3.01029995664)
     add-goal [1344] [CONN] input.V[7].O => vdadd[4].OUT_0 (20)
     add-goal [1345] [CONN] input.I[7].O => vdadd[4].D (0.03010299956)
     add-goal [1346] [CONN] input.I[8].O => vdadd[1].D (0.03010299956)
     add-goal [1347] [CONN] vdadd[4].OUT => output.V[0].X (clp)
     add-goal [1348] [CONN] vdadd[1].OUT => output.V[1].X (TetRp)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[1345] [CONN] input.I[7].O => vdadd[4].D (0.03010299956)
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1343] [CONN] input.V[6].O => vgain[0].X (3.01029995664)
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1335] [CONN] input.I[0].O => ihill_rep[2].Vmax (0.4995)
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1341] [CONN] input.I[5].O => ihill_rep[5].Km (40)
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1329] [CONN] vdadd[1].OUT => ihill_rep[5].S (TetRp)
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1334] [CONN] input.V[4].O => vdadd[1].B (0)
[1336] [CONN] input.I[1].O => ihill_rep[6].Vmax (0.4995)
[1331] [CONN] input.V[1].O => ihill_rep[6].n (2)
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1344] [CONN] input.V[7].O => vdadd[4].OUT_0 (20)
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1339] [CONN] input.I[3].O => ihill_rep[2].Km (40)
[1346] [CONN] input.I[8].O => vdadd[1].D (0.03010299956)
[1348] [CONN] vdadd[1].OUT => output.V[1].X (TetRp)
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1338] [CONN] input.V[5].O => vdadd[1].OUT_0 (40)
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1330] [CONN] input.V[0].O => ihill_rep[2].n (2)
[1332] [CONN] input.V[2].O => ihill_rep[5].n (2)
[1340] [CONN] input.I[4].O => ihill_rep[6].Km (40)
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1337] [CONN] input.I[2].O => ihill_rep[5].Vmax (0.4995)
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1333] [CONN] input.V[3].O => vdadd[4].B (0)
[1342] [CONN] input.I[6].O => itov[3].X (3.01029995664)
[1347] [CONN] vdadd[4].OUT => output.V[0].X (clp)
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1328] [CONN] vdadd[4].OUT => ihill_rep[6].S (clp)
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> Current Goal: [1328] [CONN] vdadd[4].OUT => ihill_rep[6].S (clp)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->itov.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vgain.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 3
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=35

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] [TERMINATE] found 0 / 1
[eqn] [TERMINATE] could not find another node
[multi]   >> Found # Global Solutions: 1/1
[multi] >>>SOLUTION IS UNFINISHED <<<
[multi]  > Added Local Solution
[multi]  > Finding Global Solution
[multi] found # steps: 43
[multi] found # steps: 30
[multi] found # steps: 30
[multi] found # steps: 30
[multi] found # steps: 43
[multi] # partial ids = 5
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   remove-goal [1154] [EXPR]vdadd[6].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   [comp] vgain[0] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[0] cfg-in Z=TetRm
   [comp] vgain[0] cfg-in X=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] ihill_rep[2] cfg-in REP=TRTetR
   [comp] ihill_rep[2] cfg-in n=2
   [comp] ihill_rep[2] cfg-in S=LacLp
   [comp] ihill_rep[2] cfg-in Vmax=0.4995
   [comp] ihill_rep[2] cfg-in Km=40
   [comp] ihill_rep[3] cfg-in REP=TRclp
   [comp] ihill_rep[3] cfg-in n=2
   [comp] ihill_rep[3] cfg-in S=TetRp
   [comp] ihill_rep[3] cfg-in Vmax=0.4995
   [comp] ihill_rep[3] cfg-in Km=40
   [comp] ihill_rep[4] cfg-in REP=TRLacL
   [comp] ihill_rep[4] cfg-in n=2
   [comp] ihill_rep[4] cfg-in S=clp
   [comp] ihill_rep[4] cfg-in Vmax=0.4995
   [comp] ihill_rep[4] cfg-in Km=40
   [comp] itov[5] cfg-in Y=(3.01029995664*clm)
   [comp] itov[5] cfg-in X=clm
   [comp] itov[5] cfg-in K=3.01029995664
   [comp] vdadd[6] cfg-in OUT_0=20
   [comp] vdadd[6] cfg-in OUT=clp
   [comp] vdadd[6] cfg-param BSW=1
   [comp] vdadd[6] cfg-param DSW=1
   [comp] vdadd[6] cfg-in D=0.03010299956
   [comp] vdadd[6] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[6] cfg-in B=0
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[0]
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] conn vgain[0].P->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate ihill_rep[2].REP = TRTetR
   [sln] add-comp ihill_rep[2]
   [sln] generate ihill_rep[3].REP = TRclp
   [sln] add-comp ihill_rep[3]
   [sln] generate ihill_rep[4].REP = TRLacL
   [sln] add-comp ihill_rep[4]
   [sln] generate itov[5].Y = (3.01029995664*clm)
   [sln] add-comp itov[5]
   [sln] generate itov[5].Y = (3.01029995664*clm)
   [sln] conn itov[5].Y->vdadd[6].A
   [sln] generate vdadd[6].OUT = clp
   [sln] add-comp vdadd[6]
   [sln] route vgain[0].Z = TetRm
   [sln] route vgain[0].X = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route ihill_rep[2].n = 2
   [sln] route ihill_rep[2].S = LacLp
   [sln] route ihill_rep[2].Vmax = 0.4995
   [sln] route ihill_rep[2].Km = 40
   [sln] route ihill_rep[3].n = 2
   [sln] route ihill_rep[3].S = TetRp
   [sln] route ihill_rep[3].Vmax = 0.4995
   [sln] route ihill_rep[3].Km = 40
   [sln] route ihill_rep[4].n = 2
   [sln] route ihill_rep[4].S = clp
   [sln] route ihill_rep[4].Vmax = 0.4995
   [sln] route ihill_rep[4].Km = 40
   [sln] route itov[5].X = clm
   [sln] route itov[5].K = 3.01029995664
   [sln] route vdadd[6].OUT_0 = 20
   [sln] route vdadd[6].D = 0.03010299956
   [sln] route vdadd[6].B = 0
   [comp] make-comp vgain0
   [comp] make-comp vdadd1
   [comp] make-comp ihill_rep2
   [comp] make-comp ihill_rep3
   [comp] make-comp ihill_rep4
   [comp] make-comp itov5
   [comp] make-comp vdadd6
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[6].A<V>=(3.01029995664*clm)

[multi] ==== ROUTES =====
[multi] > vgain[0].Z = TetRm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[2].S = LacLp
[multi]    - connecting generates to routes.
[multi] > itov[5].X = clm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[4].S = clp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[3].S = TetRp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[2].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[4].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[3].n = 2
[multi]    - making an input block.
[multi] > vdadd[6].B = 0
[multi]    - making an input block.
[multi] > vdadd[1].B = 0
[multi]    - making an input block.
[multi] > ihill_rep[2].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[4].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[3].Vmax = 0.4995
[multi]    - making an input block.
[multi] > vdadd[1].OUT_0 = 40
[multi]    - making an input block.
[multi] > ihill_rep[2].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[4].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[3].Km = 40
[multi]    - making an input block.
[multi] > itov[5].K = 3.01029995664
[multi]    - making an input block.
[multi] > vgain[0].X = 3.01029995664
[multi]    - making an input block.
[multi] > vdadd[6].OUT_0 = 20
[multi]    - making an input block.
[multi] > vdadd[6].D = 0.03010299956
[multi]    - making an input block.
[multi] > vdadd[1].D = 0.03010299956
[multi]    - making an input block.
[multi] ==== GENERATES =====
[multi] > vdadd[6].OUT = clp
[multi]    - making an output block.
[multi] > vdadd[1].OUT = TetRp
[multi]    - making an output block.
[multi] > ihill_rep[2].REP = TRTetR
[multi] > ihill_rep[4].REP = TRLacL
[multi] > ihill_rep[3].REP = TRclp
[multi] > itov[5].Y = (3.01029995664*clm)
[multi] > itov[5].Y = (3.01029995664*clm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] --> Number of options 21
[multi] --> Number of nodes 1
[multi] ======= Partial (Root) Steps 176 =======
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   remove-goal [1154] [EXPR]vdadd[6].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   [comp] vgain[0] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[0] cfg-in Z=TetRm
   [comp] vgain[0] cfg-in X=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] ihill_rep[2] cfg-in REP=TRTetR
   [comp] ihill_rep[2] cfg-in n=2
   [comp] ihill_rep[2] cfg-in S=LacLp
   [comp] ihill_rep[2] cfg-in Vmax=0.4995
   [comp] ihill_rep[2] cfg-in Km=40
   [comp] ihill_rep[3] cfg-in REP=TRclp
   [comp] ihill_rep[3] cfg-in n=2
   [comp] ihill_rep[3] cfg-in S=TetRp
   [comp] ihill_rep[3] cfg-in Vmax=0.4995
   [comp] ihill_rep[3] cfg-in Km=40
   [comp] ihill_rep[4] cfg-in REP=TRLacL
   [comp] ihill_rep[4] cfg-in n=2
   [comp] ihill_rep[4] cfg-in S=clp
   [comp] ihill_rep[4] cfg-in Vmax=0.4995
   [comp] ihill_rep[4] cfg-in Km=40
   [comp] itov[5] cfg-in Y=(3.01029995664*clm)
   [comp] itov[5] cfg-in X=clm
   [comp] itov[5] cfg-in K=3.01029995664
   [comp] vdadd[6] cfg-in OUT_0=20
   [comp] vdadd[6] cfg-in OUT=clp
   [comp] vdadd[6] cfg-param BSW=1
   [comp] vdadd[6] cfg-param DSW=1
   [comp] vdadd[6] cfg-in D=0.03010299956
   [comp] vdadd[6] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[6] cfg-in B=0
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[0]
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] conn vgain[0].P->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate ihill_rep[2].REP = TRTetR
   [sln] add-comp ihill_rep[2]
   [sln] generate ihill_rep[3].REP = TRclp
   [sln] add-comp ihill_rep[3]
   [sln] generate ihill_rep[4].REP = TRLacL
   [sln] add-comp ihill_rep[4]
   [sln] generate itov[5].Y = (3.01029995664*clm)
   [sln] add-comp itov[5]
   [sln] generate itov[5].Y = (3.01029995664*clm)
   [sln] conn itov[5].Y->vdadd[6].A
   [sln] generate vdadd[6].OUT = clp
   [sln] add-comp vdadd[6]
   [sln] route vgain[0].Z = TetRm
   [sln] route vgain[0].X = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route ihill_rep[2].n = 2
   [sln] route ihill_rep[2].S = LacLp
   [sln] route ihill_rep[2].Vmax = 0.4995
   [sln] route ihill_rep[2].Km = 40
   [sln] route ihill_rep[3].n = 2
   [sln] route ihill_rep[3].S = TetRp
   [sln] route ihill_rep[3].Vmax = 0.4995
   [sln] route ihill_rep[3].Km = 40
   [sln] route ihill_rep[4].n = 2
   [sln] route ihill_rep[4].S = clp
   [sln] route ihill_rep[4].Vmax = 0.4995
   [sln] route ihill_rep[4].Km = 40
   [sln] route itov[5].X = clm
   [sln] route itov[5].K = 3.01029995664
   [sln] route vdadd[6].OUT_0 = 20
   [sln] route vdadd[6].D = 0.03010299956
   [sln] route vdadd[6].B = 0
   [comp] make-comp vgain0
   [comp] make-comp vdadd1
   [comp] make-comp ihill_rep2
   [comp] make-comp ihill_rep3
   [comp] make-comp ihill_rep4
   [comp] make-comp itov5
   [comp] make-comp vdadd6
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[6].A<V>=(3.01029995664*clm)

[multi] ============================
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.V[0] cfg-in X=2
     [comp] input.V[0] cfg-out O=2
     [comp] input.V[1] cfg-in X=2
     [comp] input.V[1] cfg-out O=2
     [comp] input.V[2] cfg-in X=2
     [comp] input.V[2] cfg-out O=2
     [comp] input.V[3] cfg-in X=0
     [comp] input.V[3] cfg-out O=0
     [comp] input.V[4] cfg-in X=0
     [comp] input.V[4] cfg-out O=0
     [comp] input.I[0] cfg-in X=0.4995
     [comp] input.I[0] cfg-out O=0.4995
     [comp] input.I[1] cfg-in X=0.4995
     [comp] input.I[1] cfg-out O=0.4995
     [comp] input.I[2] cfg-in X=0.4995
     [comp] input.I[2] cfg-out O=0.4995
     [comp] input.V[5] cfg-in X=40
     [comp] input.V[5] cfg-out O=40
     [comp] input.I[3] cfg-in X=40
     [comp] input.I[3] cfg-out O=40
     [comp] input.I[4] cfg-in X=40
     [comp] input.I[4] cfg-out O=40
     [comp] input.I[5] cfg-in X=40
     [comp] input.I[5] cfg-out O=40
     [comp] input.V[6] cfg-in X=3.01029995664
     [comp] input.V[6] cfg-out O=3.01029995664
     [comp] input.V[7] cfg-in X=3.01029995664
     [comp] input.V[7] cfg-out O=3.01029995664
     [comp] input.V[8] cfg-in X=20
     [comp] input.V[8] cfg-out O=20
     [comp] input.I[6] cfg-in X=0.03010299956
     [comp] input.I[6] cfg-out O=0.03010299956
     [comp] input.I[7] cfg-in X=0.03010299956
     [comp] input.I[7] cfg-out O=0.03010299956
     [comp] output.V[0] cfg-in X=clp
     [comp] output.V[0] cfg-out O=clp
     [comp] output.V[1] cfg-in X=TetRp
     [comp] output.V[1] cfg-out O=TetRp
     [sln] rm-route ihill_rep[4].S = clp
     [sln] rm-route ihill_rep[3].S = TetRp
     [sln] rm-route ihill_rep[2].n = 2
     [sln] add-comp input.V[0]
     [sln] generate input.V[0].O = 2
     [sln] rm-route ihill_rep[4].n = 2
     [sln] add-comp input.V[1]
     [sln] generate input.V[1].O = 2
     [sln] rm-route ihill_rep[3].n = 2
     [sln] add-comp input.V[2]
     [sln] generate input.V[2].O = 2
     [sln] rm-route vdadd[6].B = 0
     [sln] add-comp input.V[3]
     [sln] generate input.V[3].O = 0
     [sln] rm-route vdadd[1].B = 0
     [sln] add-comp input.V[4]
     [sln] generate input.V[4].O = 0
     [sln] rm-route ihill_rep[2].Vmax = 0.4995
     [sln] add-comp input.I[0]
     [sln] generate input.I[0].O = 0.4995
     [sln] rm-route ihill_rep[4].Vmax = 0.4995
     [sln] add-comp input.I[1]
     [sln] generate input.I[1].O = 0.4995
     [sln] rm-route ihill_rep[3].Vmax = 0.4995
     [sln] add-comp input.I[2]
     [sln] generate input.I[2].O = 0.4995
     [sln] rm-route vdadd[1].OUT_0 = 40
     [sln] add-comp input.V[5]
     [sln] generate input.V[5].O = 40
     [sln] rm-route ihill_rep[2].Km = 40
     [sln] add-comp input.I[3]
     [sln] generate input.I[3].O = 40
     [sln] rm-route ihill_rep[4].Km = 40
     [sln] add-comp input.I[4]
     [sln] generate input.I[4].O = 40
     [sln] rm-route ihill_rep[3].Km = 40
     [sln] add-comp input.I[5]
     [sln] generate input.I[5].O = 40
     [sln] rm-route itov[5].K = 3.01029995664
     [sln] add-comp input.V[6]
     [sln] generate input.V[6].O = 3.01029995664
     [sln] rm-route vgain[0].X = 3.01029995664
     [sln] add-comp input.V[7]
     [sln] generate input.V[7].O = 3.01029995664
     [sln] rm-route vdadd[6].OUT_0 = 20
     [sln] add-comp input.V[8]
     [sln] generate input.V[8].O = 20
     [sln] rm-route vdadd[6].D = 0.03010299956
     [sln] add-comp input.I[6]
     [sln] generate input.I[6].O = 0.03010299956
     [sln] rm-route vdadd[1].D = 0.03010299956
     [sln] add-comp input.I[7]
     [sln] generate input.I[7].O = 0.03010299956
     [sln] add-comp output.V[0]
     [sln] generate output.V[0].O = clp
     [sln] add-comp output.V[1]
     [sln] generate output.V[1].O = TetRp
     [sln] route input.V[0].X = 2
     [sln] route input.V[1].X = 2
     [sln] route input.V[2].X = 2
     [sln] route input.V[3].X = 0
     [sln] route input.V[4].X = 0
     [sln] route input.I[0].X = 0.4995
     [sln] route input.I[1].X = 0.4995
     [sln] route input.I[2].X = 0.4995
     [sln] route input.V[5].X = 40
     [sln] route input.I[3].X = 40
     [sln] route input.I[4].X = 40
     [sln] route input.I[5].X = 40
     [sln] route input.V[6].X = 3.01029995664
     [sln] route input.V[7].X = 3.01029995664
     [sln] route input.V[8].X = 20
     [sln] route input.I[6].X = 0.03010299956
     [sln] route input.I[7].X = 0.03010299956
     [comp] make-comp input.V0
     [comp] make-comp input.V1
     [comp] make-comp input.V2
     [comp] make-comp input.V3
     [comp] make-comp input.V4
     [comp] make-comp input.I0
     [comp] make-comp input.I1
     [comp] make-comp input.I2
     [comp] make-comp input.V5
     [comp] make-comp input.I3
     [comp] make-comp input.I4
     [comp] make-comp input.I5
     [comp] make-comp input.V6
     [comp] make-comp input.V7
     [comp] make-comp input.V8
     [comp] make-comp input.I6
     [comp] make-comp input.I7
     [comp] make-comp output.V0
     [comp] make-comp output.V1
     add-goal [1349] [CONN] vdadd[6].OUT => ihill_rep[4].S (clp)
     add-goal [1350] [CONN] vdadd[1].OUT => ihill_rep[3].S (TetRp)
     add-goal [1351] [CONN] input.V[0].O => ihill_rep[2].n (2)
     add-goal [1352] [CONN] input.V[1].O => ihill_rep[4].n (2)
     add-goal [1353] [CONN] input.V[2].O => ihill_rep[3].n (2)
     add-goal [1354] [CONN] input.V[3].O => vdadd[6].B (0)
     add-goal [1355] [CONN] input.V[4].O => vdadd[1].B (0)
     add-goal [1356] [CONN] input.I[0].O => ihill_rep[2].Vmax (0.4995)
     add-goal [1357] [CONN] input.I[1].O => ihill_rep[4].Vmax (0.4995)
     add-goal [1358] [CONN] input.I[2].O => ihill_rep[3].Vmax (0.4995)
     add-goal [1359] [CONN] input.V[5].O => vdadd[1].OUT_0 (40)
     add-goal [1360] [CONN] input.I[3].O => ihill_rep[2].Km (40)
     add-goal [1361] [CONN] input.I[4].O => ihill_rep[4].Km (40)
     add-goal [1362] [CONN] input.I[5].O => ihill_rep[3].Km (40)
     add-goal [1363] [CONN] input.V[6].O => itov[5].K (3.01029995664)
     add-goal [1364] [CONN] input.V[7].O => vgain[0].X (3.01029995664)
     add-goal [1365] [CONN] input.V[8].O => vdadd[6].OUT_0 (20)
     add-goal [1366] [CONN] input.I[6].O => vdadd[6].D (0.03010299956)
     add-goal [1367] [CONN] input.I[7].O => vdadd[1].D (0.03010299956)
     add-goal [1368] [CONN] vdadd[6].OUT => output.V[0].X (clp)
     add-goal [1369] [CONN] vdadd[1].OUT => output.V[1].X (TetRp)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1359] [CONN] input.V[5].O => vdadd[1].OUT_0 (40)
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1357] [CONN] input.I[1].O => ihill_rep[4].Vmax (0.4995)
[1361] [CONN] input.I[4].O => ihill_rep[4].Km (40)
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1367] [CONN] input.I[7].O => vdadd[1].D (0.03010299956)
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1366] [CONN] input.I[6].O => vdadd[6].D (0.03010299956)
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1353] [CONN] input.V[2].O => ihill_rep[3].n (2)
[1352] [CONN] input.V[1].O => ihill_rep[4].n (2)
[1365] [CONN] input.V[8].O => vdadd[6].OUT_0 (20)
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1369] [CONN] vdadd[1].OUT => output.V[1].X (TetRp)
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1354] [CONN] input.V[3].O => vdadd[6].B (0)
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1349] [CONN] vdadd[6].OUT => ihill_rep[4].S (clp)
[1355] [CONN] input.V[4].O => vdadd[1].B (0)
[1360] [CONN] input.I[3].O => ihill_rep[2].Km (40)
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1356] [CONN] input.I[0].O => ihill_rep[2].Vmax (0.4995)
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1363] [CONN] input.V[6].O => itov[5].K (3.01029995664)
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1350] [CONN] vdadd[1].OUT => ihill_rep[3].S (TetRp)
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1351] [CONN] input.V[0].O => ihill_rep[2].n (2)
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1358] [CONN] input.I[2].O => ihill_rep[3].Vmax (0.4995)
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1362] [CONN] input.I[5].O => ihill_rep[3].Km (40)
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1364] [CONN] input.V[7].O => vgain[0].X (3.01029995664)
[1368] [CONN] vdadd[6].OUT => output.V[0].X (clp)
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> Current Goal: [1368] [CONN] vdadd[6].OUT => output.V[0].X (clp)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vgain.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->itov.K
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 3
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=36

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] [TERMINATE] found 0 / 1
[eqn] [TERMINATE] could not find another node
[multi]   >> Found # Global Solutions: 1/1
[multi] >>>SOLUTION IS UNFINISHED <<<
[multi]  > Added Local Solution
[multi]  > Finding Global Solution
[multi] found # steps: 43
[multi] found # steps: 30
[multi] found # steps: 30
[multi] found # steps: 43
[multi] found # steps: 30
[multi] # partial ids = 5
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [1154] [EXPR]vdadd[5].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] vgain[0] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[0] cfg-in Z=TetRm
   [comp] vgain[0] cfg-in X=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] ihill_rep[2] cfg-in REP=TRTetR
   [comp] ihill_rep[2] cfg-in n=2
   [comp] ihill_rep[2] cfg-in S=LacLp
   [comp] ihill_rep[2] cfg-in Vmax=0.4995
   [comp] ihill_rep[2] cfg-in Km=40
   [comp] ihill_rep[3] cfg-in REP=TRclp
   [comp] ihill_rep[3] cfg-in n=2
   [comp] ihill_rep[3] cfg-in S=TetRp
   [comp] ihill_rep[3] cfg-in Vmax=0.4995
   [comp] ihill_rep[3] cfg-in Km=40
   [comp] vgain[4] cfg-in P=(3.01029995664*clm)
   [comp] vgain[4] cfg-in Z=clm
   [comp] vgain[4] cfg-in X=3.01029995664
   [comp] vdadd[5] cfg-in OUT_0=20
   [comp] vdadd[5] cfg-in OUT=clp
   [comp] vdadd[5] cfg-param BSW=1
   [comp] vdadd[5] cfg-param DSW=1
   [comp] vdadd[5] cfg-in D=0.03010299956
   [comp] vdadd[5] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[5] cfg-in B=0
   [comp] ihill_rep[6] cfg-in REP=TRLacL
   [comp] ihill_rep[6] cfg-in n=2
   [comp] ihill_rep[6] cfg-in S=clp
   [comp] ihill_rep[6] cfg-in Vmax=0.4995
   [comp] ihill_rep[6] cfg-in Km=40
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[0]
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] conn vgain[0].P->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate ihill_rep[2].REP = TRTetR
   [sln] add-comp ihill_rep[2]
   [sln] generate ihill_rep[3].REP = TRclp
   [sln] add-comp ihill_rep[3]
   [sln] generate vgain[4].P = (3.01029995664*clm)
   [sln] add-comp vgain[4]
   [sln] generate vgain[4].P = (3.01029995664*clm)
   [sln] conn vgain[4].P->vdadd[5].A
   [sln] generate vdadd[5].OUT = clp
   [sln] add-comp vdadd[5]
   [sln] generate ihill_rep[6].REP = TRLacL
   [sln] add-comp ihill_rep[6]
   [sln] route vgain[0].Z = TetRm
   [sln] route vgain[0].X = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route ihill_rep[2].n = 2
   [sln] route ihill_rep[2].S = LacLp
   [sln] route ihill_rep[2].Vmax = 0.4995
   [sln] route ihill_rep[2].Km = 40
   [sln] route ihill_rep[3].n = 2
   [sln] route ihill_rep[3].S = TetRp
   [sln] route ihill_rep[3].Vmax = 0.4995
   [sln] route ihill_rep[3].Km = 40
   [sln] route vgain[4].Z = clm
   [sln] route vgain[4].X = 3.01029995664
   [sln] route vdadd[5].OUT_0 = 20
   [sln] route vdadd[5].D = 0.03010299956
   [sln] route vdadd[5].B = 0
   [sln] route ihill_rep[6].n = 2
   [sln] route ihill_rep[6].S = clp
   [sln] route ihill_rep[6].Vmax = 0.4995
   [sln] route ihill_rep[6].Km = 40
   [comp] make-comp vgain0
   [comp] make-comp vdadd1
   [comp] make-comp ihill_rep2
   [comp] make-comp ihill_rep3
   [comp] make-comp vgain4
   [comp] make-comp vdadd5
   [comp] make-comp ihill_rep6
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[5].A<V>=(3.01029995664*clm)
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ==== ROUTES =====
[multi] > vgain[0].Z = TetRm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[2].S = LacLp
[multi]    - connecting generates to routes.
[multi] > vgain[4].Z = clm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[6].S = clp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[3].S = TetRp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[2].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[6].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[3].n = 2
[multi]    - making an input block.
[multi] > vdadd[5].B = 0
[multi]    - making an input block.
[multi] > vdadd[1].B = 0
[multi]    - making an input block.
[multi] > ihill_rep[2].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[6].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[3].Vmax = 0.4995
[multi]    - making an input block.
[multi] > vdadd[1].OUT_0 = 40
[multi]    - making an input block.
[multi] > ihill_rep[2].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[6].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[3].Km = 40
[multi]    - making an input block.
[multi] > vgain[4].X = 3.01029995664
[multi]    - making an input block.
[multi] > vgain[0].X = 3.01029995664
[multi]    - making an input block.
[multi] > vdadd[5].OUT_0 = 20
[multi]    - making an input block.
[multi] > vdadd[5].D = 0.03010299956
[multi]    - making an input block.
[multi] > vdadd[1].D = 0.03010299956
[multi]    - making an input block.
[multi] ==== GENERATES =====
[multi] > vdadd[5].OUT = clp
[multi]    - making an output block.
[multi] > vdadd[1].OUT = TetRp
[multi]    - making an output block.
[multi] > ihill_rep[2].REP = TRTetR
[multi] > ihill_rep[6].REP = TRLacL
[multi] > ihill_rep[3].REP = TRclp
[multi] > vgain[4].P = (3.01029995664*clm)
[multi] > vgain[4].P = (3.01029995664*clm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] --> Number of options 21
[multi] --> Number of nodes 1
[multi] ======= Partial (Root) Steps 176 =======
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [1154] [EXPR]vdadd[5].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] vgain[0] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[0] cfg-in Z=TetRm
   [comp] vgain[0] cfg-in X=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] ihill_rep[2] cfg-in REP=TRTetR
   [comp] ihill_rep[2] cfg-in n=2
   [comp] ihill_rep[2] cfg-in S=LacLp
   [comp] ihill_rep[2] cfg-in Vmax=0.4995
   [comp] ihill_rep[2] cfg-in Km=40
   [comp] ihill_rep[3] cfg-in REP=TRclp
   [comp] ihill_rep[3] cfg-in n=2
   [comp] ihill_rep[3] cfg-in S=TetRp
   [comp] ihill_rep[3] cfg-in Vmax=0.4995
   [comp] ihill_rep[3] cfg-in Km=40
   [comp] vgain[4] cfg-in P=(3.01029995664*clm)
   [comp] vgain[4] cfg-in Z=clm
   [comp] vgain[4] cfg-in X=3.01029995664
   [comp] vdadd[5] cfg-in OUT_0=20
   [comp] vdadd[5] cfg-in OUT=clp
   [comp] vdadd[5] cfg-param BSW=1
   [comp] vdadd[5] cfg-param DSW=1
   [comp] vdadd[5] cfg-in D=0.03010299956
   [comp] vdadd[5] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[5] cfg-in B=0
   [comp] ihill_rep[6] cfg-in REP=TRLacL
   [comp] ihill_rep[6] cfg-in n=2
   [comp] ihill_rep[6] cfg-in S=clp
   [comp] ihill_rep[6] cfg-in Vmax=0.4995
   [comp] ihill_rep[6] cfg-in Km=40
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[0]
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] conn vgain[0].P->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate ihill_rep[2].REP = TRTetR
   [sln] add-comp ihill_rep[2]
   [sln] generate ihill_rep[3].REP = TRclp
   [sln] add-comp ihill_rep[3]
   [sln] generate vgain[4].P = (3.01029995664*clm)
   [sln] add-comp vgain[4]
   [sln] generate vgain[4].P = (3.01029995664*clm)
   [sln] conn vgain[4].P->vdadd[5].A
   [sln] generate vdadd[5].OUT = clp
   [sln] add-comp vdadd[5]
   [sln] generate ihill_rep[6].REP = TRLacL
   [sln] add-comp ihill_rep[6]
   [sln] route vgain[0].Z = TetRm
   [sln] route vgain[0].X = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route ihill_rep[2].n = 2
   [sln] route ihill_rep[2].S = LacLp
   [sln] route ihill_rep[2].Vmax = 0.4995
   [sln] route ihill_rep[2].Km = 40
   [sln] route ihill_rep[3].n = 2
   [sln] route ihill_rep[3].S = TetRp
   [sln] route ihill_rep[3].Vmax = 0.4995
   [sln] route ihill_rep[3].Km = 40
   [sln] route vgain[4].Z = clm
   [sln] route vgain[4].X = 3.01029995664
   [sln] route vdadd[5].OUT_0 = 20
   [sln] route vdadd[5].D = 0.03010299956
   [sln] route vdadd[5].B = 0
   [sln] route ihill_rep[6].n = 2
   [sln] route ihill_rep[6].S = clp
   [sln] route ihill_rep[6].Vmax = 0.4995
   [sln] route ihill_rep[6].Km = 40
   [comp] make-comp vgain0
   [comp] make-comp vdadd1
   [comp] make-comp ihill_rep2
   [comp] make-comp ihill_rep3
   [comp] make-comp vgain4
   [comp] make-comp vdadd5
   [comp] make-comp ihill_rep6
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[5].A<V>=(3.01029995664*clm)
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ============================
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.V[0] cfg-in X=2
     [comp] input.V[0] cfg-out O=2
     [comp] input.V[1] cfg-in X=2
     [comp] input.V[1] cfg-out O=2
     [comp] input.V[2] cfg-in X=2
     [comp] input.V[2] cfg-out O=2
     [comp] input.V[3] cfg-in X=0
     [comp] input.V[3] cfg-out O=0
     [comp] input.V[4] cfg-in X=0
     [comp] input.V[4] cfg-out O=0
     [comp] input.I[0] cfg-in X=0.4995
     [comp] input.I[0] cfg-out O=0.4995
     [comp] input.I[1] cfg-in X=0.4995
     [comp] input.I[1] cfg-out O=0.4995
     [comp] input.I[2] cfg-in X=0.4995
     [comp] input.I[2] cfg-out O=0.4995
     [comp] input.V[5] cfg-in X=40
     [comp] input.V[5] cfg-out O=40
     [comp] input.I[3] cfg-in X=40
     [comp] input.I[3] cfg-out O=40
     [comp] input.I[4] cfg-in X=40
     [comp] input.I[4] cfg-out O=40
     [comp] input.I[5] cfg-in X=40
     [comp] input.I[5] cfg-out O=40
     [comp] input.V[6] cfg-in X=3.01029995664
     [comp] input.V[6] cfg-out O=3.01029995664
     [comp] input.V[7] cfg-in X=3.01029995664
     [comp] input.V[7] cfg-out O=3.01029995664
     [comp] input.V[8] cfg-in X=20
     [comp] input.V[8] cfg-out O=20
     [comp] input.I[6] cfg-in X=0.03010299956
     [comp] input.I[6] cfg-out O=0.03010299956
     [comp] input.I[7] cfg-in X=0.03010299956
     [comp] input.I[7] cfg-out O=0.03010299956
     [comp] output.V[0] cfg-in X=clp
     [comp] output.V[0] cfg-out O=clp
     [comp] output.V[1] cfg-in X=TetRp
     [comp] output.V[1] cfg-out O=TetRp
     [sln] rm-route ihill_rep[6].S = clp
     [sln] rm-route ihill_rep[3].S = TetRp
     [sln] rm-route ihill_rep[2].n = 2
     [sln] add-comp input.V[0]
     [sln] generate input.V[0].O = 2
     [sln] rm-route ihill_rep[6].n = 2
     [sln] add-comp input.V[1]
     [sln] generate input.V[1].O = 2
     [sln] rm-route ihill_rep[3].n = 2
     [sln] add-comp input.V[2]
     [sln] generate input.V[2].O = 2
     [sln] rm-route vdadd[5].B = 0
     [sln] add-comp input.V[3]
     [sln] generate input.V[3].O = 0
     [sln] rm-route vdadd[1].B = 0
     [sln] add-comp input.V[4]
     [sln] generate input.V[4].O = 0
     [sln] rm-route ihill_rep[2].Vmax = 0.4995
     [sln] add-comp input.I[0]
     [sln] generate input.I[0].O = 0.4995
     [sln] rm-route ihill_rep[6].Vmax = 0.4995
     [sln] add-comp input.I[1]
     [sln] generate input.I[1].O = 0.4995
     [sln] rm-route ihill_rep[3].Vmax = 0.4995
     [sln] add-comp input.I[2]
     [sln] generate input.I[2].O = 0.4995
     [sln] rm-route vdadd[1].OUT_0 = 40
     [sln] add-comp input.V[5]
     [sln] generate input.V[5].O = 40
     [sln] rm-route ihill_rep[2].Km = 40
     [sln] add-comp input.I[3]
     [sln] generate input.I[3].O = 40
     [sln] rm-route ihill_rep[6].Km = 40
     [sln] add-comp input.I[4]
     [sln] generate input.I[4].O = 40
     [sln] rm-route ihill_rep[3].Km = 40
     [sln] add-comp input.I[5]
     [sln] generate input.I[5].O = 40
     [sln] rm-route vgain[4].X = 3.01029995664
     [sln] add-comp input.V[6]
     [sln] generate input.V[6].O = 3.01029995664
     [sln] rm-route vgain[0].X = 3.01029995664
     [sln] add-comp input.V[7]
     [sln] generate input.V[7].O = 3.01029995664
     [sln] rm-route vdadd[5].OUT_0 = 20
     [sln] add-comp input.V[8]
     [sln] generate input.V[8].O = 20
     [sln] rm-route vdadd[5].D = 0.03010299956
     [sln] add-comp input.I[6]
     [sln] generate input.I[6].O = 0.03010299956
     [sln] rm-route vdadd[1].D = 0.03010299956
     [sln] add-comp input.I[7]
     [sln] generate input.I[7].O = 0.03010299956
     [sln] add-comp output.V[0]
     [sln] generate output.V[0].O = clp
     [sln] add-comp output.V[1]
     [sln] generate output.V[1].O = TetRp
     [sln] route input.V[0].X = 2
     [sln] route input.V[1].X = 2
     [sln] route input.V[2].X = 2
     [sln] route input.V[3].X = 0
     [sln] route input.V[4].X = 0
     [sln] route input.I[0].X = 0.4995
     [sln] route input.I[1].X = 0.4995
     [sln] route input.I[2].X = 0.4995
     [sln] route input.V[5].X = 40
     [sln] route input.I[3].X = 40
     [sln] route input.I[4].X = 40
     [sln] route input.I[5].X = 40
     [sln] route input.V[6].X = 3.01029995664
     [sln] route input.V[7].X = 3.01029995664
     [sln] route input.V[8].X = 20
     [sln] route input.I[6].X = 0.03010299956
     [sln] route input.I[7].X = 0.03010299956
     [comp] make-comp input.V0
     [comp] make-comp input.V1
     [comp] make-comp input.V2
     [comp] make-comp input.V3
     [comp] make-comp input.V4
     [comp] make-comp input.I0
     [comp] make-comp input.I1
     [comp] make-comp input.I2
     [comp] make-comp input.V5
     [comp] make-comp input.I3
     [comp] make-comp input.I4
     [comp] make-comp input.I5
     [comp] make-comp input.V6
     [comp] make-comp input.V7
     [comp] make-comp input.V8
     [comp] make-comp input.I6
     [comp] make-comp input.I7
     [comp] make-comp output.V0
     [comp] make-comp output.V1
     add-goal [1370] [CONN] vdadd[5].OUT => ihill_rep[6].S (clp)
     add-goal [1371] [CONN] vdadd[1].OUT => ihill_rep[3].S (TetRp)
     add-goal [1372] [CONN] input.V[0].O => ihill_rep[2].n (2)
     add-goal [1373] [CONN] input.V[1].O => ihill_rep[6].n (2)
     add-goal [1374] [CONN] input.V[2].O => ihill_rep[3].n (2)
     add-goal [1375] [CONN] input.V[3].O => vdadd[5].B (0)
     add-goal [1376] [CONN] input.V[4].O => vdadd[1].B (0)
     add-goal [1377] [CONN] input.I[0].O => ihill_rep[2].Vmax (0.4995)
     add-goal [1378] [CONN] input.I[1].O => ihill_rep[6].Vmax (0.4995)
     add-goal [1379] [CONN] input.I[2].O => ihill_rep[3].Vmax (0.4995)
     add-goal [1380] [CONN] input.V[5].O => vdadd[1].OUT_0 (40)
     add-goal [1381] [CONN] input.I[3].O => ihill_rep[2].Km (40)
     add-goal [1382] [CONN] input.I[4].O => ihill_rep[6].Km (40)
     add-goal [1383] [CONN] input.I[5].O => ihill_rep[3].Km (40)
     add-goal [1384] [CONN] input.V[6].O => vgain[4].X (3.01029995664)
     add-goal [1385] [CONN] input.V[7].O => vgain[0].X (3.01029995664)
     add-goal [1386] [CONN] input.V[8].O => vdadd[5].OUT_0 (20)
     add-goal [1387] [CONN] input.I[6].O => vdadd[5].D (0.03010299956)
     add-goal [1388] [CONN] input.I[7].O => vdadd[1].D (0.03010299956)
     add-goal [1389] [CONN] vdadd[5].OUT => output.V[0].X (clp)
     add-goal [1390] [CONN] vdadd[1].OUT => output.V[1].X (TetRp)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1377] [CONN] input.I[0].O => ihill_rep[2].Vmax (0.4995)
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1371] [CONN] vdadd[1].OUT => ihill_rep[3].S (TetRp)
[1386] [CONN] input.V[8].O => vdadd[5].OUT_0 (20)
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1385] [CONN] input.V[7].O => vgain[0].X (3.01029995664)
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1379] [CONN] input.I[2].O => ihill_rep[3].Vmax (0.4995)
[1382] [CONN] input.I[4].O => ihill_rep[6].Km (40)
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1380] [CONN] input.V[5].O => vdadd[1].OUT_0 (40)
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1370] [CONN] vdadd[5].OUT => ihill_rep[6].S (clp)
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1387] [CONN] input.I[6].O => vdadd[5].D (0.03010299956)
[1388] [CONN] input.I[7].O => vdadd[1].D (0.03010299956)
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1375] [CONN] input.V[3].O => vdadd[5].B (0)
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1381] [CONN] input.I[3].O => ihill_rep[2].Km (40)
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1376] [CONN] input.V[4].O => vdadd[1].B (0)
[1372] [CONN] input.V[0].O => ihill_rep[2].n (2)
[1373] [CONN] input.V[1].O => ihill_rep[6].n (2)
[1390] [CONN] vdadd[1].OUT => output.V[1].X (TetRp)
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1378] [CONN] input.I[1].O => ihill_rep[6].Vmax (0.4995)
[1389] [CONN] vdadd[5].OUT => output.V[0].X (clp)
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1374] [CONN] input.V[2].O => ihill_rep[3].n (2)
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1384] [CONN] input.V[6].O => vgain[4].X (3.01029995664)
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1383] [CONN] input.I[5].O => ihill_rep[3].Km (40)
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> Current Goal: [1383] [CONN] input.I[5].O => ihill_rep[3].Km (40)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vgain.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vgain.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 3
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=37

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] [TERMINATE] found 0 / 1
[eqn] [TERMINATE] could not find another node
[multi]   >> Found # Global Solutions: 1/1
[multi] >>>SOLUTION IS UNFINISHED <<<
[multi] # Found 0, Required: 1
[multi] solving target: LacLp
[multi] search tree is not exhausted. adding existing:LacLp
[multi] finding new partial solution
[multi] made a partial tree with 9 goals
[multi] find a partial solution
[multi] == Finding Local Solution ==
[multi] == Current # Solutions: 0
[multi] == # New Solutions To Find: 1
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> Current Goal: [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
vdadd.OUT -> true
mm.XY -> true
[eqn] >>> NUMBER OF COMPATIBLE COMPONENTS  2 <<<
[eqn] new: [0] <vdadd> output OUT.V
<analog-st> ((vdadd.V{A}:+(vdadd.BSW*vdadd.V{B}:))-(vdadd.DSW*vdadd.I{D}:*vdadd.V{OUT}:)) ic=OUT_0.V / std=none 0
<analog-st> [ddt v]=?? {ddt v}->[ddt v]=@
<analog-st> [v]=[0.,12000.] {v}->[v]=@ {v}->*[v]=@


checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 11 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 11 ssteps
[eqn] new: [0] <mm> output XY.V
<analog-st> ((mm.I{kf}:*mm.V{X}:*mm.V{Y}:)-(mm.I{kr}:*mm.V{XY}:)) ic=XY0.V / std=gauss ((0.001*mm.V{XY}:)+0.1)
<analog-st> [ddt v]=?? {ddt v}->[ddt v]=@
<analog-st> [v]=[0.,3200.] {v}->[v]=@ {v}->*[v]=@


[eqn] [FOUND-SOLS] ===> Found <20> solutions
[slvrsearch] > weight--: <mvar-goal>LacLp
[eqn] -> [valid?] testing node 34
[eqn] <<< SAT => VALID >>
[eqn] found 0 / 1
==== Goals ===
[1451] [EXPR]vdadd[1].A<V>=(3.01029995664*LacLm)
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> Current Goal: [1451] [EXPR]vdadd[1].A<V>=(3.01029995664*LacLm)
vgain.P -> true
vadd.OUT -> true
mm.X -> true
mm.Y -> true
itov.Y -> true
[eqn] >>> NUMBER OF COMPATIBLE COMPONENTS  5 <<<
[eqn] new: [0] <vgain> output P.V
<analog>:(vgain.V{X}:*vgain.I{Z}:) / std=none 0
<analog> [v]=[0.,5000.] {v}->[v]=@


[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn] new: [0] <vadd> output OUT.V
<analog>:(((vadd.V{A}:+(vadd.BSW*vadd.V{B}:))-(vadd.CSW*vadd.V{C}:))*0.25) / std=gauss ((0.001*vadd.V{OUT}:)+0.1)
<analog> [v]={[-825.,1650.] [0.,1650.] [-825.,825.] [0.,825.] } {v}->[v]=@


[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 13 ssteps
[eqn]     -> converted to 15 ssteps
[eqn]     -> converted to 13 ssteps
[eqn] new: [0] <mm> output Y.V
<analog>:(mm.V{Ytot}:-mm.V{XY}:) / std=none 0
<analog> [v]=[0.,1600.] {v}->[v]=@


[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[eqn] new: [0] <mm> output X.V
<analog>:(mm.V{Xtot}:-mm.V{XY}:) / std=none 0
<analog> [v]=[0.,1600.] {v}->[v]=@


[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[WARN][unify_math_expr] cannot unify math expression with analog state variable
[eqn] new: [0] <itov> output Y.V
<analog>:(itov.V{K}:*itov.I{X}:) / std=gauss 0.1
<analog> [v]=[0.,3300.] {v}->[v]=@


[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn]     -> converted to 11 ssteps
[eqn] [FOUND-SOLS] ===> Found <40> solutions
[slvrsearch] > weight--: (3.01029995664*LacLm)
[eqn] -> [valid?] testing node 121
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=38

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 119
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=39

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 117
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=40

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 51
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=41

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 49
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=42

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 47
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=43

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 116
[eqn] <<< SAT => VALID >>
[eqn] [search_tree] Found enough solutions
[multi] === returned from partial search ===
[multi] >>> Partial Results Found <<<
[multi] done with search
[multi] found some partial solutions. Will add partial solution node and global
[multi] == Adding Local Solution : 47 ==
[multi] == Adding Local Solution : 49 ==
[multi] == Adding Local Solution : 117 ==
[multi] == Adding Local Solution : 119 ==
[multi] == Adding Local Solution : 121 ==
[multi] == Adding Local Solution : 51 ==
[multi]  > Added Local Solution
[multi]  > Finding Global Solution
[multi] found # steps: 43
[multi] found # steps: 43
[multi] found # steps: 30
[multi] found # steps: 30
[multi] found # steps: 30
[multi] found # steps: 43
[multi] # partial ids = 6
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   remove-goal [1451] [EXPR]vdadd[8].A<V>=(3.01029995664*LacLm)
   remove-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   [comp] vgain[0] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[0] cfg-in Z=TetRm
   [comp] vgain[0] cfg-in X=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] itov[2] cfg-in Y=(3.01029995664*clm)
   [comp] itov[2] cfg-in K=clm
   [comp] itov[2] cfg-in X=3.01029995664
   [comp] vdadd[3] cfg-in OUT_0=20
   [comp] vdadd[3] cfg-in OUT=clp
   [comp] vdadd[3] cfg-param BSW=1
   [comp] vdadd[3] cfg-param DSW=1
   [comp] vdadd[3] cfg-in D=0.03010299956
   [comp] vdadd[3] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[3] cfg-in B=0
   [comp] ihill_rep[4] cfg-in REP=TRTetR
   [comp] ihill_rep[4] cfg-in n=2
   [comp] ihill_rep[4] cfg-in S=LacLp
   [comp] ihill_rep[4] cfg-in Vmax=0.4995
   [comp] ihill_rep[4] cfg-in Km=40
   [comp] ihill_rep[5] cfg-in REP=TRclp
   [comp] ihill_rep[5] cfg-in n=2
   [comp] ihill_rep[5] cfg-in S=TetRp
   [comp] ihill_rep[5] cfg-in Vmax=0.4995
   [comp] ihill_rep[5] cfg-in Km=40
   [comp] ihill_rep[6] cfg-in REP=TRLacL
   [comp] ihill_rep[6] cfg-in n=2
   [comp] ihill_rep[6] cfg-in S=clp
   [comp] ihill_rep[6] cfg-in Vmax=0.4995
   [comp] ihill_rep[6] cfg-in Km=40
   [comp] vgain[7] cfg-in P=(3.01029995664*LacLm)
   [comp] vgain[7] cfg-in Z=3.01029995664
   [comp] vgain[7] cfg-in X=LacLm
   [comp] vdadd[8] cfg-in OUT_0=60
   [comp] vdadd[8] cfg-in OUT=LacLp
   [comp] vdadd[8] cfg-param BSW=1
   [comp] vdadd[8] cfg-param DSW=1
   [comp] vdadd[8] cfg-in D=0.03010299956
   [comp] vdadd[8] cfg-in A=(3.01029995664*LacLm)
   [comp] vdadd[8] cfg-in B=0
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[0]
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] conn vgain[0].P->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] add-comp itov[2]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] conn itov[2].Y->vdadd[3].A
   [sln] generate vdadd[3].OUT = clp
   [sln] add-comp vdadd[3]
   [sln] generate ihill_rep[4].REP = TRTetR
   [sln] add-comp ihill_rep[4]
   [sln] generate ihill_rep[5].REP = TRclp
   [sln] add-comp ihill_rep[5]
   [sln] generate ihill_rep[6].REP = TRLacL
   [sln] add-comp ihill_rep[6]
   [sln] generate vgain[7].P = (3.01029995664*LacLm)
   [sln] add-comp vgain[7]
   [sln] generate vgain[7].P = (3.01029995664*LacLm)
   [sln] conn vgain[7].P->vdadd[8].A
   [sln] generate vdadd[8].OUT = LacLp
   [sln] add-comp vdadd[8]
   [sln] route vgain[0].Z = TetRm
   [sln] route vgain[0].X = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route itov[2].K = clm
   [sln] route itov[2].X = 3.01029995664
   [sln] route vdadd[3].OUT_0 = 20
   [sln] route vdadd[3].D = 0.03010299956
   [sln] route vdadd[3].B = 0
   [sln] route ihill_rep[4].n = 2
   [sln] route ihill_rep[4].S = LacLp
   [sln] route ihill_rep[4].Vmax = 0.4995
   [sln] route ihill_rep[4].Km = 40
   [sln] route ihill_rep[5].n = 2
   [sln] route ihill_rep[5].S = TetRp
   [sln] route ihill_rep[5].Vmax = 0.4995
   [sln] route ihill_rep[5].Km = 40
   [sln] route ihill_rep[6].n = 2
   [sln] route ihill_rep[6].S = clp
   [sln] route ihill_rep[6].Vmax = 0.4995
   [sln] route ihill_rep[6].Km = 40
   [sln] route vgain[7].Z = 3.01029995664
   [sln] route vgain[7].X = LacLm
   [sln] route vdadd[8].OUT_0 = 60
   [sln] route vdadd[8].D = 0.03010299956
   [sln] route vdadd[8].B = 0
   [comp] make-comp vgain0
   [comp] make-comp vdadd1
   [comp] make-comp itov2
   [comp] make-comp vdadd3
   [comp] make-comp ihill_rep4
   [comp] make-comp ihill_rep5
   [comp] make-comp ihill_rep6
   [comp] make-comp vgain7
   [comp] make-comp vdadd8
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   change-goal-status 1391 to disabled
   change-goal-status 1392 to disabled
   change-goal-status 1393 to disabled
   change-goal-status 1394 to disabled
   change-goal-status 1396 to disabled
   change-goal-status 1397 to disabled
   change-goal-status 1398 to disabled
   change-goal-status 1399 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1451] [EXPR]vdadd[8].A<V>=(3.01029995664*LacLm)

[multi] ==== ROUTES =====
[multi] > vgain[0].Z = TetRm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[4].S = LacLp
[multi]    - connecting generates to routes.
[multi] > vgain[7].X = LacLm
[multi]    - connecting generates to routes.
[multi] > itov[2].K = clm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[6].S = clp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[5].S = TetRp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[4].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[6].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[5].n = 2
[multi]    - making an input block.
[multi] > vdadd[8].OUT_0 = 60
[multi]    - making an input block.
[multi] > vdadd[1].B = 0
[multi]    - making an input block.
[multi] > vdadd[8].B = 0
[multi]    - making an input block.
[multi] > vdadd[3].B = 0
[multi]    - making an input block.
[multi] > ihill_rep[4].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[6].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[5].Vmax = 0.4995
[multi]    - making an input block.
[multi] > vdadd[1].OUT_0 = 40
[multi]    - making an input block.
[multi] > ihill_rep[4].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[6].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[5].Km = 40
[multi]    - making an input block.
[multi] > vgain[0].X = 3.01029995664
[multi]    - making an input block.
[multi] > vgain[7].Z = 3.01029995664
[multi]    - making an input block.
[multi] > itov[2].X = 3.01029995664
[multi]    - making an input block.
[multi] > vdadd[3].OUT_0 = 20
[multi]    - making an input block.
[multi] > vdadd[1].D = 0.03010299956
[multi]    - making an input block.
[multi] > vdadd[8].D = 0.03010299956
[multi]    - making an input block.
[multi] > vdadd[3].D = 0.03010299956
[multi]    - making an input block.
[multi] ==== GENERATES =====
[multi] > vdadd[8].OUT = LacLp
[multi]    - making an output block.
[multi] > vdadd[3].OUT = clp
[multi]    - making an output block.
[multi] > vdadd[1].OUT = TetRp
[multi]    - making an output block.
[multi] > ihill_rep[4].REP = TRTetR
[multi] > ihill_rep[6].REP = TRLacL
[multi] > ihill_rep[5].REP = TRclp
[multi] > itov[2].Y = (3.01029995664*clm)
[multi] > itov[2].Y = (3.01029995664*clm)
[multi] > vgain[7].P = (3.01029995664*LacLm)
[multi] > vgain[7].P = (3.01029995664*LacLm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] --> Number of options 27
[multi] --> Number of nodes 1
[multi] ======= Partial (Root) Steps 219 =======
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   remove-goal [1451] [EXPR]vdadd[8].A<V>=(3.01029995664*LacLm)
   remove-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   [comp] vgain[0] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[0] cfg-in Z=TetRm
   [comp] vgain[0] cfg-in X=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] itov[2] cfg-in Y=(3.01029995664*clm)
   [comp] itov[2] cfg-in K=clm
   [comp] itov[2] cfg-in X=3.01029995664
   [comp] vdadd[3] cfg-in OUT_0=20
   [comp] vdadd[3] cfg-in OUT=clp
   [comp] vdadd[3] cfg-param BSW=1
   [comp] vdadd[3] cfg-param DSW=1
   [comp] vdadd[3] cfg-in D=0.03010299956
   [comp] vdadd[3] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[3] cfg-in B=0
   [comp] ihill_rep[4] cfg-in REP=TRTetR
   [comp] ihill_rep[4] cfg-in n=2
   [comp] ihill_rep[4] cfg-in S=LacLp
   [comp] ihill_rep[4] cfg-in Vmax=0.4995
   [comp] ihill_rep[4] cfg-in Km=40
   [comp] ihill_rep[5] cfg-in REP=TRclp
   [comp] ihill_rep[5] cfg-in n=2
   [comp] ihill_rep[5] cfg-in S=TetRp
   [comp] ihill_rep[5] cfg-in Vmax=0.4995
   [comp] ihill_rep[5] cfg-in Km=40
   [comp] ihill_rep[6] cfg-in REP=TRLacL
   [comp] ihill_rep[6] cfg-in n=2
   [comp] ihill_rep[6] cfg-in S=clp
   [comp] ihill_rep[6] cfg-in Vmax=0.4995
   [comp] ihill_rep[6] cfg-in Km=40
   [comp] vgain[7] cfg-in P=(3.01029995664*LacLm)
   [comp] vgain[7] cfg-in Z=3.01029995664
   [comp] vgain[7] cfg-in X=LacLm
   [comp] vdadd[8] cfg-in OUT_0=60
   [comp] vdadd[8] cfg-in OUT=LacLp
   [comp] vdadd[8] cfg-param BSW=1
   [comp] vdadd[8] cfg-param DSW=1
   [comp] vdadd[8] cfg-in D=0.03010299956
   [comp] vdadd[8] cfg-in A=(3.01029995664*LacLm)
   [comp] vdadd[8] cfg-in B=0
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[0]
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] conn vgain[0].P->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] add-comp itov[2]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] conn itov[2].Y->vdadd[3].A
   [sln] generate vdadd[3].OUT = clp
   [sln] add-comp vdadd[3]
   [sln] generate ihill_rep[4].REP = TRTetR
   [sln] add-comp ihill_rep[4]
   [sln] generate ihill_rep[5].REP = TRclp
   [sln] add-comp ihill_rep[5]
   [sln] generate ihill_rep[6].REP = TRLacL
   [sln] add-comp ihill_rep[6]
   [sln] generate vgain[7].P = (3.01029995664*LacLm)
   [sln] add-comp vgain[7]
   [sln] generate vgain[7].P = (3.01029995664*LacLm)
   [sln] conn vgain[7].P->vdadd[8].A
   [sln] generate vdadd[8].OUT = LacLp
   [sln] add-comp vdadd[8]
   [sln] route vgain[0].Z = TetRm
   [sln] route vgain[0].X = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route itov[2].K = clm
   [sln] route itov[2].X = 3.01029995664
   [sln] route vdadd[3].OUT_0 = 20
   [sln] route vdadd[3].D = 0.03010299956
   [sln] route vdadd[3].B = 0
   [sln] route ihill_rep[4].n = 2
   [sln] route ihill_rep[4].S = LacLp
   [sln] route ihill_rep[4].Vmax = 0.4995
   [sln] route ihill_rep[4].Km = 40
   [sln] route ihill_rep[5].n = 2
   [sln] route ihill_rep[5].S = TetRp
   [sln] route ihill_rep[5].Vmax = 0.4995
   [sln] route ihill_rep[5].Km = 40
   [sln] route ihill_rep[6].n = 2
   [sln] route ihill_rep[6].S = clp
   [sln] route ihill_rep[6].Vmax = 0.4995
   [sln] route ihill_rep[6].Km = 40
   [sln] route vgain[7].Z = 3.01029995664
   [sln] route vgain[7].X = LacLm
   [sln] route vdadd[8].OUT_0 = 60
   [sln] route vdadd[8].D = 0.03010299956
   [sln] route vdadd[8].B = 0
   [comp] make-comp vgain0
   [comp] make-comp vdadd1
   [comp] make-comp itov2
   [comp] make-comp vdadd3
   [comp] make-comp ihill_rep4
   [comp] make-comp ihill_rep5
   [comp] make-comp ihill_rep6
   [comp] make-comp vgain7
   [comp] make-comp vdadd8
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   change-goal-status 1391 to disabled
   change-goal-status 1392 to disabled
   change-goal-status 1393 to disabled
   change-goal-status 1394 to disabled
   change-goal-status 1396 to disabled
   change-goal-status 1397 to disabled
   change-goal-status 1398 to disabled
   change-goal-status 1399 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1451] [EXPR]vdadd[8].A<V>=(3.01029995664*LacLm)

[multi] ============================
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.V[0] cfg-in X=2
     [comp] input.V[0] cfg-out O=2
     [comp] input.V[1] cfg-in X=2
     [comp] input.V[1] cfg-out O=2
     [comp] input.V[2] cfg-in X=2
     [comp] input.V[2] cfg-out O=2
     [comp] input.V[3] cfg-in X=60
     [comp] input.V[3] cfg-out O=60
     [comp] input.V[4] cfg-in X=0
     [comp] input.V[4] cfg-out O=0
     [comp] input.V[5] cfg-in X=0
     [comp] input.V[5] cfg-out O=0
     [comp] input.V[6] cfg-in X=0
     [comp] input.V[6] cfg-out O=0
     [comp] input.I[0] cfg-in X=0.4995
     [comp] input.I[0] cfg-out O=0.4995
     [comp] input.I[1] cfg-in X=0.4995
     [comp] input.I[1] cfg-out O=0.4995
     [comp] input.I[2] cfg-in X=0.4995
     [comp] input.I[2] cfg-out O=0.4995
     [comp] input.V[7] cfg-in X=40
     [comp] input.V[7] cfg-out O=40
     [comp] input.I[3] cfg-in X=40
     [comp] input.I[3] cfg-out O=40
     [comp] input.I[4] cfg-in X=40
     [comp] input.I[4] cfg-out O=40
     [comp] input.I[5] cfg-in X=40
     [comp] input.I[5] cfg-out O=40
     [comp] input.V[8] cfg-in X=3.01029995664
     [comp] input.V[8] cfg-out O=3.01029995664
     [comp] input.I[6] cfg-in X=3.01029995664
     [comp] input.I[6] cfg-out O=3.01029995664
     [comp] input.I[7] cfg-in X=3.01029995664
     [comp] input.I[7] cfg-out O=3.01029995664
     [comp] input.V[9] cfg-in X=20
     [comp] input.V[9] cfg-out O=20
     [comp] input.I[8] cfg-in X=0.03010299956
     [comp] input.I[8] cfg-out O=0.03010299956
     [comp] input.I[9] cfg-in X=0.03010299956
     [comp] input.I[9] cfg-out O=0.03010299956
     [comp] input.I[10] cfg-in X=0.03010299956
     [comp] input.I[10] cfg-out O=0.03010299956
     [comp] output.V[0] cfg-in X=LacLp
     [comp] output.V[0] cfg-out O=LacLp
     [comp] output.V[1] cfg-in X=clp
     [comp] output.V[1] cfg-out O=clp
     [comp] output.V[2] cfg-in X=TetRp
     [comp] output.V[2] cfg-out O=TetRp
     [sln] rm-route ihill_rep[4].S = LacLp
     [sln] rm-route ihill_rep[6].S = clp
     [sln] rm-route ihill_rep[5].S = TetRp
     [sln] rm-route ihill_rep[4].n = 2
     [sln] add-comp input.V[0]
     [sln] generate input.V[0].O = 2
     [sln] rm-route ihill_rep[6].n = 2
     [sln] add-comp input.V[1]
     [sln] generate input.V[1].O = 2
     [sln] rm-route ihill_rep[5].n = 2
     [sln] add-comp input.V[2]
     [sln] generate input.V[2].O = 2
     [sln] rm-route vdadd[8].OUT_0 = 60
     [sln] add-comp input.V[3]
     [sln] generate input.V[3].O = 60
     [sln] rm-route vdadd[1].B = 0
     [sln] add-comp input.V[4]
     [sln] generate input.V[4].O = 0
     [sln] rm-route vdadd[8].B = 0
     [sln] add-comp input.V[5]
     [sln] generate input.V[5].O = 0
     [sln] rm-route vdadd[3].B = 0
     [sln] add-comp input.V[6]
     [sln] generate input.V[6].O = 0
     [sln] rm-route ihill_rep[4].Vmax = 0.4995
     [sln] add-comp input.I[0]
     [sln] generate input.I[0].O = 0.4995
     [sln] rm-route ihill_rep[6].Vmax = 0.4995
     [sln] add-comp input.I[1]
     [sln] generate input.I[1].O = 0.4995
     [sln] rm-route ihill_rep[5].Vmax = 0.4995
     [sln] add-comp input.I[2]
     [sln] generate input.I[2].O = 0.4995
     [sln] rm-route vdadd[1].OUT_0 = 40
     [sln] add-comp input.V[7]
     [sln] generate input.V[7].O = 40
     [sln] rm-route ihill_rep[4].Km = 40
     [sln] add-comp input.I[3]
     [sln] generate input.I[3].O = 40
     [sln] rm-route ihill_rep[6].Km = 40
     [sln] add-comp input.I[4]
     [sln] generate input.I[4].O = 40
     [sln] rm-route ihill_rep[5].Km = 40
     [sln] add-comp input.I[5]
     [sln] generate input.I[5].O = 40
     [sln] rm-route vgain[0].X = 3.01029995664
     [sln] add-comp input.V[8]
     [sln] generate input.V[8].O = 3.01029995664
     [sln] rm-route vgain[7].Z = 3.01029995664
     [sln] add-comp input.I[6]
     [sln] generate input.I[6].O = 3.01029995664
     [sln] rm-route itov[2].X = 3.01029995664
     [sln] add-comp input.I[7]
     [sln] generate input.I[7].O = 3.01029995664
     [sln] rm-route vdadd[3].OUT_0 = 20
     [sln] add-comp input.V[9]
     [sln] generate input.V[9].O = 20
     [sln] rm-route vdadd[1].D = 0.03010299956
     [sln] add-comp input.I[8]
     [sln] generate input.I[8].O = 0.03010299956
     [sln] rm-route vdadd[8].D = 0.03010299956
     [sln] add-comp input.I[9]
     [sln] generate input.I[9].O = 0.03010299956
     [sln] rm-route vdadd[3].D = 0.03010299956
     [sln] add-comp input.I[10]
     [sln] generate input.I[10].O = 0.03010299956
     [sln] add-comp output.V[0]
     [sln] generate output.V[0].O = LacLp
     [sln] add-comp output.V[1]
     [sln] generate output.V[1].O = clp
     [sln] add-comp output.V[2]
     [sln] generate output.V[2].O = TetRp
     [sln] route input.V[0].X = 2
     [sln] route input.V[1].X = 2
     [sln] route input.V[2].X = 2
     [sln] route input.V[3].X = 60
     [sln] route input.V[4].X = 0
     [sln] route input.V[5].X = 0
     [sln] route input.V[6].X = 0
     [sln] route input.I[0].X = 0.4995
     [sln] route input.I[1].X = 0.4995
     [sln] route input.I[2].X = 0.4995
     [sln] route input.V[7].X = 40
     [sln] route input.I[3].X = 40
     [sln] route input.I[4].X = 40
     [sln] route input.I[5].X = 40
     [sln] route input.V[8].X = 3.01029995664
     [sln] route input.I[6].X = 3.01029995664
     [sln] route input.I[7].X = 3.01029995664
     [sln] route input.V[9].X = 20
     [sln] route input.I[8].X = 0.03010299956
     [sln] route input.I[9].X = 0.03010299956
     [sln] route input.I[10].X = 0.03010299956
     [comp] make-comp input.V0
     [comp] make-comp input.V1
     [comp] make-comp input.V2
     [comp] make-comp input.V3
     [comp] make-comp input.V4
     [comp] make-comp input.V5
     [comp] make-comp input.V6
     [comp] make-comp input.I0
     [comp] make-comp input.I1
     [comp] make-comp input.I2
     [comp] make-comp input.V7
     [comp] make-comp input.I3
     [comp] make-comp input.I4
     [comp] make-comp input.I5
     [comp] make-comp input.V8
     [comp] make-comp input.I6
     [comp] make-comp input.I7
     [comp] make-comp input.V9
     [comp] make-comp input.I8
     [comp] make-comp input.I9
     [comp] make-comp input.I10
     [comp] make-comp output.V0
     [comp] make-comp output.V1
     [comp] make-comp output.V2
     add-goal [1550] [CONN] vdadd[8].OUT => ihill_rep[4].S (LacLp)
     add-goal [1551] [CONN] vdadd[3].OUT => ihill_rep[6].S (clp)
     add-goal [1552] [CONN] vdadd[1].OUT => ihill_rep[5].S (TetRp)
     add-goal [1553] [CONN] input.V[0].O => ihill_rep[4].n (2)
     add-goal [1554] [CONN] input.V[1].O => ihill_rep[6].n (2)
     add-goal [1555] [CONN] input.V[2].O => ihill_rep[5].n (2)
     add-goal [1556] [CONN] input.V[3].O => vdadd[8].OUT_0 (60)
     add-goal [1557] [CONN] input.V[4].O => vdadd[1].B (0)
     add-goal [1558] [CONN] input.V[5].O => vdadd[8].B (0)
     add-goal [1559] [CONN] input.V[6].O => vdadd[3].B (0)
     add-goal [1560] [CONN] input.I[0].O => ihill_rep[4].Vmax (0.4995)
     add-goal [1561] [CONN] input.I[1].O => ihill_rep[6].Vmax (0.4995)
     add-goal [1562] [CONN] input.I[2].O => ihill_rep[5].Vmax (0.4995)
     add-goal [1563] [CONN] input.V[7].O => vdadd[1].OUT_0 (40)
     add-goal [1564] [CONN] input.I[3].O => ihill_rep[4].Km (40)
     add-goal [1565] [CONN] input.I[4].O => ihill_rep[6].Km (40)
     add-goal [1566] [CONN] input.I[5].O => ihill_rep[5].Km (40)
     add-goal [1567] [CONN] input.V[8].O => vgain[0].X (3.01029995664)
     add-goal [1568] [CONN] input.I[6].O => vgain[7].Z (3.01029995664)
     add-goal [1569] [CONN] input.I[7].O => itov[2].X (3.01029995664)
     add-goal [1570] [CONN] input.V[9].O => vdadd[3].OUT_0 (20)
     add-goal [1571] [CONN] input.I[8].O => vdadd[1].D (0.03010299956)
     add-goal [1572] [CONN] input.I[9].O => vdadd[8].D (0.03010299956)
     add-goal [1573] [CONN] input.I[10].O => vdadd[3].D (0.03010299956)
     add-goal [1574] [CONN] vdadd[8].OUT => output.V[0].X (LacLp)
     add-goal [1575] [CONN] vdadd[3].OUT => output.V[1].X (clp)
     add-goal [1576] [CONN] vdadd[1].OUT => output.V[2].X (TetRp)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[1569] [CONN] input.I[7].O => itov[2].X (3.01029995664)
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1566] [CONN] input.I[5].O => ihill_rep[5].Km (40)
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1574] [CONN] vdadd[8].OUT => output.V[0].X (LacLp)
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1564] [CONN] input.I[3].O => ihill_rep[4].Km (40)
[1567] [CONN] input.V[8].O => vgain[0].X (3.01029995664)
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1558] [CONN] input.V[5].O => vdadd[8].B (0)
[1559] [CONN] input.V[6].O => vdadd[3].B (0)
[1568] [CONN] input.I[6].O => vgain[7].Z (3.01029995664)
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1556] [CONN] input.V[3].O => vdadd[8].OUT_0 (60)
[1553] [CONN] input.V[0].O => ihill_rep[4].n (2)
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1550] [CONN] vdadd[8].OUT => ihill_rep[4].S (LacLp)
[1552] [CONN] vdadd[1].OUT => ihill_rep[5].S (TetRp)
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1572] [CONN] input.I[9].O => vdadd[8].D (0.03010299956)
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1554] [CONN] input.V[1].O => ihill_rep[6].n (2)
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1570] [CONN] input.V[9].O => vdadd[3].OUT_0 (20)
[1573] [CONN] input.I[10].O => vdadd[3].D (0.03010299956)
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1562] [CONN] input.I[2].O => ihill_rep[5].Vmax (0.4995)
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1563] [CONN] input.V[7].O => vdadd[1].OUT_0 (40)
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1565] [CONN] input.I[4].O => ihill_rep[6].Km (40)
[1575] [CONN] vdadd[3].OUT => output.V[1].X (clp)
[1576] [CONN] vdadd[1].OUT => output.V[2].X (TetRp)
[1557] [CONN] input.V[4].O => vdadd[1].B (0)
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1555] [CONN] input.V[2].O => ihill_rep[5].n (2)
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1560] [CONN] input.I[0].O => ihill_rep[4].Vmax (0.4995)
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1571] [CONN] input.I[8].O => vdadd[1].D (0.03010299956)
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1561] [CONN] input.I[1].O => ihill_rep[6].Vmax (0.4995)
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1551] [CONN] vdadd[3].OUT => ihill_rep[6].S (clp)
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> Current Goal: [1551] [CONN] vdadd[3].OUT => ihill_rep[6].S (clp)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vgain.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->itov.X
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 3
[eqn] <<< SAT => VALID >>
[eqn] found 0 / 1
==== Goals ===
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1568] [CONN] input.I[6].O => vgain[7].Z (3.01029995664)
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> Current Goal: [1568] [CONN] input.I[6].O => vgain[7].Z (3.01029995664)
iadd.OUT || # ins: 3 / connected / I ?= I/distance=0
iadd.OUT -> true
[eqn] >>> NUMBER OF COMPATIBLE COMPONENTS  1 <<<
[eqn] new: [0] <iadd> output OUT.I
<analog>:((iadd.I{A}:+iadd.I{B}:)-iadd.I{C}:) / std=gauss ((1e-05*iadd.V{OUT}:)+0.001)
<analog> [v]=[-5.,10.] {v}->[v]=@


[eqn] ==== iadd====

[WARN][add_passthru_step.RAddInAssign] this assignment is perfect!: OUT=__tmp__
[WARN][add_passthru_step.RAddInAssign] this assignment is too complicated: C=(-1*__tmp__)
[eqn]     -> failed to convert unify steps
[eqn] ==== iadd====

[WARN][add_passthru_step.RAddInAssign] this assignment is perfect!: OUT=__tmp__
[WARN][add_passthru_step.RAddInAssign] this assignment is perfect!: A=__tmp__
[eqn]     -> converted to 12 ssteps
[eqn] ==== iadd====

[WARN][add_passthru_step.RAddInAssign] this assignment is perfect!: OUT=__tmp__
[WARN][add_passthru_step.RAddInAssign] this assignment is perfect!: B=__tmp__
[eqn]     -> converted to 12 ssteps
[eqn] [FOUND-SOLS] ===> Found <2> solutions
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vgain.Z
[eqn] -> [valid?] testing node 5
[eqn] <<< SAT => VALID >>
[eqn] found 0 / 1
==== Goals ===
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1578] [CONN] input.I[6].O => iadd[0].B (3.01029995664)
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> Current Goal: [1578] [CONN] input.I[6].O => iadd[0].B (3.01029995664)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->iadd.B
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 6
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=44

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 4
[eqn] <<< SAT => VALID >>
[eqn] [search_tree] Found enough solutions
[multi] ==== ROUTES =====
[multi] > vgain[0].Z = TetRm
[multi]    - connecting generates to routes.
[multi] > vgain[7].X = LacLm
[multi]    - connecting generates to routes.
[multi] > itov[2].K = clm
[multi]    - connecting generates to routes.
[multi] > input.V[0].X = 2
[multi]     - ignoring route to input block.
[multi] > input.V[1].X = 2
[multi]     - ignoring route to input block.
[multi] > input.V[2].X = 2
[multi]     - ignoring route to input block.
[multi] > input.V[3].X = 60
[multi]     - ignoring route to input block.
[multi] > iadd[0].C = 0
[multi]    - making an input block.
[multi] > iadd[0].A = 0
[multi]    - making an input block.
[multi] > input.V[4].X = 0
[multi]     - ignoring route to input block.
[multi] > input.V[5].X = 0
[multi]     - ignoring route to input block.
[multi] > input.V[6].X = 0
[multi]     - ignoring route to input block.
[multi] > input.I[0].X = 0.4995
[multi]     - ignoring route to input block.
[multi] > input.I[1].X = 0.4995
[multi]     - ignoring route to input block.
[multi] > input.I[2].X = 0.4995
[multi]     - ignoring route to input block.
[multi] > input.V[7].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[3].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[4].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[5].X = 40
[multi]     - ignoring route to input block.
[multi] > input.V[8].X = 3.01029995664
[multi]     - ignoring route to input block.
[multi] > input.I[6].X = 3.01029995664
[multi]     - ignoring route to input block.
[multi] > input.I[7].X = 3.01029995664
[multi]     - ignoring route to input block.
[multi] > input.V[9].X = 20
[multi]     - ignoring route to input block.
[multi] > input.I[8].X = 0.03010299956
[multi]     - ignoring route to input block.
[multi] > input.I[9].X = 0.03010299956
[multi]     - ignoring route to input block.
[multi] > input.I[10].X = 0.03010299956
[multi]     - ignoring route to input block.
[multi] ==== GENERATES =====
[multi] > vdadd[8].OUT = LacLp
[multi]     - ignoring connected output block
[multi] > output.V[0].O = LacLp
[multi]     - ignoring generate to output block.
[multi] > vdadd[3].OUT = clp
[multi]     - ignoring connected output block
[multi] > output.V[1].O = clp
[multi]     - ignoring generate to output block.
[multi] > vdadd[1].OUT = TetRp
[multi]     - ignoring connected output block
[multi] > output.V[2].O = TetRp
[multi]     - ignoring generate to output block.
[multi] > ihill_rep[4].REP = TRTetR
[multi] > ihill_rep[6].REP = TRLacL
[multi] > ihill_rep[5].REP = TRclp
[multi] > input.V[0].O = 2
[multi]     - ignoring generate to input block.
[multi] > input.V[2].O = 2
[multi]     - ignoring generate to input block.
[multi] > input.V[1].O = 2
[multi]     - ignoring generate to input block.
[multi] > input.V[3].O = 60
[multi]     - ignoring generate to input block.
[multi] > input.V[4].O = 0
[multi]     - ignoring generate to input block.
[multi] > input.V[6].O = 0
[multi]     - ignoring generate to input block.
[multi] > input.V[5].O = 0
[multi]     - ignoring generate to input block.
[multi] > input.I[0].O = 0.4995
[multi]     - ignoring generate to input block.
[multi] > input.I[2].O = 0.4995
[multi]     - ignoring generate to input block.
[multi] > input.I[1].O = 0.4995
[multi]     - ignoring generate to input block.
[multi] > input.V[7].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.I[3].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.I[5].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.I[4].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.V[8].O = 3.01029995664
[multi]     - ignoring generate to input block.
[multi] > input.I[7].O = 3.01029995664
[multi]     - ignoring generate to input block.
[multi] > input.I[6].O = 3.01029995664
[multi]     - ignoring generate to input block.
[multi] > input.V[9].O = 20
[multi]     - ignoring generate to input block.
[multi] > input.I[8].O = 0.03010299956
[multi]     - ignoring generate to input block.
[multi] > input.I[10].O = 0.03010299956
[multi]     - ignoring generate to input block.
[multi] > input.I[9].O = 0.03010299956
[multi]     - ignoring generate to input block.
[multi] > itov[2].Y = (3.01029995664*clm)
[multi] > itov[2].Y = (3.01029995664*clm)
[multi] > vgain[7].P = (3.01029995664*LacLm)
[multi] > vgain[7].P = (3.01029995664*LacLm)
[multi] > iadd[0].OUT = 3.01029995664
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] --> Number of options 2
[multi] --> Number of nodes 1
[multi] ======= New Path =======
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.I[11] cfg-in X=0
     [comp] input.I[11] cfg-out O=0
     [comp] input.I[12] cfg-in X=0
     [comp] input.I[12] cfg-out O=0
     [sln] rm-route iadd[0].C = 0
     [sln] add-comp input.I[11]
     [sln] generate input.I[11].O = 0
     [sln] rm-route iadd[0].A = 0
     [sln] add-comp input.I[12]
     [sln] generate input.I[12].O = 0
     [sln] route input.I[11].X = 0
     [sln] route input.I[12].X = 0
     [comp] make-comp input.I11
     [comp] make-comp input.I12
     add-goal [1579] [CONN] input.I[11].O => iadd[0].C (0)
     add-goal [1580] [CONN] input.I[12].O => iadd[0].A (0)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1577] [CONN] input.I[6].O => iadd[0].A (3.01029995664)
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> Current Goal: [1577] [CONN] input.I[6].O => iadd[0].A (3.01029995664)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->iadd.A
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 8
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=45

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 7
[eqn] <<< SAT => VALID >>
[eqn] [search_tree] Found enough solutions
[multi] ==== ROUTES =====
[multi] > vgain[0].Z = TetRm
[multi]    - connecting generates to routes.
[multi] > vgain[7].X = LacLm
[multi]    - connecting generates to routes.
[multi] > itov[2].K = clm
[multi]    - connecting generates to routes.
[multi] > input.V[0].X = 2
[multi]     - ignoring route to input block.
[multi] > input.V[1].X = 2
[multi]     - ignoring route to input block.
[multi] > input.V[2].X = 2
[multi]     - ignoring route to input block.
[multi] > input.V[3].X = 60
[multi]     - ignoring route to input block.
[multi] > iadd[0].C = 0
[multi]    - making an input block.
[multi] > iadd[0].B = 0
[multi]    - making an input block.
[multi] > input.V[4].X = 0
[multi]     - ignoring route to input block.
[multi] > input.V[5].X = 0
[multi]     - ignoring route to input block.
[multi] > input.V[6].X = 0
[multi]     - ignoring route to input block.
[multi] > input.I[0].X = 0.4995
[multi]     - ignoring route to input block.
[multi] > input.I[1].X = 0.4995
[multi]     - ignoring route to input block.
[multi] > input.I[2].X = 0.4995
[multi]     - ignoring route to input block.
[multi] > input.V[7].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[3].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[4].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[5].X = 40
[multi]     - ignoring route to input block.
[multi] > input.V[8].X = 3.01029995664
[multi]     - ignoring route to input block.
[multi] > input.I[6].X = 3.01029995664
[multi]     - ignoring route to input block.
[multi] > input.I[7].X = 3.01029995664
[multi]     - ignoring route to input block.
[multi] > input.V[9].X = 20
[multi]     - ignoring route to input block.
[multi] > input.I[8].X = 0.03010299956
[multi]     - ignoring route to input block.
[multi] > input.I[9].X = 0.03010299956
[multi]     - ignoring route to input block.
[multi] > input.I[10].X = 0.03010299956
[multi]     - ignoring route to input block.
[multi] ==== GENERATES =====
[multi] > vdadd[8].OUT = LacLp
[multi]     - ignoring connected output block
[multi] > output.V[0].O = LacLp
[multi]     - ignoring generate to output block.
[multi] > vdadd[3].OUT = clp
[multi]     - ignoring connected output block
[multi] > output.V[1].O = clp
[multi]     - ignoring generate to output block.
[multi] > vdadd[1].OUT = TetRp
[multi]     - ignoring connected output block
[multi] > output.V[2].O = TetRp
[multi]     - ignoring generate to output block.
[multi] > ihill_rep[4].REP = TRTetR
[multi] > ihill_rep[6].REP = TRLacL
[multi] > ihill_rep[5].REP = TRclp
[multi] > input.V[0].O = 2
[multi]     - ignoring generate to input block.
[multi] > input.V[2].O = 2
[multi]     - ignoring generate to input block.
[multi] > input.V[1].O = 2
[multi]     - ignoring generate to input block.
[multi] > input.V[3].O = 60
[multi]     - ignoring generate to input block.
[multi] > input.V[4].O = 0
[multi]     - ignoring generate to input block.
[multi] > input.V[6].O = 0
[multi]     - ignoring generate to input block.
[multi] > input.V[5].O = 0
[multi]     - ignoring generate to input block.
[multi] > input.I[0].O = 0.4995
[multi]     - ignoring generate to input block.
[multi] > input.I[2].O = 0.4995
[multi]     - ignoring generate to input block.
[multi] > input.I[1].O = 0.4995
[multi]     - ignoring generate to input block.
[multi] > input.V[7].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.I[3].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.I[5].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.I[4].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.V[8].O = 3.01029995664
[multi]     - ignoring generate to input block.
[multi] > input.I[7].O = 3.01029995664
[multi]     - ignoring generate to input block.
[multi] > input.I[6].O = 3.01029995664
[multi]     - ignoring generate to input block.
[multi] > input.V[9].O = 20
[multi]     - ignoring generate to input block.
[multi] > input.I[8].O = 0.03010299956
[multi]     - ignoring generate to input block.
[multi] > input.I[10].O = 0.03010299956
[multi]     - ignoring generate to input block.
[multi] > input.I[9].O = 0.03010299956
[multi]     - ignoring generate to input block.
[multi] > itov[2].Y = (3.01029995664*clm)
[multi] > itov[2].Y = (3.01029995664*clm)
[multi] > vgain[7].P = (3.01029995664*LacLm)
[multi] > vgain[7].P = (3.01029995664*LacLm)
[multi] > iadd[0].OUT = 3.01029995664
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] --> Number of options 2
[multi] --> Number of nodes 1
[multi] ======= New Path =======
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.I[13] cfg-in X=0
     [comp] input.I[13] cfg-out O=0
     [comp] input.I[14] cfg-in X=0
     [comp] input.I[14] cfg-out O=0
     [sln] rm-route iadd[0].C = 0
     [sln] add-comp input.I[13]
     [sln] generate input.I[13].O = 0
     [sln] rm-route iadd[0].B = 0
     [sln] add-comp input.I[14]
     [sln] generate input.I[14].O = 0
     [sln] route input.I[13].X = 0
     [sln] route input.I[14].X = 0
     [comp] make-comp input.I13
     [comp] make-comp input.I14
     add-goal [1581] [CONN] input.I[13].O => iadd[0].C (0)
     add-goal [1582] [CONN] input.I[14].O => iadd[0].B (0)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1581] [CONN] input.I[13].O => iadd[0].C (0)
[1582] [CONN] input.I[14].O => iadd[0].B (0)
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> Current Goal: [1582] [CONN] input.I[14].O => iadd[0].B (0)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->iadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->iadd.C
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 10
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=46

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 7
[eqn] <<< SAT => VALID >>
[eqn] [search_tree] Found enough solutions
[multi]   >> Found # Global Solutions: 1/1
[multi] >>>SOLUTION IS UNFINISHED <<<
[multi]  > Added Local Solution
[multi]  > Finding Global Solution
[multi] found # steps: 43
[multi] found # steps: 43
[multi] found # steps: 30
[multi] found # steps: 30
[multi] found # steps: 30
[multi] found # steps: 43
[multi] # partial ids = 6
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   remove-goal [1451] [EXPR]vdadd[8].A<V>=(3.01029995664*LacLm)
   remove-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   [comp] vgain[0] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[0] cfg-in Z=TetRm
   [comp] vgain[0] cfg-in X=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] itov[2] cfg-in Y=(3.01029995664*clm)
   [comp] itov[2] cfg-in K=clm
   [comp] itov[2] cfg-in X=3.01029995664
   [comp] vdadd[3] cfg-in OUT_0=20
   [comp] vdadd[3] cfg-in OUT=clp
   [comp] vdadd[3] cfg-param BSW=1
   [comp] vdadd[3] cfg-param DSW=1
   [comp] vdadd[3] cfg-in D=0.03010299956
   [comp] vdadd[3] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[3] cfg-in B=0
   [comp] ihill_rep[4] cfg-in REP=TRTetR
   [comp] ihill_rep[4] cfg-in n=2
   [comp] ihill_rep[4] cfg-in S=LacLp
   [comp] ihill_rep[4] cfg-in Vmax=0.4995
   [comp] ihill_rep[4] cfg-in Km=40
   [comp] ihill_rep[5] cfg-in REP=TRclp
   [comp] ihill_rep[5] cfg-in n=2
   [comp] ihill_rep[5] cfg-in S=TetRp
   [comp] ihill_rep[5] cfg-in Vmax=0.4995
   [comp] ihill_rep[5] cfg-in Km=40
   [comp] ihill_rep[6] cfg-in REP=TRLacL
   [comp] ihill_rep[6] cfg-in n=2
   [comp] ihill_rep[6] cfg-in S=clp
   [comp] ihill_rep[6] cfg-in Vmax=0.4995
   [comp] ihill_rep[6] cfg-in Km=40
   [comp] vgain[7] cfg-in P=(3.01029995664*LacLm)
   [comp] vgain[7] cfg-in X=LacLm
   [comp] vgain[7] cfg-in Z=3.01029995664
   [comp] vdadd[8] cfg-in OUT_0=60
   [comp] vdadd[8] cfg-in OUT=LacLp
   [comp] vdadd[8] cfg-param BSW=1
   [comp] vdadd[8] cfg-param DSW=1
   [comp] vdadd[8] cfg-in D=0.03010299956
   [comp] vdadd[8] cfg-in A=(3.01029995664*LacLm)
   [comp] vdadd[8] cfg-in B=0
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[0]
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] conn vgain[0].P->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] add-comp itov[2]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] conn itov[2].Y->vdadd[3].A
   [sln] generate vdadd[3].OUT = clp
   [sln] add-comp vdadd[3]
   [sln] generate ihill_rep[4].REP = TRTetR
   [sln] add-comp ihill_rep[4]
   [sln] generate ihill_rep[5].REP = TRclp
   [sln] add-comp ihill_rep[5]
   [sln] generate ihill_rep[6].REP = TRLacL
   [sln] add-comp ihill_rep[6]
   [sln] generate vgain[7].P = (3.01029995664*LacLm)
   [sln] add-comp vgain[7]
   [sln] generate vgain[7].P = (3.01029995664*LacLm)
   [sln] conn vgain[7].P->vdadd[8].A
   [sln] generate vdadd[8].OUT = LacLp
   [sln] add-comp vdadd[8]
   [sln] route vgain[0].Z = TetRm
   [sln] route vgain[0].X = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route itov[2].K = clm
   [sln] route itov[2].X = 3.01029995664
   [sln] route vdadd[3].OUT_0 = 20
   [sln] route vdadd[3].D = 0.03010299956
   [sln] route vdadd[3].B = 0
   [sln] route ihill_rep[4].n = 2
   [sln] route ihill_rep[4].S = LacLp
   [sln] route ihill_rep[4].Vmax = 0.4995
   [sln] route ihill_rep[4].Km = 40
   [sln] route ihill_rep[5].n = 2
   [sln] route ihill_rep[5].S = TetRp
   [sln] route ihill_rep[5].Vmax = 0.4995
   [sln] route ihill_rep[5].Km = 40
   [sln] route ihill_rep[6].n = 2
   [sln] route ihill_rep[6].S = clp
   [sln] route ihill_rep[6].Vmax = 0.4995
   [sln] route ihill_rep[6].Km = 40
   [sln] route vgain[7].X = LacLm
   [sln] route vgain[7].Z = 3.01029995664
   [sln] route vdadd[8].OUT_0 = 60
   [sln] route vdadd[8].D = 0.03010299956
   [sln] route vdadd[8].B = 0
   [comp] make-comp vgain0
   [comp] make-comp vdadd1
   [comp] make-comp itov2
   [comp] make-comp vdadd3
   [comp] make-comp ihill_rep4
   [comp] make-comp ihill_rep5
   [comp] make-comp ihill_rep6
   [comp] make-comp vgain7
   [comp] make-comp vdadd8
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   change-goal-status 1391 to disabled
   change-goal-status 1392 to disabled
   change-goal-status 1393 to disabled
   change-goal-status 1394 to disabled
   change-goal-status 1396 to disabled
   change-goal-status 1397 to disabled
   change-goal-status 1398 to disabled
   change-goal-status 1399 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1451] [EXPR]vdadd[8].A<V>=(3.01029995664*LacLm)

[multi] ==== ROUTES =====
[multi] > vgain[0].Z = TetRm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[4].S = LacLp
[multi]    - connecting generates to routes.
[multi] > vgain[7].X = LacLm
[multi]    - connecting generates to routes.
[multi] > itov[2].K = clm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[6].S = clp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[5].S = TetRp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[4].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[6].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[5].n = 2
[multi]    - making an input block.
[multi] > vdadd[8].OUT_0 = 60
[multi]    - making an input block.
[multi] > vdadd[1].B = 0
[multi]    - making an input block.
[multi] > vdadd[8].B = 0
[multi]    - making an input block.
[multi] > vdadd[3].B = 0
[multi]    - making an input block.
[multi] > ihill_rep[4].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[6].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[5].Vmax = 0.4995
[multi]    - making an input block.
[multi] > vdadd[1].OUT_0 = 40
[multi]    - making an input block.
[multi] > ihill_rep[4].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[6].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[5].Km = 40
[multi]    - making an input block.
[multi] > vgain[0].X = 3.01029995664
[multi]    - making an input block.
[multi] > vgain[7].Z = 3.01029995664
[multi]    - making an input block.
[multi] > itov[2].X = 3.01029995664
[multi]    - making an input block.
[multi] > vdadd[3].OUT_0 = 20
[multi]    - making an input block.
[multi] > vdadd[1].D = 0.03010299956
[multi]    - making an input block.
[multi] > vdadd[8].D = 0.03010299956
[multi]    - making an input block.
[multi] > vdadd[3].D = 0.03010299956
[multi]    - making an input block.
[multi] ==== GENERATES =====
[multi] > vdadd[8].OUT = LacLp
[multi]    - making an output block.
[multi] > vdadd[3].OUT = clp
[multi]    - making an output block.
[multi] > vdadd[1].OUT = TetRp
[multi]    - making an output block.
[multi] > ihill_rep[4].REP = TRTetR
[multi] > ihill_rep[6].REP = TRLacL
[multi] > ihill_rep[5].REP = TRclp
[multi] > itov[2].Y = (3.01029995664*clm)
[multi] > itov[2].Y = (3.01029995664*clm)
[multi] > vgain[7].P = (3.01029995664*LacLm)
[multi] > vgain[7].P = (3.01029995664*LacLm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] --> Number of options 27
[multi] --> Number of nodes 1
[multi] ======= Partial (Root) Steps 219 =======
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   remove-goal [1451] [EXPR]vdadd[8].A<V>=(3.01029995664*LacLm)
   remove-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   [comp] vgain[0] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[0] cfg-in Z=TetRm
   [comp] vgain[0] cfg-in X=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] itov[2] cfg-in Y=(3.01029995664*clm)
   [comp] itov[2] cfg-in K=clm
   [comp] itov[2] cfg-in X=3.01029995664
   [comp] vdadd[3] cfg-in OUT_0=20
   [comp] vdadd[3] cfg-in OUT=clp
   [comp] vdadd[3] cfg-param BSW=1
   [comp] vdadd[3] cfg-param DSW=1
   [comp] vdadd[3] cfg-in D=0.03010299956
   [comp] vdadd[3] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[3] cfg-in B=0
   [comp] ihill_rep[4] cfg-in REP=TRTetR
   [comp] ihill_rep[4] cfg-in n=2
   [comp] ihill_rep[4] cfg-in S=LacLp
   [comp] ihill_rep[4] cfg-in Vmax=0.4995
   [comp] ihill_rep[4] cfg-in Km=40
   [comp] ihill_rep[5] cfg-in REP=TRclp
   [comp] ihill_rep[5] cfg-in n=2
   [comp] ihill_rep[5] cfg-in S=TetRp
   [comp] ihill_rep[5] cfg-in Vmax=0.4995
   [comp] ihill_rep[5] cfg-in Km=40
   [comp] ihill_rep[6] cfg-in REP=TRLacL
   [comp] ihill_rep[6] cfg-in n=2
   [comp] ihill_rep[6] cfg-in S=clp
   [comp] ihill_rep[6] cfg-in Vmax=0.4995
   [comp] ihill_rep[6] cfg-in Km=40
   [comp] vgain[7] cfg-in P=(3.01029995664*LacLm)
   [comp] vgain[7] cfg-in X=LacLm
   [comp] vgain[7] cfg-in Z=3.01029995664
   [comp] vdadd[8] cfg-in OUT_0=60
   [comp] vdadd[8] cfg-in OUT=LacLp
   [comp] vdadd[8] cfg-param BSW=1
   [comp] vdadd[8] cfg-param DSW=1
   [comp] vdadd[8] cfg-in D=0.03010299956
   [comp] vdadd[8] cfg-in A=(3.01029995664*LacLm)
   [comp] vdadd[8] cfg-in B=0
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[0]
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] conn vgain[0].P->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] add-comp itov[2]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] conn itov[2].Y->vdadd[3].A
   [sln] generate vdadd[3].OUT = clp
   [sln] add-comp vdadd[3]
   [sln] generate ihill_rep[4].REP = TRTetR
   [sln] add-comp ihill_rep[4]
   [sln] generate ihill_rep[5].REP = TRclp
   [sln] add-comp ihill_rep[5]
   [sln] generate ihill_rep[6].REP = TRLacL
   [sln] add-comp ihill_rep[6]
   [sln] generate vgain[7].P = (3.01029995664*LacLm)
   [sln] add-comp vgain[7]
   [sln] generate vgain[7].P = (3.01029995664*LacLm)
   [sln] conn vgain[7].P->vdadd[8].A
   [sln] generate vdadd[8].OUT = LacLp
   [sln] add-comp vdadd[8]
   [sln] route vgain[0].Z = TetRm
   [sln] route vgain[0].X = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route itov[2].K = clm
   [sln] route itov[2].X = 3.01029995664
   [sln] route vdadd[3].OUT_0 = 20
   [sln] route vdadd[3].D = 0.03010299956
   [sln] route vdadd[3].B = 0
   [sln] route ihill_rep[4].n = 2
   [sln] route ihill_rep[4].S = LacLp
   [sln] route ihill_rep[4].Vmax = 0.4995
   [sln] route ihill_rep[4].Km = 40
   [sln] route ihill_rep[5].n = 2
   [sln] route ihill_rep[5].S = TetRp
   [sln] route ihill_rep[5].Vmax = 0.4995
   [sln] route ihill_rep[5].Km = 40
   [sln] route ihill_rep[6].n = 2
   [sln] route ihill_rep[6].S = clp
   [sln] route ihill_rep[6].Vmax = 0.4995
   [sln] route ihill_rep[6].Km = 40
   [sln] route vgain[7].X = LacLm
   [sln] route vgain[7].Z = 3.01029995664
   [sln] route vdadd[8].OUT_0 = 60
   [sln] route vdadd[8].D = 0.03010299956
   [sln] route vdadd[8].B = 0
   [comp] make-comp vgain0
   [comp] make-comp vdadd1
   [comp] make-comp itov2
   [comp] make-comp vdadd3
   [comp] make-comp ihill_rep4
   [comp] make-comp ihill_rep5
   [comp] make-comp ihill_rep6
   [comp] make-comp vgain7
   [comp] make-comp vdadd8
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   change-goal-status 1391 to disabled
   change-goal-status 1392 to disabled
   change-goal-status 1393 to disabled
   change-goal-status 1394 to disabled
   change-goal-status 1396 to disabled
   change-goal-status 1397 to disabled
   change-goal-status 1398 to disabled
   change-goal-status 1399 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1451] [EXPR]vdadd[8].A<V>=(3.01029995664*LacLm)

[multi] ============================
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.V[0] cfg-in X=2
     [comp] input.V[0] cfg-out O=2
     [comp] input.V[1] cfg-in X=2
     [comp] input.V[1] cfg-out O=2
     [comp] input.V[2] cfg-in X=2
     [comp] input.V[2] cfg-out O=2
     [comp] input.V[3] cfg-in X=60
     [comp] input.V[3] cfg-out O=60
     [comp] input.V[4] cfg-in X=0
     [comp] input.V[4] cfg-out O=0
     [comp] input.V[5] cfg-in X=0
     [comp] input.V[5] cfg-out O=0
     [comp] input.V[6] cfg-in X=0
     [comp] input.V[6] cfg-out O=0
     [comp] input.I[0] cfg-in X=0.4995
     [comp] input.I[0] cfg-out O=0.4995
     [comp] input.I[1] cfg-in X=0.4995
     [comp] input.I[1] cfg-out O=0.4995
     [comp] input.I[2] cfg-in X=0.4995
     [comp] input.I[2] cfg-out O=0.4995
     [comp] input.V[7] cfg-in X=40
     [comp] input.V[7] cfg-out O=40
     [comp] input.I[3] cfg-in X=40
     [comp] input.I[3] cfg-out O=40
     [comp] input.I[4] cfg-in X=40
     [comp] input.I[4] cfg-out O=40
     [comp] input.I[5] cfg-in X=40
     [comp] input.I[5] cfg-out O=40
     [comp] input.V[8] cfg-in X=3.01029995664
     [comp] input.V[8] cfg-out O=3.01029995664
     [comp] input.I[6] cfg-in X=3.01029995664
     [comp] input.I[6] cfg-out O=3.01029995664
     [comp] input.I[7] cfg-in X=3.01029995664
     [comp] input.I[7] cfg-out O=3.01029995664
     [comp] input.V[9] cfg-in X=20
     [comp] input.V[9] cfg-out O=20
     [comp] input.I[8] cfg-in X=0.03010299956
     [comp] input.I[8] cfg-out O=0.03010299956
     [comp] input.I[9] cfg-in X=0.03010299956
     [comp] input.I[9] cfg-out O=0.03010299956
     [comp] input.I[10] cfg-in X=0.03010299956
     [comp] input.I[10] cfg-out O=0.03010299956
     [comp] output.V[0] cfg-in X=LacLp
     [comp] output.V[0] cfg-out O=LacLp
     [comp] output.V[1] cfg-in X=clp
     [comp] output.V[1] cfg-out O=clp
     [comp] output.V[2] cfg-in X=TetRp
     [comp] output.V[2] cfg-out O=TetRp
     [sln] rm-route ihill_rep[4].S = LacLp
     [sln] rm-route ihill_rep[6].S = clp
     [sln] rm-route ihill_rep[5].S = TetRp
     [sln] rm-route ihill_rep[4].n = 2
     [sln] add-comp input.V[0]
     [sln] generate input.V[0].O = 2
     [sln] rm-route ihill_rep[6].n = 2
     [sln] add-comp input.V[1]
     [sln] generate input.V[1].O = 2
     [sln] rm-route ihill_rep[5].n = 2
     [sln] add-comp input.V[2]
     [sln] generate input.V[2].O = 2
     [sln] rm-route vdadd[8].OUT_0 = 60
     [sln] add-comp input.V[3]
     [sln] generate input.V[3].O = 60
     [sln] rm-route vdadd[1].B = 0
     [sln] add-comp input.V[4]
     [sln] generate input.V[4].O = 0
     [sln] rm-route vdadd[8].B = 0
     [sln] add-comp input.V[5]
     [sln] generate input.V[5].O = 0
     [sln] rm-route vdadd[3].B = 0
     [sln] add-comp input.V[6]
     [sln] generate input.V[6].O = 0
     [sln] rm-route ihill_rep[4].Vmax = 0.4995
     [sln] add-comp input.I[0]
     [sln] generate input.I[0].O = 0.4995
     [sln] rm-route ihill_rep[6].Vmax = 0.4995
     [sln] add-comp input.I[1]
     [sln] generate input.I[1].O = 0.4995
     [sln] rm-route ihill_rep[5].Vmax = 0.4995
     [sln] add-comp input.I[2]
     [sln] generate input.I[2].O = 0.4995
     [sln] rm-route vdadd[1].OUT_0 = 40
     [sln] add-comp input.V[7]
     [sln] generate input.V[7].O = 40
     [sln] rm-route ihill_rep[4].Km = 40
     [sln] add-comp input.I[3]
     [sln] generate input.I[3].O = 40
     [sln] rm-route ihill_rep[6].Km = 40
     [sln] add-comp input.I[4]
     [sln] generate input.I[4].O = 40
     [sln] rm-route ihill_rep[5].Km = 40
     [sln] add-comp input.I[5]
     [sln] generate input.I[5].O = 40
     [sln] rm-route vgain[0].X = 3.01029995664
     [sln] add-comp input.V[8]
     [sln] generate input.V[8].O = 3.01029995664
     [sln] rm-route vgain[7].Z = 3.01029995664
     [sln] add-comp input.I[6]
     [sln] generate input.I[6].O = 3.01029995664
     [sln] rm-route itov[2].X = 3.01029995664
     [sln] add-comp input.I[7]
     [sln] generate input.I[7].O = 3.01029995664
     [sln] rm-route vdadd[3].OUT_0 = 20
     [sln] add-comp input.V[9]
     [sln] generate input.V[9].O = 20
     [sln] rm-route vdadd[1].D = 0.03010299956
     [sln] add-comp input.I[8]
     [sln] generate input.I[8].O = 0.03010299956
     [sln] rm-route vdadd[8].D = 0.03010299956
     [sln] add-comp input.I[9]
     [sln] generate input.I[9].O = 0.03010299956
     [sln] rm-route vdadd[3].D = 0.03010299956
     [sln] add-comp input.I[10]
     [sln] generate input.I[10].O = 0.03010299956
     [sln] add-comp output.V[0]
     [sln] generate output.V[0].O = LacLp
     [sln] add-comp output.V[1]
     [sln] generate output.V[1].O = clp
     [sln] add-comp output.V[2]
     [sln] generate output.V[2].O = TetRp
     [sln] route input.V[0].X = 2
     [sln] route input.V[1].X = 2
     [sln] route input.V[2].X = 2
     [sln] route input.V[3].X = 60
     [sln] route input.V[4].X = 0
     [sln] route input.V[5].X = 0
     [sln] route input.V[6].X = 0
     [sln] route input.I[0].X = 0.4995
     [sln] route input.I[1].X = 0.4995
     [sln] route input.I[2].X = 0.4995
     [sln] route input.V[7].X = 40
     [sln] route input.I[3].X = 40
     [sln] route input.I[4].X = 40
     [sln] route input.I[5].X = 40
     [sln] route input.V[8].X = 3.01029995664
     [sln] route input.I[6].X = 3.01029995664
     [sln] route input.I[7].X = 3.01029995664
     [sln] route input.V[9].X = 20
     [sln] route input.I[8].X = 0.03010299956
     [sln] route input.I[9].X = 0.03010299956
     [sln] route input.I[10].X = 0.03010299956
     [comp] make-comp input.V0
     [comp] make-comp input.V1
     [comp] make-comp input.V2
     [comp] make-comp input.V3
     [comp] make-comp input.V4
     [comp] make-comp input.V5
     [comp] make-comp input.V6
     [comp] make-comp input.I0
     [comp] make-comp input.I1
     [comp] make-comp input.I2
     [comp] make-comp input.V7
     [comp] make-comp input.I3
     [comp] make-comp input.I4
     [comp] make-comp input.I5
     [comp] make-comp input.V8
     [comp] make-comp input.I6
     [comp] make-comp input.I7
     [comp] make-comp input.V9
     [comp] make-comp input.I8
     [comp] make-comp input.I9
     [comp] make-comp input.I10
     [comp] make-comp output.V0
     [comp] make-comp output.V1
     [comp] make-comp output.V2
     add-goal [1583] [CONN] vdadd[8].OUT => ihill_rep[4].S (LacLp)
     add-goal [1584] [CONN] vdadd[3].OUT => ihill_rep[6].S (clp)
     add-goal [1585] [CONN] vdadd[1].OUT => ihill_rep[5].S (TetRp)
     add-goal [1586] [CONN] input.V[0].O => ihill_rep[4].n (2)
     add-goal [1587] [CONN] input.V[1].O => ihill_rep[6].n (2)
     add-goal [1588] [CONN] input.V[2].O => ihill_rep[5].n (2)
     add-goal [1589] [CONN] input.V[3].O => vdadd[8].OUT_0 (60)
     add-goal [1590] [CONN] input.V[4].O => vdadd[1].B (0)
     add-goal [1591] [CONN] input.V[5].O => vdadd[8].B (0)
     add-goal [1592] [CONN] input.V[6].O => vdadd[3].B (0)
     add-goal [1593] [CONN] input.I[0].O => ihill_rep[4].Vmax (0.4995)
     add-goal [1594] [CONN] input.I[1].O => ihill_rep[6].Vmax (0.4995)
     add-goal [1595] [CONN] input.I[2].O => ihill_rep[5].Vmax (0.4995)
     add-goal [1596] [CONN] input.V[7].O => vdadd[1].OUT_0 (40)
     add-goal [1597] [CONN] input.I[3].O => ihill_rep[4].Km (40)
     add-goal [1598] [CONN] input.I[4].O => ihill_rep[6].Km (40)
     add-goal [1599] [CONN] input.I[5].O => ihill_rep[5].Km (40)
     add-goal [1600] [CONN] input.V[8].O => vgain[0].X (3.01029995664)
     add-goal [1601] [CONN] input.I[6].O => vgain[7].Z (3.01029995664)
     add-goal [1602] [CONN] input.I[7].O => itov[2].X (3.01029995664)
     add-goal [1603] [CONN] input.V[9].O => vdadd[3].OUT_0 (20)
     add-goal [1604] [CONN] input.I[8].O => vdadd[1].D (0.03010299956)
     add-goal [1605] [CONN] input.I[9].O => vdadd[8].D (0.03010299956)
     add-goal [1606] [CONN] input.I[10].O => vdadd[3].D (0.03010299956)
     add-goal [1607] [CONN] vdadd[8].OUT => output.V[0].X (LacLp)
     add-goal [1608] [CONN] vdadd[3].OUT => output.V[1].X (clp)
     add-goal [1609] [CONN] vdadd[1].OUT => output.V[2].X (TetRp)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1606] [CONN] input.I[10].O => vdadd[3].D (0.03010299956)
[1586] [CONN] input.V[0].O => ihill_rep[4].n (2)
[1587] [CONN] input.V[1].O => ihill_rep[6].n (2)
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1598] [CONN] input.I[4].O => ihill_rep[6].Km (40)
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1605] [CONN] input.I[9].O => vdadd[8].D (0.03010299956)
[1602] [CONN] input.I[7].O => itov[2].X (3.01029995664)
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1591] [CONN] input.V[5].O => vdadd[8].B (0)
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1599] [CONN] input.I[5].O => ihill_rep[5].Km (40)
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1584] [CONN] vdadd[3].OUT => ihill_rep[6].S (clp)
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1600] [CONN] input.V[8].O => vgain[0].X (3.01029995664)
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1596] [CONN] input.V[7].O => vdadd[1].OUT_0 (40)
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1601] [CONN] input.I[6].O => vgain[7].Z (3.01029995664)
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1594] [CONN] input.I[1].O => ihill_rep[6].Vmax (0.4995)
[1589] [CONN] input.V[3].O => vdadd[8].OUT_0 (60)
[1593] [CONN] input.I[0].O => ihill_rep[4].Vmax (0.4995)
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1588] [CONN] input.V[2].O => ihill_rep[5].n (2)
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1604] [CONN] input.I[8].O => vdadd[1].D (0.03010299956)
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1609] [CONN] vdadd[1].OUT => output.V[2].X (TetRp)
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1607] [CONN] vdadd[8].OUT => output.V[0].X (LacLp)
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1585] [CONN] vdadd[1].OUT => ihill_rep[5].S (TetRp)
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1597] [CONN] input.I[3].O => ihill_rep[4].Km (40)
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1608] [CONN] vdadd[3].OUT => output.V[1].X (clp)
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1592] [CONN] input.V[6].O => vdadd[3].B (0)
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1583] [CONN] vdadd[8].OUT => ihill_rep[4].S (LacLp)
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1603] [CONN] input.V[9].O => vdadd[3].OUT_0 (20)
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1595] [CONN] input.I[2].O => ihill_rep[5].Vmax (0.4995)
[1590] [CONN] input.V[4].O => vdadd[1].B (0)
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> Current Goal: [1590] [CONN] input.V[4].O => vdadd[1].B (0)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vgain.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->itov.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 3
[eqn] <<< SAT => VALID >>
[eqn] found 0 / 1
==== Goals ===
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1601] [CONN] input.I[6].O => vgain[7].Z (3.01029995664)
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> Current Goal: [1601] [CONN] input.I[6].O => vgain[7].Z (3.01029995664)
iadd.OUT || # ins: 3 / connected / I ?= I/distance=0
iadd.OUT -> true
[eqn] >>> NUMBER OF COMPATIBLE COMPONENTS  1 <<<
[eqn] new: [0] <iadd> output OUT.I
<analog>:((iadd.I{A}:+iadd.I{B}:)-iadd.I{C}:) / std=gauss ((1e-05*iadd.V{OUT}:)+0.001)
<analog> [v]=[-5.,10.] {v}->[v]=@


[eqn] ==== iadd====

[WARN][add_passthru_step.RAddInAssign] this assignment is perfect!: OUT=__tmp__
[WARN][add_passthru_step.RAddInAssign] this assignment is too complicated: C=(-1*__tmp__)
[eqn]     -> failed to convert unify steps
[eqn] ==== iadd====

[WARN][add_passthru_step.RAddInAssign] this assignment is perfect!: OUT=__tmp__
[WARN][add_passthru_step.RAddInAssign] this assignment is perfect!: A=__tmp__
[eqn]     -> converted to 12 ssteps
[eqn] ==== iadd====

[WARN][add_passthru_step.RAddInAssign] this assignment is perfect!: OUT=__tmp__
[WARN][add_passthru_step.RAddInAssign] this assignment is perfect!: B=__tmp__
[eqn]     -> converted to 12 ssteps
[eqn] [FOUND-SOLS] ===> Found <2> solutions
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vgain.Z
[eqn] -> [valid?] testing node 5
[eqn] <<< SAT => VALID >>
[eqn] found 0 / 1
==== Goals ===
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1611] [CONN] input.I[6].O => iadd[0].B (3.01029995664)
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> Current Goal: [1611] [CONN] input.I[6].O => iadd[0].B (3.01029995664)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->iadd.B
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 6
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=47

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 4
[eqn] <<< SAT => VALID >>
[eqn] [search_tree] Found enough solutions
[multi] ==== ROUTES =====
[multi] > vgain[0].Z = TetRm
[multi]    - connecting generates to routes.
[multi] > vgain[7].X = LacLm
[multi]    - connecting generates to routes.
[multi] > itov[2].K = clm
[multi]    - connecting generates to routes.
[multi] > input.V[0].X = 2
[multi]     - ignoring route to input block.
[multi] > input.V[1].X = 2
[multi]     - ignoring route to input block.
[multi] > input.V[2].X = 2
[multi]     - ignoring route to input block.
[multi] > input.V[3].X = 60
[multi]     - ignoring route to input block.
[multi] > iadd[0].C = 0
[multi]    - making an input block.
[multi] > iadd[0].A = 0
[multi]    - making an input block.
[multi] > input.V[4].X = 0
[multi]     - ignoring route to input block.
[multi] > input.V[5].X = 0
[multi]     - ignoring route to input block.
[multi] > input.V[6].X = 0
[multi]     - ignoring route to input block.
[multi] > input.I[0].X = 0.4995
[multi]     - ignoring route to input block.
[multi] > input.I[1].X = 0.4995
[multi]     - ignoring route to input block.
[multi] > input.I[2].X = 0.4995
[multi]     - ignoring route to input block.
[multi] > input.V[7].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[3].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[4].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[5].X = 40
[multi]     - ignoring route to input block.
[multi] > input.V[8].X = 3.01029995664
[multi]     - ignoring route to input block.
[multi] > input.I[6].X = 3.01029995664
[multi]     - ignoring route to input block.
[multi] > input.I[7].X = 3.01029995664
[multi]     - ignoring route to input block.
[multi] > input.V[9].X = 20
[multi]     - ignoring route to input block.
[multi] > input.I[8].X = 0.03010299956
[multi]     - ignoring route to input block.
[multi] > input.I[9].X = 0.03010299956
[multi]     - ignoring route to input block.
[multi] > input.I[10].X = 0.03010299956
[multi]     - ignoring route to input block.
[multi] ==== GENERATES =====
[multi] > vdadd[8].OUT = LacLp
[multi]     - ignoring connected output block
[multi] > output.V[0].O = LacLp
[multi]     - ignoring generate to output block.
[multi] > vdadd[3].OUT = clp
[multi]     - ignoring connected output block
[multi] > output.V[1].O = clp
[multi]     - ignoring generate to output block.
[multi] > vdadd[1].OUT = TetRp
[multi]     - ignoring connected output block
[multi] > output.V[2].O = TetRp
[multi]     - ignoring generate to output block.
[multi] > ihill_rep[4].REP = TRTetR
[multi] > ihill_rep[6].REP = TRLacL
[multi] > ihill_rep[5].REP = TRclp
[multi] > input.V[0].O = 2
[multi]     - ignoring generate to input block.
[multi] > input.V[2].O = 2
[multi]     - ignoring generate to input block.
[multi] > input.V[1].O = 2
[multi]     - ignoring generate to input block.
[multi] > input.V[3].O = 60
[multi]     - ignoring generate to input block.
[multi] > input.V[4].O = 0
[multi]     - ignoring generate to input block.
[multi] > input.V[6].O = 0
[multi]     - ignoring generate to input block.
[multi] > input.V[5].O = 0
[multi]     - ignoring generate to input block.
[multi] > input.I[0].O = 0.4995
[multi]     - ignoring generate to input block.
[multi] > input.I[2].O = 0.4995
[multi]     - ignoring generate to input block.
[multi] > input.I[1].O = 0.4995
[multi]     - ignoring generate to input block.
[multi] > input.V[7].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.I[3].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.I[5].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.I[4].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.V[8].O = 3.01029995664
[multi]     - ignoring generate to input block.
[multi] > input.I[7].O = 3.01029995664
[multi]     - ignoring generate to input block.
[multi] > input.I[6].O = 3.01029995664
[multi]     - ignoring generate to input block.
[multi] > input.V[9].O = 20
[multi]     - ignoring generate to input block.
[multi] > input.I[8].O = 0.03010299956
[multi]     - ignoring generate to input block.
[multi] > input.I[10].O = 0.03010299956
[multi]     - ignoring generate to input block.
[multi] > input.I[9].O = 0.03010299956
[multi]     - ignoring generate to input block.
[multi] > itov[2].Y = (3.01029995664*clm)
[multi] > itov[2].Y = (3.01029995664*clm)
[multi] > vgain[7].P = (3.01029995664*LacLm)
[multi] > vgain[7].P = (3.01029995664*LacLm)
[multi] > iadd[0].OUT = 3.01029995664
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] --> Number of options 2
[multi] --> Number of nodes 1
[multi] ======= New Path =======
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.I[11] cfg-in X=0
     [comp] input.I[11] cfg-out O=0
     [comp] input.I[12] cfg-in X=0
     [comp] input.I[12] cfg-out O=0
     [sln] rm-route iadd[0].C = 0
     [sln] add-comp input.I[11]
     [sln] generate input.I[11].O = 0
     [sln] rm-route iadd[0].A = 0
     [sln] add-comp input.I[12]
     [sln] generate input.I[12].O = 0
     [sln] route input.I[11].X = 0
     [sln] route input.I[12].X = 0
     [comp] make-comp input.I11
     [comp] make-comp input.I12
     add-goal [1612] [CONN] input.I[11].O => iadd[0].C (0)
     add-goal [1613] [CONN] input.I[12].O => iadd[0].A (0)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1610] [CONN] input.I[6].O => iadd[0].A (3.01029995664)
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> Current Goal: [1610] [CONN] input.I[6].O => iadd[0].A (3.01029995664)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->iadd.A
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 8
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=48

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 7
[eqn] <<< SAT => VALID >>
[eqn] [search_tree] Found enough solutions
[multi] ==== ROUTES =====
[multi] > vgain[0].Z = TetRm
[multi]    - connecting generates to routes.
[multi] > vgain[7].X = LacLm
[multi]    - connecting generates to routes.
[multi] > itov[2].K = clm
[multi]    - connecting generates to routes.
[multi] > input.V[0].X = 2
[multi]     - ignoring route to input block.
[multi] > input.V[1].X = 2
[multi]     - ignoring route to input block.
[multi] > input.V[2].X = 2
[multi]     - ignoring route to input block.
[multi] > input.V[3].X = 60
[multi]     - ignoring route to input block.
[multi] > iadd[0].C = 0
[multi]    - making an input block.
[multi] > iadd[0].B = 0
[multi]    - making an input block.
[multi] > input.V[4].X = 0
[multi]     - ignoring route to input block.
[multi] > input.V[5].X = 0
[multi]     - ignoring route to input block.
[multi] > input.V[6].X = 0
[multi]     - ignoring route to input block.
[multi] > input.I[0].X = 0.4995
[multi]     - ignoring route to input block.
[multi] > input.I[1].X = 0.4995
[multi]     - ignoring route to input block.
[multi] > input.I[2].X = 0.4995
[multi]     - ignoring route to input block.
[multi] > input.V[7].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[3].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[4].X = 40
[multi]     - ignoring route to input block.
[multi] > input.I[5].X = 40
[multi]     - ignoring route to input block.
[multi] > input.V[8].X = 3.01029995664
[multi]     - ignoring route to input block.
[multi] > input.I[6].X = 3.01029995664
[multi]     - ignoring route to input block.
[multi] > input.I[7].X = 3.01029995664
[multi]     - ignoring route to input block.
[multi] > input.V[9].X = 20
[multi]     - ignoring route to input block.
[multi] > input.I[8].X = 0.03010299956
[multi]     - ignoring route to input block.
[multi] > input.I[9].X = 0.03010299956
[multi]     - ignoring route to input block.
[multi] > input.I[10].X = 0.03010299956
[multi]     - ignoring route to input block.
[multi] ==== GENERATES =====
[multi] > vdadd[8].OUT = LacLp
[multi]     - ignoring connected output block
[multi] > output.V[0].O = LacLp
[multi]     - ignoring generate to output block.
[multi] > vdadd[3].OUT = clp
[multi]     - ignoring connected output block
[multi] > output.V[1].O = clp
[multi]     - ignoring generate to output block.
[multi] > vdadd[1].OUT = TetRp
[multi]     - ignoring connected output block
[multi] > output.V[2].O = TetRp
[multi]     - ignoring generate to output block.
[multi] > ihill_rep[4].REP = TRTetR
[multi] > ihill_rep[6].REP = TRLacL
[multi] > ihill_rep[5].REP = TRclp
[multi] > input.V[0].O = 2
[multi]     - ignoring generate to input block.
[multi] > input.V[2].O = 2
[multi]     - ignoring generate to input block.
[multi] > input.V[1].O = 2
[multi]     - ignoring generate to input block.
[multi] > input.V[3].O = 60
[multi]     - ignoring generate to input block.
[multi] > input.V[4].O = 0
[multi]     - ignoring generate to input block.
[multi] > input.V[6].O = 0
[multi]     - ignoring generate to input block.
[multi] > input.V[5].O = 0
[multi]     - ignoring generate to input block.
[multi] > input.I[0].O = 0.4995
[multi]     - ignoring generate to input block.
[multi] > input.I[2].O = 0.4995
[multi]     - ignoring generate to input block.
[multi] > input.I[1].O = 0.4995
[multi]     - ignoring generate to input block.
[multi] > input.V[7].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.I[3].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.I[5].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.I[4].O = 40
[multi]     - ignoring generate to input block.
[multi] > input.V[8].O = 3.01029995664
[multi]     - ignoring generate to input block.
[multi] > input.I[7].O = 3.01029995664
[multi]     - ignoring generate to input block.
[multi] > input.I[6].O = 3.01029995664
[multi]     - ignoring generate to input block.
[multi] > input.V[9].O = 20
[multi]     - ignoring generate to input block.
[multi] > input.I[8].O = 0.03010299956
[multi]     - ignoring generate to input block.
[multi] > input.I[10].O = 0.03010299956
[multi]     - ignoring generate to input block.
[multi] > input.I[9].O = 0.03010299956
[multi]     - ignoring generate to input block.
[multi] > itov[2].Y = (3.01029995664*clm)
[multi] > itov[2].Y = (3.01029995664*clm)
[multi] > vgain[7].P = (3.01029995664*LacLm)
[multi] > vgain[7].P = (3.01029995664*LacLm)
[multi] > iadd[0].OUT = 3.01029995664
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] --> Number of options 2
[multi] --> Number of nodes 1
[multi] ======= New Path =======
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.I[13] cfg-in X=0
     [comp] input.I[13] cfg-out O=0
     [comp] input.I[14] cfg-in X=0
     [comp] input.I[14] cfg-out O=0
     [sln] rm-route iadd[0].C = 0
     [sln] add-comp input.I[13]
     [sln] generate input.I[13].O = 0
     [sln] rm-route iadd[0].B = 0
     [sln] add-comp input.I[14]
     [sln] generate input.I[14].O = 0
     [sln] route input.I[13].X = 0
     [sln] route input.I[14].X = 0
     [comp] make-comp input.I13
     [comp] make-comp input.I14
     add-goal [1614] [CONN] input.I[13].O => iadd[0].C (0)
     add-goal [1615] [CONN] input.I[14].O => iadd[0].B (0)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1614] [CONN] input.I[13].O => iadd[0].C (0)
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1615] [CONN] input.I[14].O => iadd[0].B (0)
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> Current Goal: [1615] [CONN] input.I[14].O => iadd[0].B (0)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->iadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->iadd.C
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 10
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=49

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 7
[eqn] <<< SAT => VALID >>
[eqn] [search_tree] Found enough solutions
[multi]   >> Found # Global Solutions: 1/1
[multi] >>>SOLUTION IS UNFINISHED <<<
[multi]  > Added Local Solution
[multi]  > Finding Global Solution
[multi] found # steps: 43
[multi] found # steps: 43
[multi] found # steps: 43
[multi] found # steps: 30
[multi] found # steps: 30
[multi] found # steps: 30
[multi] # partial ids = 6
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1451] [EXPR]vdadd[5].A<V>=(3.01029995664*LacLm)
   remove-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] vgain[0] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[0] cfg-in Z=TetRm
   [comp] vgain[0] cfg-in X=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] itov[2] cfg-in Y=(3.01029995664*clm)
   [comp] itov[2] cfg-in K=clm
   [comp] itov[2] cfg-in X=3.01029995664
   [comp] vdadd[3] cfg-in OUT_0=20
   [comp] vdadd[3] cfg-in OUT=clp
   [comp] vdadd[3] cfg-param BSW=1
   [comp] vdadd[3] cfg-param DSW=1
   [comp] vdadd[3] cfg-in D=0.03010299956
   [comp] vdadd[3] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[3] cfg-in B=0
   [comp] itov[4] cfg-in Y=(3.01029995664*LacLm)
   [comp] itov[4] cfg-in K=LacLm
   [comp] itov[4] cfg-in X=3.01029995664
   [comp] vdadd[5] cfg-in OUT_0=60
   [comp] vdadd[5] cfg-in OUT=LacLp
   [comp] vdadd[5] cfg-param BSW=1
   [comp] vdadd[5] cfg-param DSW=1
   [comp] vdadd[5] cfg-in D=0.03010299956
   [comp] vdadd[5] cfg-in A=(3.01029995664*LacLm)
   [comp] vdadd[5] cfg-in B=0
   [comp] ihill_rep[6] cfg-in REP=TRTetR
   [comp] ihill_rep[6] cfg-in n=2
   [comp] ihill_rep[6] cfg-in S=LacLp
   [comp] ihill_rep[6] cfg-in Vmax=0.4995
   [comp] ihill_rep[6] cfg-in Km=40
   [comp] ihill_rep[7] cfg-in REP=TRclp
   [comp] ihill_rep[7] cfg-in n=2
   [comp] ihill_rep[7] cfg-in S=TetRp
   [comp] ihill_rep[7] cfg-in Vmax=0.4995
   [comp] ihill_rep[7] cfg-in Km=40
   [comp] ihill_rep[8] cfg-in REP=TRLacL
   [comp] ihill_rep[8] cfg-in n=2
   [comp] ihill_rep[8] cfg-in S=clp
   [comp] ihill_rep[8] cfg-in Vmax=0.4995
   [comp] ihill_rep[8] cfg-in Km=40
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[0]
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] conn vgain[0].P->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] add-comp itov[2]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] conn itov[2].Y->vdadd[3].A
   [sln] generate vdadd[3].OUT = clp
   [sln] add-comp vdadd[3]
   [sln] generate itov[4].Y = (3.01029995664*LacLm)
   [sln] add-comp itov[4]
   [sln] generate itov[4].Y = (3.01029995664*LacLm)
   [sln] conn itov[4].Y->vdadd[5].A
   [sln] generate vdadd[5].OUT = LacLp
   [sln] add-comp vdadd[5]
   [sln] generate ihill_rep[6].REP = TRTetR
   [sln] add-comp ihill_rep[6]
   [sln] generate ihill_rep[7].REP = TRclp
   [sln] add-comp ihill_rep[7]
   [sln] generate ihill_rep[8].REP = TRLacL
   [sln] add-comp ihill_rep[8]
   [sln] route vgain[0].Z = TetRm
   [sln] route vgain[0].X = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route itov[2].K = clm
   [sln] route itov[2].X = 3.01029995664
   [sln] route vdadd[3].OUT_0 = 20
   [sln] route vdadd[3].D = 0.03010299956
   [sln] route vdadd[3].B = 0
   [sln] route itov[4].K = LacLm
   [sln] route itov[4].X = 3.01029995664
   [sln] route vdadd[5].OUT_0 = 60
   [sln] route vdadd[5].D = 0.03010299956
   [sln] route vdadd[5].B = 0
   [sln] route ihill_rep[6].n = 2
   [sln] route ihill_rep[6].S = LacLp
   [sln] route ihill_rep[6].Vmax = 0.4995
   [sln] route ihill_rep[6].Km = 40
   [sln] route ihill_rep[7].n = 2
   [sln] route ihill_rep[7].S = TetRp
   [sln] route ihill_rep[7].Vmax = 0.4995
   [sln] route ihill_rep[7].Km = 40
   [sln] route ihill_rep[8].n = 2
   [sln] route ihill_rep[8].S = clp
   [sln] route ihill_rep[8].Vmax = 0.4995
   [sln] route ihill_rep[8].Km = 40
   [comp] make-comp vgain0
   [comp] make-comp vdadd1
   [comp] make-comp itov2
   [comp] make-comp vdadd3
   [comp] make-comp itov4
   [comp] make-comp vdadd5
   [comp] make-comp ihill_rep6
   [comp] make-comp ihill_rep7
   [comp] make-comp ihill_rep8
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 1391 to disabled
   change-goal-status 1392 to disabled
   change-goal-status 1393 to disabled
   change-goal-status 1394 to disabled
   change-goal-status 1396 to disabled
   change-goal-status 1397 to disabled
   change-goal-status 1398 to disabled
   change-goal-status 1399 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   add-goal [1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1451] [EXPR]vdadd[5].A<V>=(3.01029995664*LacLm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ==== ROUTES =====
[multi] > vgain[0].Z = TetRm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[6].S = LacLp
[multi]    - connecting generates to routes.
[multi] > itov[4].K = LacLm
[multi]    - connecting generates to routes.
[multi] > itov[2].K = clm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[8].S = clp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[7].S = TetRp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[6].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[8].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[7].n = 2
[multi]    - making an input block.
[multi] > vdadd[5].OUT_0 = 60
[multi]    - making an input block.
[multi] > vdadd[1].B = 0
[multi]    - making an input block.
[multi] > vdadd[5].B = 0
[multi]    - making an input block.
[multi] > vdadd[3].B = 0
[multi]    - making an input block.
[multi] > ihill_rep[6].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[8].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[7].Vmax = 0.4995
[multi]    - making an input block.
[multi] > vdadd[1].OUT_0 = 40
[multi]    - making an input block.
[multi] > ihill_rep[6].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[8].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[7].Km = 40
[multi]    - making an input block.
[multi] > vgain[0].X = 3.01029995664
[multi]    - making an input block.
[multi] > itov[4].X = 3.01029995664
[multi]    - making an input block.
[multi] > itov[2].X = 3.01029995664
[multi]    - making an input block.
[multi] > vdadd[3].OUT_0 = 20
[multi]    - making an input block.
[multi] > vdadd[1].D = 0.03010299956
[multi]    - making an input block.
[multi] > vdadd[5].D = 0.03010299956
[multi]    - making an input block.
[multi] > vdadd[3].D = 0.03010299956
[multi]    - making an input block.
[multi] ==== GENERATES =====
[multi] > vdadd[5].OUT = LacLp
[multi]    - making an output block.
[multi] > vdadd[3].OUT = clp
[multi]    - making an output block.
[multi] > vdadd[1].OUT = TetRp
[multi]    - making an output block.
[multi] > ihill_rep[6].REP = TRTetR
[multi] > ihill_rep[8].REP = TRLacL
[multi] > ihill_rep[7].REP = TRclp
[multi] > itov[2].Y = (3.01029995664*clm)
[multi] > itov[2].Y = (3.01029995664*clm)
[multi] > itov[4].Y = (3.01029995664*LacLm)
[multi] > itov[4].Y = (3.01029995664*LacLm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] --> Number of options 27
[multi] --> Number of nodes 1
[multi] ======= Partial (Root) Steps 219 =======
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1451] [EXPR]vdadd[5].A<V>=(3.01029995664*LacLm)
   remove-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] vgain[0] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[0] cfg-in Z=TetRm
   [comp] vgain[0] cfg-in X=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] itov[2] cfg-in Y=(3.01029995664*clm)
   [comp] itov[2] cfg-in K=clm
   [comp] itov[2] cfg-in X=3.01029995664
   [comp] vdadd[3] cfg-in OUT_0=20
   [comp] vdadd[3] cfg-in OUT=clp
   [comp] vdadd[3] cfg-param BSW=1
   [comp] vdadd[3] cfg-param DSW=1
   [comp] vdadd[3] cfg-in D=0.03010299956
   [comp] vdadd[3] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[3] cfg-in B=0
   [comp] itov[4] cfg-in Y=(3.01029995664*LacLm)
   [comp] itov[4] cfg-in K=LacLm
   [comp] itov[4] cfg-in X=3.01029995664
   [comp] vdadd[5] cfg-in OUT_0=60
   [comp] vdadd[5] cfg-in OUT=LacLp
   [comp] vdadd[5] cfg-param BSW=1
   [comp] vdadd[5] cfg-param DSW=1
   [comp] vdadd[5] cfg-in D=0.03010299956
   [comp] vdadd[5] cfg-in A=(3.01029995664*LacLm)
   [comp] vdadd[5] cfg-in B=0
   [comp] ihill_rep[6] cfg-in REP=TRTetR
   [comp] ihill_rep[6] cfg-in n=2
   [comp] ihill_rep[6] cfg-in S=LacLp
   [comp] ihill_rep[6] cfg-in Vmax=0.4995
   [comp] ihill_rep[6] cfg-in Km=40
   [comp] ihill_rep[7] cfg-in REP=TRclp
   [comp] ihill_rep[7] cfg-in n=2
   [comp] ihill_rep[7] cfg-in S=TetRp
   [comp] ihill_rep[7] cfg-in Vmax=0.4995
   [comp] ihill_rep[7] cfg-in Km=40
   [comp] ihill_rep[8] cfg-in REP=TRLacL
   [comp] ihill_rep[8] cfg-in n=2
   [comp] ihill_rep[8] cfg-in S=clp
   [comp] ihill_rep[8] cfg-in Vmax=0.4995
   [comp] ihill_rep[8] cfg-in Km=40
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[0]
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] conn vgain[0].P->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] add-comp itov[2]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] conn itov[2].Y->vdadd[3].A
   [sln] generate vdadd[3].OUT = clp
   [sln] add-comp vdadd[3]
   [sln] generate itov[4].Y = (3.01029995664*LacLm)
   [sln] add-comp itov[4]
   [sln] generate itov[4].Y = (3.01029995664*LacLm)
   [sln] conn itov[4].Y->vdadd[5].A
   [sln] generate vdadd[5].OUT = LacLp
   [sln] add-comp vdadd[5]
   [sln] generate ihill_rep[6].REP = TRTetR
   [sln] add-comp ihill_rep[6]
   [sln] generate ihill_rep[7].REP = TRclp
   [sln] add-comp ihill_rep[7]
   [sln] generate ihill_rep[8].REP = TRLacL
   [sln] add-comp ihill_rep[8]
   [sln] route vgain[0].Z = TetRm
   [sln] route vgain[0].X = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route itov[2].K = clm
   [sln] route itov[2].X = 3.01029995664
   [sln] route vdadd[3].OUT_0 = 20
   [sln] route vdadd[3].D = 0.03010299956
   [sln] route vdadd[3].B = 0
   [sln] route itov[4].K = LacLm
   [sln] route itov[4].X = 3.01029995664
   [sln] route vdadd[5].OUT_0 = 60
   [sln] route vdadd[5].D = 0.03010299956
   [sln] route vdadd[5].B = 0
   [sln] route ihill_rep[6].n = 2
   [sln] route ihill_rep[6].S = LacLp
   [sln] route ihill_rep[6].Vmax = 0.4995
   [sln] route ihill_rep[6].Km = 40
   [sln] route ihill_rep[7].n = 2
   [sln] route ihill_rep[7].S = TetRp
   [sln] route ihill_rep[7].Vmax = 0.4995
   [sln] route ihill_rep[7].Km = 40
   [sln] route ihill_rep[8].n = 2
   [sln] route ihill_rep[8].S = clp
   [sln] route ihill_rep[8].Vmax = 0.4995
   [sln] route ihill_rep[8].Km = 40
   [comp] make-comp vgain0
   [comp] make-comp vdadd1
   [comp] make-comp itov2
   [comp] make-comp vdadd3
   [comp] make-comp itov4
   [comp] make-comp vdadd5
   [comp] make-comp ihill_rep6
   [comp] make-comp ihill_rep7
   [comp] make-comp ihill_rep8
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 1391 to disabled
   change-goal-status 1392 to disabled
   change-goal-status 1393 to disabled
   change-goal-status 1394 to disabled
   change-goal-status 1396 to disabled
   change-goal-status 1397 to disabled
   change-goal-status 1398 to disabled
   change-goal-status 1399 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   add-goal [1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1451] [EXPR]vdadd[5].A<V>=(3.01029995664*LacLm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ============================
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.V[0] cfg-in X=2
     [comp] input.V[0] cfg-out O=2
     [comp] input.V[1] cfg-in X=2
     [comp] input.V[1] cfg-out O=2
     [comp] input.V[2] cfg-in X=2
     [comp] input.V[2] cfg-out O=2
     [comp] input.V[3] cfg-in X=60
     [comp] input.V[3] cfg-out O=60
     [comp] input.V[4] cfg-in X=0
     [comp] input.V[4] cfg-out O=0
     [comp] input.V[5] cfg-in X=0
     [comp] input.V[5] cfg-out O=0
     [comp] input.V[6] cfg-in X=0
     [comp] input.V[6] cfg-out O=0
     [comp] input.I[0] cfg-in X=0.4995
     [comp] input.I[0] cfg-out O=0.4995
     [comp] input.I[1] cfg-in X=0.4995
     [comp] input.I[1] cfg-out O=0.4995
     [comp] input.I[2] cfg-in X=0.4995
     [comp] input.I[2] cfg-out O=0.4995
     [comp] input.V[7] cfg-in X=40
     [comp] input.V[7] cfg-out O=40
     [comp] input.I[3] cfg-in X=40
     [comp] input.I[3] cfg-out O=40
     [comp] input.I[4] cfg-in X=40
     [comp] input.I[4] cfg-out O=40
     [comp] input.I[5] cfg-in X=40
     [comp] input.I[5] cfg-out O=40
     [comp] input.V[8] cfg-in X=3.01029995664
     [comp] input.V[8] cfg-out O=3.01029995664
     [comp] input.I[6] cfg-in X=3.01029995664
     [comp] input.I[6] cfg-out O=3.01029995664
     [comp] input.I[7] cfg-in X=3.01029995664
     [comp] input.I[7] cfg-out O=3.01029995664
     [comp] input.V[9] cfg-in X=20
     [comp] input.V[9] cfg-out O=20
     [comp] input.I[8] cfg-in X=0.03010299956
     [comp] input.I[8] cfg-out O=0.03010299956
     [comp] input.I[9] cfg-in X=0.03010299956
     [comp] input.I[9] cfg-out O=0.03010299956
     [comp] input.I[10] cfg-in X=0.03010299956
     [comp] input.I[10] cfg-out O=0.03010299956
     [comp] output.V[0] cfg-in X=LacLp
     [comp] output.V[0] cfg-out O=LacLp
     [comp] output.V[1] cfg-in X=clp
     [comp] output.V[1] cfg-out O=clp
     [comp] output.V[2] cfg-in X=TetRp
     [comp] output.V[2] cfg-out O=TetRp
     [sln] rm-route ihill_rep[6].S = LacLp
     [sln] rm-route ihill_rep[8].S = clp
     [sln] rm-route ihill_rep[7].S = TetRp
     [sln] rm-route ihill_rep[6].n = 2
     [sln] add-comp input.V[0]
     [sln] generate input.V[0].O = 2
     [sln] rm-route ihill_rep[8].n = 2
     [sln] add-comp input.V[1]
     [sln] generate input.V[1].O = 2
     [sln] rm-route ihill_rep[7].n = 2
     [sln] add-comp input.V[2]
     [sln] generate input.V[2].O = 2
     [sln] rm-route vdadd[5].OUT_0 = 60
     [sln] add-comp input.V[3]
     [sln] generate input.V[3].O = 60
     [sln] rm-route vdadd[1].B = 0
     [sln] add-comp input.V[4]
     [sln] generate input.V[4].O = 0
     [sln] rm-route vdadd[5].B = 0
     [sln] add-comp input.V[5]
     [sln] generate input.V[5].O = 0
     [sln] rm-route vdadd[3].B = 0
     [sln] add-comp input.V[6]
     [sln] generate input.V[6].O = 0
     [sln] rm-route ihill_rep[6].Vmax = 0.4995
     [sln] add-comp input.I[0]
     [sln] generate input.I[0].O = 0.4995
     [sln] rm-route ihill_rep[8].Vmax = 0.4995
     [sln] add-comp input.I[1]
     [sln] generate input.I[1].O = 0.4995
     [sln] rm-route ihill_rep[7].Vmax = 0.4995
     [sln] add-comp input.I[2]
     [sln] generate input.I[2].O = 0.4995
     [sln] rm-route vdadd[1].OUT_0 = 40
     [sln] add-comp input.V[7]
     [sln] generate input.V[7].O = 40
     [sln] rm-route ihill_rep[6].Km = 40
     [sln] add-comp input.I[3]
     [sln] generate input.I[3].O = 40
     [sln] rm-route ihill_rep[8].Km = 40
     [sln] add-comp input.I[4]
     [sln] generate input.I[4].O = 40
     [sln] rm-route ihill_rep[7].Km = 40
     [sln] add-comp input.I[5]
     [sln] generate input.I[5].O = 40
     [sln] rm-route vgain[0].X = 3.01029995664
     [sln] add-comp input.V[8]
     [sln] generate input.V[8].O = 3.01029995664
     [sln] rm-route itov[4].X = 3.01029995664
     [sln] add-comp input.I[6]
     [sln] generate input.I[6].O = 3.01029995664
     [sln] rm-route itov[2].X = 3.01029995664
     [sln] add-comp input.I[7]
     [sln] generate input.I[7].O = 3.01029995664
     [sln] rm-route vdadd[3].OUT_0 = 20
     [sln] add-comp input.V[9]
     [sln] generate input.V[9].O = 20
     [sln] rm-route vdadd[1].D = 0.03010299956
     [sln] add-comp input.I[8]
     [sln] generate input.I[8].O = 0.03010299956
     [sln] rm-route vdadd[5].D = 0.03010299956
     [sln] add-comp input.I[9]
     [sln] generate input.I[9].O = 0.03010299956
     [sln] rm-route vdadd[3].D = 0.03010299956
     [sln] add-comp input.I[10]
     [sln] generate input.I[10].O = 0.03010299956
     [sln] add-comp output.V[0]
     [sln] generate output.V[0].O = LacLp
     [sln] add-comp output.V[1]
     [sln] generate output.V[1].O = clp
     [sln] add-comp output.V[2]
     [sln] generate output.V[2].O = TetRp
     [sln] route input.V[0].X = 2
     [sln] route input.V[1].X = 2
     [sln] route input.V[2].X = 2
     [sln] route input.V[3].X = 60
     [sln] route input.V[4].X = 0
     [sln] route input.V[5].X = 0
     [sln] route input.V[6].X = 0
     [sln] route input.I[0].X = 0.4995
     [sln] route input.I[1].X = 0.4995
     [sln] route input.I[2].X = 0.4995
     [sln] route input.V[7].X = 40
     [sln] route input.I[3].X = 40
     [sln] route input.I[4].X = 40
     [sln] route input.I[5].X = 40
     [sln] route input.V[8].X = 3.01029995664
     [sln] route input.I[6].X = 3.01029995664
     [sln] route input.I[7].X = 3.01029995664
     [sln] route input.V[9].X = 20
     [sln] route input.I[8].X = 0.03010299956
     [sln] route input.I[9].X = 0.03010299956
     [sln] route input.I[10].X = 0.03010299956
     [comp] make-comp input.V0
     [comp] make-comp input.V1
     [comp] make-comp input.V2
     [comp] make-comp input.V3
     [comp] make-comp input.V4
     [comp] make-comp input.V5
     [comp] make-comp input.V6
     [comp] make-comp input.I0
     [comp] make-comp input.I1
     [comp] make-comp input.I2
     [comp] make-comp input.V7
     [comp] make-comp input.I3
     [comp] make-comp input.I4
     [comp] make-comp input.I5
     [comp] make-comp input.V8
     [comp] make-comp input.I6
     [comp] make-comp input.I7
     [comp] make-comp input.V9
     [comp] make-comp input.I8
     [comp] make-comp input.I9
     [comp] make-comp input.I10
     [comp] make-comp output.V0
     [comp] make-comp output.V1
     [comp] make-comp output.V2
     add-goal [1616] [CONN] vdadd[5].OUT => ihill_rep[6].S (LacLp)
     add-goal [1617] [CONN] vdadd[3].OUT => ihill_rep[8].S (clp)
     add-goal [1618] [CONN] vdadd[1].OUT => ihill_rep[7].S (TetRp)
     add-goal [1619] [CONN] input.V[0].O => ihill_rep[6].n (2)
     add-goal [1620] [CONN] input.V[1].O => ihill_rep[8].n (2)
     add-goal [1621] [CONN] input.V[2].O => ihill_rep[7].n (2)
     add-goal [1622] [CONN] input.V[3].O => vdadd[5].OUT_0 (60)
     add-goal [1623] [CONN] input.V[4].O => vdadd[1].B (0)
     add-goal [1624] [CONN] input.V[5].O => vdadd[5].B (0)
     add-goal [1625] [CONN] input.V[6].O => vdadd[3].B (0)
     add-goal [1626] [CONN] input.I[0].O => ihill_rep[6].Vmax (0.4995)
     add-goal [1627] [CONN] input.I[1].O => ihill_rep[8].Vmax (0.4995)
     add-goal [1628] [CONN] input.I[2].O => ihill_rep[7].Vmax (0.4995)
     add-goal [1629] [CONN] input.V[7].O => vdadd[1].OUT_0 (40)
     add-goal [1630] [CONN] input.I[3].O => ihill_rep[6].Km (40)
     add-goal [1631] [CONN] input.I[4].O => ihill_rep[8].Km (40)
     add-goal [1632] [CONN] input.I[5].O => ihill_rep[7].Km (40)
     add-goal [1633] [CONN] input.V[8].O => vgain[0].X (3.01029995664)
     add-goal [1634] [CONN] input.I[6].O => itov[4].X (3.01029995664)
     add-goal [1635] [CONN] input.I[7].O => itov[2].X (3.01029995664)
     add-goal [1636] [CONN] input.V[9].O => vdadd[3].OUT_0 (20)
     add-goal [1637] [CONN] input.I[8].O => vdadd[1].D (0.03010299956)
     add-goal [1638] [CONN] input.I[9].O => vdadd[5].D (0.03010299956)
     add-goal [1639] [CONN] input.I[10].O => vdadd[3].D (0.03010299956)
     add-goal [1640] [CONN] vdadd[5].OUT => output.V[0].X (LacLp)
     add-goal [1641] [CONN] vdadd[3].OUT => output.V[1].X (clp)
     add-goal [1642] [CONN] vdadd[1].OUT => output.V[2].X (TetRp)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[1622] [CONN] input.V[3].O => vdadd[5].OUT_0 (60)
[1642] [CONN] vdadd[1].OUT => output.V[2].X (TetRp)
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1629] [CONN] input.V[7].O => vdadd[1].OUT_0 (40)
[1637] [CONN] input.I[8].O => vdadd[1].D (0.03010299956)
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1628] [CONN] input.I[2].O => ihill_rep[7].Vmax (0.4995)
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1619] [CONN] input.V[0].O => ihill_rep[6].n (2)
[1639] [CONN] input.I[10].O => vdadd[3].D (0.03010299956)
[1638] [CONN] input.I[9].O => vdadd[5].D (0.03010299956)
[1621] [CONN] input.V[2].O => ihill_rep[7].n (2)
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1626] [CONN] input.I[0].O => ihill_rep[6].Vmax (0.4995)
[1625] [CONN] input.V[6].O => vdadd[3].B (0)
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1633] [CONN] input.V[8].O => vgain[0].X (3.01029995664)
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1627] [CONN] input.I[1].O => ihill_rep[8].Vmax (0.4995)
[1635] [CONN] input.I[7].O => itov[2].X (3.01029995664)
[1631] [CONN] input.I[4].O => ihill_rep[8].Km (40)
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1623] [CONN] input.V[4].O => vdadd[1].B (0)
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1630] [CONN] input.I[3].O => ihill_rep[6].Km (40)
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1634] [CONN] input.I[6].O => itov[4].X (3.01029995664)
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1641] [CONN] vdadd[3].OUT => output.V[1].X (clp)
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1617] [CONN] vdadd[3].OUT => ihill_rep[8].S (clp)
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1624] [CONN] input.V[5].O => vdadd[5].B (0)
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1620] [CONN] input.V[1].O => ihill_rep[8].n (2)
[1640] [CONN] vdadd[5].OUT => output.V[0].X (LacLp)
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1616] [CONN] vdadd[5].OUT => ihill_rep[6].S (LacLp)
[1618] [CONN] vdadd[1].OUT => ihill_rep[7].S (TetRp)
[1636] [CONN] input.V[9].O => vdadd[3].OUT_0 (20)
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1632] [CONN] input.I[5].O => ihill_rep[7].Km (40)
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> Current Goal: [1632] [CONN] input.I[5].O => ihill_rep[7].Km (40)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->itov.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->itov.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vgain.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 3
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=50

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] [TERMINATE] found 0 / 1
[eqn] [TERMINATE] could not find another node
[multi]   >> Found # Global Solutions: 1/1
[multi] >>>SOLUTION IS UNFINISHED <<<
[multi]  > Added Local Solution
[multi]  > Finding Global Solution
[multi] found # steps: 43
[multi] found # steps: 43
[multi] found # steps: 43
[multi] found # steps: 30
[multi] found # steps: 30
[multi] found # steps: 30
[multi] # partial ids = 6
[multi]    remove-goal [1451] [EXPR]vdadd[1].A<V>=(3.01029995664*LacLm)
   remove-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [893] [EXPR]vdadd[3].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1154] [EXPR]vdadd[5].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] itov[0] cfg-in Y=(3.01029995664*LacLm)
   [comp] itov[0] cfg-in X=3.01029995664
   [comp] itov[0] cfg-in K=LacLm
   [comp] vdadd[1] cfg-in OUT_0=60
   [comp] vdadd[1] cfg-in OUT=LacLp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*LacLm)
   [comp] vdadd[1] cfg-in B=0
   [comp] vgain[2] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[2] cfg-in Z=TetRm
   [comp] vgain[2] cfg-in X=3.01029995664
   [comp] vdadd[3] cfg-in OUT_0=40
   [comp] vdadd[3] cfg-in OUT=TetRp
   [comp] vdadd[3] cfg-param BSW=1
   [comp] vdadd[3] cfg-param DSW=1
   [comp] vdadd[3] cfg-in B=0
   [comp] vdadd[3] cfg-in D=0.03010299956
   [comp] vdadd[3] cfg-in A=(3.01029995664*TetRm)
   [comp] itov[4] cfg-in Y=(3.01029995664*clm)
   [comp] itov[4] cfg-in K=clm
   [comp] itov[4] cfg-in X=3.01029995664
   [comp] vdadd[5] cfg-in OUT_0=20
   [comp] vdadd[5] cfg-in OUT=clp
   [comp] vdadd[5] cfg-param BSW=1
   [comp] vdadd[5] cfg-param DSW=1
   [comp] vdadd[5] cfg-in D=0.03010299956
   [comp] vdadd[5] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[5] cfg-in B=0
   [comp] ihill_rep[6] cfg-in REP=TRTetR
   [comp] ihill_rep[6] cfg-in n=2
   [comp] ihill_rep[6] cfg-in S=LacLp
   [comp] ihill_rep[6] cfg-in Vmax=0.4995
   [comp] ihill_rep[6] cfg-in Km=40
   [comp] ihill_rep[7] cfg-in REP=TRclp
   [comp] ihill_rep[7] cfg-in n=2
   [comp] ihill_rep[7] cfg-in S=TetRp
   [comp] ihill_rep[7] cfg-in Vmax=0.4995
   [comp] ihill_rep[7] cfg-in Km=40
   [comp] ihill_rep[8] cfg-in REP=TRLacL
   [comp] ihill_rep[8] cfg-in n=2
   [comp] ihill_rep[8] cfg-in S=clp
   [comp] ihill_rep[8] cfg-in Vmax=0.4995
   [comp] ihill_rep[8] cfg-in Km=40
   [sln] generate itov[0].Y = (3.01029995664*LacLm)
   [sln] add-comp itov[0]
   [sln] generate itov[0].Y = (3.01029995664*LacLm)
   [sln] conn itov[0].Y->vdadd[1].A
   [sln] generate vdadd[1].OUT = LacLp
   [sln] add-comp vdadd[1]
   [sln] generate vgain[2].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[2]
   [sln] generate vgain[2].P = (3.01029995664*TetRm)
   [sln] conn vgain[2].P->vdadd[3].A
   [sln] generate vdadd[3].OUT = TetRp
   [sln] add-comp vdadd[3]
   [sln] generate itov[4].Y = (3.01029995664*clm)
   [sln] add-comp itov[4]
   [sln] generate itov[4].Y = (3.01029995664*clm)
   [sln] conn itov[4].Y->vdadd[5].A
   [sln] generate vdadd[5].OUT = clp
   [sln] add-comp vdadd[5]
   [sln] generate ihill_rep[6].REP = TRTetR
   [sln] add-comp ihill_rep[6]
   [sln] generate ihill_rep[7].REP = TRclp
   [sln] add-comp ihill_rep[7]
   [sln] generate ihill_rep[8].REP = TRLacL
   [sln] add-comp ihill_rep[8]
   [sln] route itov[0].X = 3.01029995664
   [sln] route itov[0].K = LacLm
   [sln] route vdadd[1].OUT_0 = 60
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route vdadd[1].B = 0
   [sln] route vgain[2].Z = TetRm
   [sln] route vgain[2].X = 3.01029995664
   [sln] route vdadd[3].OUT_0 = 40
   [sln] route vdadd[3].B = 0
   [sln] route vdadd[3].D = 0.03010299956
   [sln] route itov[4].K = clm
   [sln] route itov[4].X = 3.01029995664
   [sln] route vdadd[5].OUT_0 = 20
   [sln] route vdadd[5].D = 0.03010299956
   [sln] route vdadd[5].B = 0
   [sln] route ihill_rep[6].n = 2
   [sln] route ihill_rep[6].S = LacLp
   [sln] route ihill_rep[6].Vmax = 0.4995
   [sln] route ihill_rep[6].Km = 40
   [sln] route ihill_rep[7].n = 2
   [sln] route ihill_rep[7].S = TetRp
   [sln] route ihill_rep[7].Vmax = 0.4995
   [sln] route ihill_rep[7].Km = 40
   [sln] route ihill_rep[8].n = 2
   [sln] route ihill_rep[8].S = clp
   [sln] route ihill_rep[8].Vmax = 0.4995
   [sln] route ihill_rep[8].Km = 40
   [comp] make-comp itov0
   [comp] make-comp vdadd1
   [comp] make-comp vgain2
   [comp] make-comp vdadd3
   [comp] make-comp itov4
   [comp] make-comp vdadd5
   [comp] make-comp ihill_rep6
   [comp] make-comp ihill_rep7
   [comp] make-comp ihill_rep8
   change-goal-status 1391 to disabled
   change-goal-status 1392 to disabled
   change-goal-status 1393 to disabled
   change-goal-status 1394 to disabled
   change-goal-status 1396 to disabled
   change-goal-status 1397 to disabled
   change-goal-status 1398 to disabled
   change-goal-status 1399 to disabled
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1451] [EXPR]vdadd[1].A<V>=(3.01029995664*LacLm)
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[3].A<V>=(3.01029995664*TetRm)
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[5].A<V>=(3.01029995664*clm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ==== ROUTES =====
[multi] > vgain[2].Z = TetRm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[6].S = LacLp
[multi]    - connecting generates to routes.
[multi] > itov[0].K = LacLm
[multi]    - connecting generates to routes.
[multi] > itov[4].K = clm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[8].S = clp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[7].S = TetRp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[6].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[8].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[7].n = 2
[multi]    - making an input block.
[multi] > vdadd[1].OUT_0 = 60
[multi]    - making an input block.
[multi] > vdadd[1].B = 0
[multi]    - making an input block.
[multi] > vdadd[5].B = 0
[multi]    - making an input block.
[multi] > vdadd[3].B = 0
[multi]    - making an input block.
[multi] > ihill_rep[6].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[8].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[7].Vmax = 0.4995
[multi]    - making an input block.
[multi] > vdadd[3].OUT_0 = 40
[multi]    - making an input block.
[multi] > ihill_rep[6].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[8].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[7].Km = 40
[multi]    - making an input block.
[multi] > itov[0].X = 3.01029995664
[multi]    - making an input block.
[multi] > itov[4].X = 3.01029995664
[multi]    - making an input block.
[multi] > vgain[2].X = 3.01029995664
[multi]    - making an input block.
[multi] > vdadd[5].OUT_0 = 20
[multi]    - making an input block.
[multi] > vdadd[1].D = 0.03010299956
[multi]    - making an input block.
[multi] > vdadd[5].D = 0.03010299956
[multi]    - making an input block.
[multi] > vdadd[3].D = 0.03010299956
[multi]    - making an input block.
[multi] ==== GENERATES =====
[multi] > vdadd[1].OUT = LacLp
[multi]    - making an output block.
[multi] > vdadd[5].OUT = clp
[multi]    - making an output block.
[multi] > vdadd[3].OUT = TetRp
[multi]    - making an output block.
[multi] > ihill_rep[6].REP = TRTetR
[multi] > ihill_rep[8].REP = TRLacL
[multi] > ihill_rep[7].REP = TRclp
[multi] > itov[4].Y = (3.01029995664*clm)
[multi] > itov[4].Y = (3.01029995664*clm)
[multi] > itov[0].Y = (3.01029995664*LacLm)
[multi] > itov[0].Y = (3.01029995664*LacLm)
[multi] > vgain[2].P = (3.01029995664*TetRm)
[multi] > vgain[2].P = (3.01029995664*TetRm)
[multi] --> Number of options 27
[multi] --> Number of nodes 1
[multi] ======= Partial (Root) Steps 219 =======
[multi]    remove-goal [1451] [EXPR]vdadd[1].A<V>=(3.01029995664*LacLm)
   remove-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [893] [EXPR]vdadd[3].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1154] [EXPR]vdadd[5].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] itov[0] cfg-in Y=(3.01029995664*LacLm)
   [comp] itov[0] cfg-in X=3.01029995664
   [comp] itov[0] cfg-in K=LacLm
   [comp] vdadd[1] cfg-in OUT_0=60
   [comp] vdadd[1] cfg-in OUT=LacLp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*LacLm)
   [comp] vdadd[1] cfg-in B=0
   [comp] vgain[2] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[2] cfg-in Z=TetRm
   [comp] vgain[2] cfg-in X=3.01029995664
   [comp] vdadd[3] cfg-in OUT_0=40
   [comp] vdadd[3] cfg-in OUT=TetRp
   [comp] vdadd[3] cfg-param BSW=1
   [comp] vdadd[3] cfg-param DSW=1
   [comp] vdadd[3] cfg-in B=0
   [comp] vdadd[3] cfg-in D=0.03010299956
   [comp] vdadd[3] cfg-in A=(3.01029995664*TetRm)
   [comp] itov[4] cfg-in Y=(3.01029995664*clm)
   [comp] itov[4] cfg-in K=clm
   [comp] itov[4] cfg-in X=3.01029995664
   [comp] vdadd[5] cfg-in OUT_0=20
   [comp] vdadd[5] cfg-in OUT=clp
   [comp] vdadd[5] cfg-param BSW=1
   [comp] vdadd[5] cfg-param DSW=1
   [comp] vdadd[5] cfg-in D=0.03010299956
   [comp] vdadd[5] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[5] cfg-in B=0
   [comp] ihill_rep[6] cfg-in REP=TRTetR
   [comp] ihill_rep[6] cfg-in n=2
   [comp] ihill_rep[6] cfg-in S=LacLp
   [comp] ihill_rep[6] cfg-in Vmax=0.4995
   [comp] ihill_rep[6] cfg-in Km=40
   [comp] ihill_rep[7] cfg-in REP=TRclp
   [comp] ihill_rep[7] cfg-in n=2
   [comp] ihill_rep[7] cfg-in S=TetRp
   [comp] ihill_rep[7] cfg-in Vmax=0.4995
   [comp] ihill_rep[7] cfg-in Km=40
   [comp] ihill_rep[8] cfg-in REP=TRLacL
   [comp] ihill_rep[8] cfg-in n=2
   [comp] ihill_rep[8] cfg-in S=clp
   [comp] ihill_rep[8] cfg-in Vmax=0.4995
   [comp] ihill_rep[8] cfg-in Km=40
   [sln] generate itov[0].Y = (3.01029995664*LacLm)
   [sln] add-comp itov[0]
   [sln] generate itov[0].Y = (3.01029995664*LacLm)
   [sln] conn itov[0].Y->vdadd[1].A
   [sln] generate vdadd[1].OUT = LacLp
   [sln] add-comp vdadd[1]
   [sln] generate vgain[2].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[2]
   [sln] generate vgain[2].P = (3.01029995664*TetRm)
   [sln] conn vgain[2].P->vdadd[3].A
   [sln] generate vdadd[3].OUT = TetRp
   [sln] add-comp vdadd[3]
   [sln] generate itov[4].Y = (3.01029995664*clm)
   [sln] add-comp itov[4]
   [sln] generate itov[4].Y = (3.01029995664*clm)
   [sln] conn itov[4].Y->vdadd[5].A
   [sln] generate vdadd[5].OUT = clp
   [sln] add-comp vdadd[5]
   [sln] generate ihill_rep[6].REP = TRTetR
   [sln] add-comp ihill_rep[6]
   [sln] generate ihill_rep[7].REP = TRclp
   [sln] add-comp ihill_rep[7]
   [sln] generate ihill_rep[8].REP = TRLacL
   [sln] add-comp ihill_rep[8]
   [sln] route itov[0].X = 3.01029995664
   [sln] route itov[0].K = LacLm
   [sln] route vdadd[1].OUT_0 = 60
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route vdadd[1].B = 0
   [sln] route vgain[2].Z = TetRm
   [sln] route vgain[2].X = 3.01029995664
   [sln] route vdadd[3].OUT_0 = 40
   [sln] route vdadd[3].B = 0
   [sln] route vdadd[3].D = 0.03010299956
   [sln] route itov[4].K = clm
   [sln] route itov[4].X = 3.01029995664
   [sln] route vdadd[5].OUT_0 = 20
   [sln] route vdadd[5].D = 0.03010299956
   [sln] route vdadd[5].B = 0
   [sln] route ihill_rep[6].n = 2
   [sln] route ihill_rep[6].S = LacLp
   [sln] route ihill_rep[6].Vmax = 0.4995
   [sln] route ihill_rep[6].Km = 40
   [sln] route ihill_rep[7].n = 2
   [sln] route ihill_rep[7].S = TetRp
   [sln] route ihill_rep[7].Vmax = 0.4995
   [sln] route ihill_rep[7].Km = 40
   [sln] route ihill_rep[8].n = 2
   [sln] route ihill_rep[8].S = clp
   [sln] route ihill_rep[8].Vmax = 0.4995
   [sln] route ihill_rep[8].Km = 40
   [comp] make-comp itov0
   [comp] make-comp vdadd1
   [comp] make-comp vgain2
   [comp] make-comp vdadd3
   [comp] make-comp itov4
   [comp] make-comp vdadd5
   [comp] make-comp ihill_rep6
   [comp] make-comp ihill_rep7
   [comp] make-comp ihill_rep8
   change-goal-status 1391 to disabled
   change-goal-status 1392 to disabled
   change-goal-status 1393 to disabled
   change-goal-status 1394 to disabled
   change-goal-status 1396 to disabled
   change-goal-status 1397 to disabled
   change-goal-status 1398 to disabled
   change-goal-status 1399 to disabled
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1451] [EXPR]vdadd[1].A<V>=(3.01029995664*LacLm)
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[3].A<V>=(3.01029995664*TetRm)
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[5].A<V>=(3.01029995664*clm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ============================
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.V[0] cfg-in X=2
     [comp] input.V[0] cfg-out O=2
     [comp] input.V[1] cfg-in X=2
     [comp] input.V[1] cfg-out O=2
     [comp] input.V[2] cfg-in X=2
     [comp] input.V[2] cfg-out O=2
     [comp] input.V[3] cfg-in X=60
     [comp] input.V[3] cfg-out O=60
     [comp] input.V[4] cfg-in X=0
     [comp] input.V[4] cfg-out O=0
     [comp] input.V[5] cfg-in X=0
     [comp] input.V[5] cfg-out O=0
     [comp] input.V[6] cfg-in X=0
     [comp] input.V[6] cfg-out O=0
     [comp] input.I[0] cfg-in X=0.4995
     [comp] input.I[0] cfg-out O=0.4995
     [comp] input.I[1] cfg-in X=0.4995
     [comp] input.I[1] cfg-out O=0.4995
     [comp] input.I[2] cfg-in X=0.4995
     [comp] input.I[2] cfg-out O=0.4995
     [comp] input.V[7] cfg-in X=40
     [comp] input.V[7] cfg-out O=40
     [comp] input.I[3] cfg-in X=40
     [comp] input.I[3] cfg-out O=40
     [comp] input.I[4] cfg-in X=40
     [comp] input.I[4] cfg-out O=40
     [comp] input.I[5] cfg-in X=40
     [comp] input.I[5] cfg-out O=40
     [comp] input.I[6] cfg-in X=3.01029995664
     [comp] input.I[6] cfg-out O=3.01029995664
     [comp] input.I[7] cfg-in X=3.01029995664
     [comp] input.I[7] cfg-out O=3.01029995664
     [comp] input.V[8] cfg-in X=3.01029995664
     [comp] input.V[8] cfg-out O=3.01029995664
     [comp] input.V[9] cfg-in X=20
     [comp] input.V[9] cfg-out O=20
     [comp] input.I[8] cfg-in X=0.03010299956
     [comp] input.I[8] cfg-out O=0.03010299956
     [comp] input.I[9] cfg-in X=0.03010299956
     [comp] input.I[9] cfg-out O=0.03010299956
     [comp] input.I[10] cfg-in X=0.03010299956
     [comp] input.I[10] cfg-out O=0.03010299956
     [comp] output.V[0] cfg-in X=LacLp
     [comp] output.V[0] cfg-out O=LacLp
     [comp] output.V[1] cfg-in X=clp
     [comp] output.V[1] cfg-out O=clp
     [comp] output.V[2] cfg-in X=TetRp
     [comp] output.V[2] cfg-out O=TetRp
     [sln] rm-route ihill_rep[6].S = LacLp
     [sln] rm-route ihill_rep[8].S = clp
     [sln] rm-route ihill_rep[7].S = TetRp
     [sln] rm-route ihill_rep[6].n = 2
     [sln] add-comp input.V[0]
     [sln] generate input.V[0].O = 2
     [sln] rm-route ihill_rep[8].n = 2
     [sln] add-comp input.V[1]
     [sln] generate input.V[1].O = 2
     [sln] rm-route ihill_rep[7].n = 2
     [sln] add-comp input.V[2]
     [sln] generate input.V[2].O = 2
     [sln] rm-route vdadd[1].OUT_0 = 60
     [sln] add-comp input.V[3]
     [sln] generate input.V[3].O = 60
     [sln] rm-route vdadd[1].B = 0
     [sln] add-comp input.V[4]
     [sln] generate input.V[4].O = 0
     [sln] rm-route vdadd[5].B = 0
     [sln] add-comp input.V[5]
     [sln] generate input.V[5].O = 0
     [sln] rm-route vdadd[3].B = 0
     [sln] add-comp input.V[6]
     [sln] generate input.V[6].O = 0
     [sln] rm-route ihill_rep[6].Vmax = 0.4995
     [sln] add-comp input.I[0]
     [sln] generate input.I[0].O = 0.4995
     [sln] rm-route ihill_rep[8].Vmax = 0.4995
     [sln] add-comp input.I[1]
     [sln] generate input.I[1].O = 0.4995
     [sln] rm-route ihill_rep[7].Vmax = 0.4995
     [sln] add-comp input.I[2]
     [sln] generate input.I[2].O = 0.4995
     [sln] rm-route vdadd[3].OUT_0 = 40
     [sln] add-comp input.V[7]
     [sln] generate input.V[7].O = 40
     [sln] rm-route ihill_rep[6].Km = 40
     [sln] add-comp input.I[3]
     [sln] generate input.I[3].O = 40
     [sln] rm-route ihill_rep[8].Km = 40
     [sln] add-comp input.I[4]
     [sln] generate input.I[4].O = 40
     [sln] rm-route ihill_rep[7].Km = 40
     [sln] add-comp input.I[5]
     [sln] generate input.I[5].O = 40
     [sln] rm-route itov[0].X = 3.01029995664
     [sln] add-comp input.I[6]
     [sln] generate input.I[6].O = 3.01029995664
     [sln] rm-route itov[4].X = 3.01029995664
     [sln] add-comp input.I[7]
     [sln] generate input.I[7].O = 3.01029995664
     [sln] rm-route vgain[2].X = 3.01029995664
     [sln] add-comp input.V[8]
     [sln] generate input.V[8].O = 3.01029995664
     [sln] rm-route vdadd[5].OUT_0 = 20
     [sln] add-comp input.V[9]
     [sln] generate input.V[9].O = 20
     [sln] rm-route vdadd[1].D = 0.03010299956
     [sln] add-comp input.I[8]
     [sln] generate input.I[8].O = 0.03010299956
     [sln] rm-route vdadd[5].D = 0.03010299956
     [sln] add-comp input.I[9]
     [sln] generate input.I[9].O = 0.03010299956
     [sln] rm-route vdadd[3].D = 0.03010299956
     [sln] add-comp input.I[10]
     [sln] generate input.I[10].O = 0.03010299956
     [sln] add-comp output.V[0]
     [sln] generate output.V[0].O = LacLp
     [sln] add-comp output.V[1]
     [sln] generate output.V[1].O = clp
     [sln] add-comp output.V[2]
     [sln] generate output.V[2].O = TetRp
     [sln] route input.V[0].X = 2
     [sln] route input.V[1].X = 2
     [sln] route input.V[2].X = 2
     [sln] route input.V[3].X = 60
     [sln] route input.V[4].X = 0
     [sln] route input.V[5].X = 0
     [sln] route input.V[6].X = 0
     [sln] route input.I[0].X = 0.4995
     [sln] route input.I[1].X = 0.4995
     [sln] route input.I[2].X = 0.4995
     [sln] route input.V[7].X = 40
     [sln] route input.I[3].X = 40
     [sln] route input.I[4].X = 40
     [sln] route input.I[5].X = 40
     [sln] route input.I[6].X = 3.01029995664
     [sln] route input.I[7].X = 3.01029995664
     [sln] route input.V[8].X = 3.01029995664
     [sln] route input.V[9].X = 20
     [sln] route input.I[8].X = 0.03010299956
     [sln] route input.I[9].X = 0.03010299956
     [sln] route input.I[10].X = 0.03010299956
     [comp] make-comp input.V0
     [comp] make-comp input.V1
     [comp] make-comp input.V2
     [comp] make-comp input.V3
     [comp] make-comp input.V4
     [comp] make-comp input.V5
     [comp] make-comp input.V6
     [comp] make-comp input.I0
     [comp] make-comp input.I1
     [comp] make-comp input.I2
     [comp] make-comp input.V7
     [comp] make-comp input.I3
     [comp] make-comp input.I4
     [comp] make-comp input.I5
     [comp] make-comp input.I6
     [comp] make-comp input.I7
     [comp] make-comp input.V8
     [comp] make-comp input.V9
     [comp] make-comp input.I8
     [comp] make-comp input.I9
     [comp] make-comp input.I10
     [comp] make-comp output.V0
     [comp] make-comp output.V1
     [comp] make-comp output.V2
     add-goal [1643] [CONN] vdadd[1].OUT => ihill_rep[6].S (LacLp)
     add-goal [1644] [CONN] vdadd[5].OUT => ihill_rep[8].S (clp)
     add-goal [1645] [CONN] vdadd[3].OUT => ihill_rep[7].S (TetRp)
     add-goal [1646] [CONN] input.V[0].O => ihill_rep[6].n (2)
     add-goal [1647] [CONN] input.V[1].O => ihill_rep[8].n (2)
     add-goal [1648] [CONN] input.V[2].O => ihill_rep[7].n (2)
     add-goal [1649] [CONN] input.V[3].O => vdadd[1].OUT_0 (60)
     add-goal [1650] [CONN] input.V[4].O => vdadd[1].B (0)
     add-goal [1651] [CONN] input.V[5].O => vdadd[5].B (0)
     add-goal [1652] [CONN] input.V[6].O => vdadd[3].B (0)
     add-goal [1653] [CONN] input.I[0].O => ihill_rep[6].Vmax (0.4995)
     add-goal [1654] [CONN] input.I[1].O => ihill_rep[8].Vmax (0.4995)
     add-goal [1655] [CONN] input.I[2].O => ihill_rep[7].Vmax (0.4995)
     add-goal [1656] [CONN] input.V[7].O => vdadd[3].OUT_0 (40)
     add-goal [1657] [CONN] input.I[3].O => ihill_rep[6].Km (40)
     add-goal [1658] [CONN] input.I[4].O => ihill_rep[8].Km (40)
     add-goal [1659] [CONN] input.I[5].O => ihill_rep[7].Km (40)
     add-goal [1660] [CONN] input.I[6].O => itov[0].X (3.01029995664)
     add-goal [1661] [CONN] input.I[7].O => itov[4].X (3.01029995664)
     add-goal [1662] [CONN] input.V[8].O => vgain[2].X (3.01029995664)
     add-goal [1663] [CONN] input.V[9].O => vdadd[5].OUT_0 (20)
     add-goal [1664] [CONN] input.I[8].O => vdadd[1].D (0.03010299956)
     add-goal [1665] [CONN] input.I[9].O => vdadd[5].D (0.03010299956)
     add-goal [1666] [CONN] input.I[10].O => vdadd[3].D (0.03010299956)
     add-goal [1667] [CONN] vdadd[1].OUT => output.V[0].X (LacLp)
     add-goal [1668] [CONN] vdadd[5].OUT => output.V[1].X (clp)
     add-goal [1669] [CONN] vdadd[3].OUT => output.V[2].X (TetRp)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1648] [CONN] input.V[2].O => ihill_rep[7].n (2)
[1662] [CONN] input.V[8].O => vgain[2].X (3.01029995664)
[1667] [CONN] vdadd[1].OUT => output.V[0].X (LacLp)
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1647] [CONN] input.V[1].O => ihill_rep[8].n (2)
[1664] [CONN] input.I[8].O => vdadd[1].D (0.03010299956)
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1656] [CONN] input.V[7].O => vdadd[3].OUT_0 (40)
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1654] [CONN] input.I[1].O => ihill_rep[8].Vmax (0.4995)
[1668] [CONN] vdadd[5].OUT => output.V[1].X (clp)
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1652] [CONN] input.V[6].O => vdadd[3].B (0)
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1645] [CONN] vdadd[3].OUT => ihill_rep[7].S (TetRp)
[1661] [CONN] input.I[7].O => itov[4].X (3.01029995664)
[1655] [CONN] input.I[2].O => ihill_rep[7].Vmax (0.4995)
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1644] [CONN] vdadd[5].OUT => ihill_rep[8].S (clp)
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1660] [CONN] input.I[6].O => itov[0].X (3.01029995664)
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1649] [CONN] input.V[3].O => vdadd[1].OUT_0 (60)
[1669] [CONN] vdadd[3].OUT => output.V[2].X (TetRp)
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1658] [CONN] input.I[4].O => ihill_rep[8].Km (40)
[1643] [CONN] vdadd[1].OUT => ihill_rep[6].S (LacLp)
[1651] [CONN] input.V[5].O => vdadd[5].B (0)
[1653] [CONN] input.I[0].O => ihill_rep[6].Vmax (0.4995)
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1665] [CONN] input.I[9].O => vdadd[5].D (0.03010299956)
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1657] [CONN] input.I[3].O => ihill_rep[6].Km (40)
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1663] [CONN] input.V[9].O => vdadd[5].OUT_0 (20)
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1666] [CONN] input.I[10].O => vdadd[3].D (0.03010299956)
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1659] [CONN] input.I[5].O => ihill_rep[7].Km (40)
[1650] [CONN] input.V[4].O => vdadd[1].B (0)
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1646] [CONN] input.V[0].O => ihill_rep[6].n (2)
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}

============
>> Current Goal: [1646] [CONN] input.V[0].O => ihill_rep[6].n (2)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->itov.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->itov.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vgain.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 3
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=51

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] [TERMINATE] found 0 / 1
[eqn] [TERMINATE] could not find another node
[multi]   >> Found # Global Solutions: 1/1
[multi] >>>SOLUTION IS UNFINISHED <<<
[multi]  > Added Local Solution
[multi]  > Finding Global Solution
[multi] found # steps: 43
[multi] found # steps: 43
[multi] found # steps: 30
[multi] found # steps: 43
[multi] found # steps: 30
[multi] found # steps: 30
[multi] # partial ids = 6
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [1451] [EXPR]vdadd[6].A<V>=(3.01029995664*LacLm)
   remove-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] vgain[0] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[0] cfg-in Z=TetRm
   [comp] vgain[0] cfg-in X=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] itov[2] cfg-in Y=(3.01029995664*clm)
   [comp] itov[2] cfg-in K=clm
   [comp] itov[2] cfg-in X=3.01029995664
   [comp] vdadd[3] cfg-in OUT_0=20
   [comp] vdadd[3] cfg-in OUT=clp
   [comp] vdadd[3] cfg-param BSW=1
   [comp] vdadd[3] cfg-param DSW=1
   [comp] vdadd[3] cfg-in D=0.03010299956
   [comp] vdadd[3] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[3] cfg-in B=0
   [comp] ihill_rep[4] cfg-in REP=TRTetR
   [comp] ihill_rep[4] cfg-in n=2
   [comp] ihill_rep[4] cfg-in S=LacLp
   [comp] ihill_rep[4] cfg-in Vmax=0.4995
   [comp] ihill_rep[4] cfg-in Km=40
   [comp] itov[5] cfg-in Y=(3.01029995664*LacLm)
   [comp] itov[5] cfg-in X=LacLm
   [comp] itov[5] cfg-in K=3.01029995664
   [comp] vdadd[6] cfg-in OUT_0=60
   [comp] vdadd[6] cfg-in OUT=LacLp
   [comp] vdadd[6] cfg-param BSW=1
   [comp] vdadd[6] cfg-param DSW=1
   [comp] vdadd[6] cfg-in D=0.03010299956
   [comp] vdadd[6] cfg-in A=(3.01029995664*LacLm)
   [comp] vdadd[6] cfg-in B=0
   [comp] ihill_rep[7] cfg-in REP=TRclp
   [comp] ihill_rep[7] cfg-in n=2
   [comp] ihill_rep[7] cfg-in S=TetRp
   [comp] ihill_rep[7] cfg-in Vmax=0.4995
   [comp] ihill_rep[7] cfg-in Km=40
   [comp] ihill_rep[8] cfg-in REP=TRLacL
   [comp] ihill_rep[8] cfg-in n=2
   [comp] ihill_rep[8] cfg-in S=clp
   [comp] ihill_rep[8] cfg-in Vmax=0.4995
   [comp] ihill_rep[8] cfg-in Km=40
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[0]
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] conn vgain[0].P->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] add-comp itov[2]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] conn itov[2].Y->vdadd[3].A
   [sln] generate vdadd[3].OUT = clp
   [sln] add-comp vdadd[3]
   [sln] generate ihill_rep[4].REP = TRTetR
   [sln] add-comp ihill_rep[4]
   [sln] generate itov[5].Y = (3.01029995664*LacLm)
   [sln] add-comp itov[5]
   [sln] generate itov[5].Y = (3.01029995664*LacLm)
   [sln] conn itov[5].Y->vdadd[6].A
   [sln] generate vdadd[6].OUT = LacLp
   [sln] add-comp vdadd[6]
   [sln] generate ihill_rep[7].REP = TRclp
   [sln] add-comp ihill_rep[7]
   [sln] generate ihill_rep[8].REP = TRLacL
   [sln] add-comp ihill_rep[8]
   [sln] route vgain[0].Z = TetRm
   [sln] route vgain[0].X = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route itov[2].K = clm
   [sln] route itov[2].X = 3.01029995664
   [sln] route vdadd[3].OUT_0 = 20
   [sln] route vdadd[3].D = 0.03010299956
   [sln] route vdadd[3].B = 0
   [sln] route ihill_rep[4].n = 2
   [sln] route ihill_rep[4].S = LacLp
   [sln] route ihill_rep[4].Vmax = 0.4995
   [sln] route ihill_rep[4].Km = 40
   [sln] route itov[5].X = LacLm
   [sln] route itov[5].K = 3.01029995664
   [sln] route vdadd[6].OUT_0 = 60
   [sln] route vdadd[6].D = 0.03010299956
   [sln] route vdadd[6].B = 0
   [sln] route ihill_rep[7].n = 2
   [sln] route ihill_rep[7].S = TetRp
   [sln] route ihill_rep[7].Vmax = 0.4995
   [sln] route ihill_rep[7].Km = 40
   [sln] route ihill_rep[8].n = 2
   [sln] route ihill_rep[8].S = clp
   [sln] route ihill_rep[8].Vmax = 0.4995
   [sln] route ihill_rep[8].Km = 40
   [comp] make-comp vgain0
   [comp] make-comp vdadd1
   [comp] make-comp itov2
   [comp] make-comp vdadd3
   [comp] make-comp ihill_rep4
   [comp] make-comp itov5
   [comp] make-comp vdadd6
   [comp] make-comp ihill_rep7
   [comp] make-comp ihill_rep8
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 1391 to disabled
   change-goal-status 1392 to disabled
   change-goal-status 1393 to disabled
   change-goal-status 1394 to disabled
   change-goal-status 1396 to disabled
   change-goal-status 1397 to disabled
   change-goal-status 1398 to disabled
   change-goal-status 1399 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1451] [EXPR]vdadd[6].A<V>=(3.01029995664*LacLm)
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ==== ROUTES =====
[multi] > vgain[0].Z = TetRm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[4].S = LacLp
[multi]    - connecting generates to routes.
[multi] > itov[5].X = LacLm
[multi]    - connecting generates to routes.
[multi] > itov[2].K = clm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[8].S = clp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[7].S = TetRp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[4].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[8].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[7].n = 2
[multi]    - making an input block.
[multi] > vdadd[6].OUT_0 = 60
[multi]    - making an input block.
[multi] > vdadd[1].B = 0
[multi]    - making an input block.
[multi] > vdadd[6].B = 0
[multi]    - making an input block.
[multi] > vdadd[3].B = 0
[multi]    - making an input block.
[multi] > ihill_rep[4].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[8].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[7].Vmax = 0.4995
[multi]    - making an input block.
[multi] > vdadd[1].OUT_0 = 40
[multi]    - making an input block.
[multi] > ihill_rep[4].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[8].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[7].Km = 40
[multi]    - making an input block.
[multi] > vgain[0].X = 3.01029995664
[multi]    - making an input block.
[multi] > itov[5].K = 3.01029995664
[multi]    - making an input block.
[multi] > itov[2].X = 3.01029995664
[multi]    - making an input block.
[multi] > vdadd[3].OUT_0 = 20
[multi]    - making an input block.
[multi] > vdadd[1].D = 0.03010299956
[multi]    - making an input block.
[multi] > vdadd[6].D = 0.03010299956
[multi]    - making an input block.
[multi] > vdadd[3].D = 0.03010299956
[multi]    - making an input block.
[multi] ==== GENERATES =====
[multi] > vdadd[6].OUT = LacLp
[multi]    - making an output block.
[multi] > vdadd[3].OUT = clp
[multi]    - making an output block.
[multi] > vdadd[1].OUT = TetRp
[multi]    - making an output block.
[multi] > ihill_rep[4].REP = TRTetR
[multi] > ihill_rep[8].REP = TRLacL
[multi] > ihill_rep[7].REP = TRclp
[multi] > itov[2].Y = (3.01029995664*clm)
[multi] > itov[2].Y = (3.01029995664*clm)
[multi] > itov[5].Y = (3.01029995664*LacLm)
[multi] > itov[5].Y = (3.01029995664*LacLm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] --> Number of options 27
[multi] --> Number of nodes 1
[multi] ======= Partial (Root) Steps 219 =======
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [1451] [EXPR]vdadd[6].A<V>=(3.01029995664*LacLm)
   remove-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] vgain[0] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[0] cfg-in Z=TetRm
   [comp] vgain[0] cfg-in X=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] itov[2] cfg-in Y=(3.01029995664*clm)
   [comp] itov[2] cfg-in K=clm
   [comp] itov[2] cfg-in X=3.01029995664
   [comp] vdadd[3] cfg-in OUT_0=20
   [comp] vdadd[3] cfg-in OUT=clp
   [comp] vdadd[3] cfg-param BSW=1
   [comp] vdadd[3] cfg-param DSW=1
   [comp] vdadd[3] cfg-in D=0.03010299956
   [comp] vdadd[3] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[3] cfg-in B=0
   [comp] ihill_rep[4] cfg-in REP=TRTetR
   [comp] ihill_rep[4] cfg-in n=2
   [comp] ihill_rep[4] cfg-in S=LacLp
   [comp] ihill_rep[4] cfg-in Vmax=0.4995
   [comp] ihill_rep[4] cfg-in Km=40
   [comp] itov[5] cfg-in Y=(3.01029995664*LacLm)
   [comp] itov[5] cfg-in X=LacLm
   [comp] itov[5] cfg-in K=3.01029995664
   [comp] vdadd[6] cfg-in OUT_0=60
   [comp] vdadd[6] cfg-in OUT=LacLp
   [comp] vdadd[6] cfg-param BSW=1
   [comp] vdadd[6] cfg-param DSW=1
   [comp] vdadd[6] cfg-in D=0.03010299956
   [comp] vdadd[6] cfg-in A=(3.01029995664*LacLm)
   [comp] vdadd[6] cfg-in B=0
   [comp] ihill_rep[7] cfg-in REP=TRclp
   [comp] ihill_rep[7] cfg-in n=2
   [comp] ihill_rep[7] cfg-in S=TetRp
   [comp] ihill_rep[7] cfg-in Vmax=0.4995
   [comp] ihill_rep[7] cfg-in Km=40
   [comp] ihill_rep[8] cfg-in REP=TRLacL
   [comp] ihill_rep[8] cfg-in n=2
   [comp] ihill_rep[8] cfg-in S=clp
   [comp] ihill_rep[8] cfg-in Vmax=0.4995
   [comp] ihill_rep[8] cfg-in Km=40
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[0]
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] conn vgain[0].P->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] add-comp itov[2]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] conn itov[2].Y->vdadd[3].A
   [sln] generate vdadd[3].OUT = clp
   [sln] add-comp vdadd[3]
   [sln] generate ihill_rep[4].REP = TRTetR
   [sln] add-comp ihill_rep[4]
   [sln] generate itov[5].Y = (3.01029995664*LacLm)
   [sln] add-comp itov[5]
   [sln] generate itov[5].Y = (3.01029995664*LacLm)
   [sln] conn itov[5].Y->vdadd[6].A
   [sln] generate vdadd[6].OUT = LacLp
   [sln] add-comp vdadd[6]
   [sln] generate ihill_rep[7].REP = TRclp
   [sln] add-comp ihill_rep[7]
   [sln] generate ihill_rep[8].REP = TRLacL
   [sln] add-comp ihill_rep[8]
   [sln] route vgain[0].Z = TetRm
   [sln] route vgain[0].X = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route itov[2].K = clm
   [sln] route itov[2].X = 3.01029995664
   [sln] route vdadd[3].OUT_0 = 20
   [sln] route vdadd[3].D = 0.03010299956
   [sln] route vdadd[3].B = 0
   [sln] route ihill_rep[4].n = 2
   [sln] route ihill_rep[4].S = LacLp
   [sln] route ihill_rep[4].Vmax = 0.4995
   [sln] route ihill_rep[4].Km = 40
   [sln] route itov[5].X = LacLm
   [sln] route itov[5].K = 3.01029995664
   [sln] route vdadd[6].OUT_0 = 60
   [sln] route vdadd[6].D = 0.03010299956
   [sln] route vdadd[6].B = 0
   [sln] route ihill_rep[7].n = 2
   [sln] route ihill_rep[7].S = TetRp
   [sln] route ihill_rep[7].Vmax = 0.4995
   [sln] route ihill_rep[7].Km = 40
   [sln] route ihill_rep[8].n = 2
   [sln] route ihill_rep[8].S = clp
   [sln] route ihill_rep[8].Vmax = 0.4995
   [sln] route ihill_rep[8].Km = 40
   [comp] make-comp vgain0
   [comp] make-comp vdadd1
   [comp] make-comp itov2
   [comp] make-comp vdadd3
   [comp] make-comp ihill_rep4
   [comp] make-comp itov5
   [comp] make-comp vdadd6
   [comp] make-comp ihill_rep7
   [comp] make-comp ihill_rep8
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 1391 to disabled
   change-goal-status 1392 to disabled
   change-goal-status 1393 to disabled
   change-goal-status 1394 to disabled
   change-goal-status 1396 to disabled
   change-goal-status 1397 to disabled
   change-goal-status 1398 to disabled
   change-goal-status 1399 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1451] [EXPR]vdadd[6].A<V>=(3.01029995664*LacLm)
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ============================
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.V[0] cfg-in X=2
     [comp] input.V[0] cfg-out O=2
     [comp] input.V[1] cfg-in X=2
     [comp] input.V[1] cfg-out O=2
     [comp] input.V[2] cfg-in X=2
     [comp] input.V[2] cfg-out O=2
     [comp] input.V[3] cfg-in X=60
     [comp] input.V[3] cfg-out O=60
     [comp] input.V[4] cfg-in X=0
     [comp] input.V[4] cfg-out O=0
     [comp] input.V[5] cfg-in X=0
     [comp] input.V[5] cfg-out O=0
     [comp] input.V[6] cfg-in X=0
     [comp] input.V[6] cfg-out O=0
     [comp] input.I[0] cfg-in X=0.4995
     [comp] input.I[0] cfg-out O=0.4995
     [comp] input.I[1] cfg-in X=0.4995
     [comp] input.I[1] cfg-out O=0.4995
     [comp] input.I[2] cfg-in X=0.4995
     [comp] input.I[2] cfg-out O=0.4995
     [comp] input.V[7] cfg-in X=40
     [comp] input.V[7] cfg-out O=40
     [comp] input.I[3] cfg-in X=40
     [comp] input.I[3] cfg-out O=40
     [comp] input.I[4] cfg-in X=40
     [comp] input.I[4] cfg-out O=40
     [comp] input.I[5] cfg-in X=40
     [comp] input.I[5] cfg-out O=40
     [comp] input.V[8] cfg-in X=3.01029995664
     [comp] input.V[8] cfg-out O=3.01029995664
     [comp] input.V[9] cfg-in X=3.01029995664
     [comp] input.V[9] cfg-out O=3.01029995664
     [comp] input.I[6] cfg-in X=3.01029995664
     [comp] input.I[6] cfg-out O=3.01029995664
     [comp] input.V[10] cfg-in X=20
     [comp] input.V[10] cfg-out O=20
     [comp] input.I[7] cfg-in X=0.03010299956
     [comp] input.I[7] cfg-out O=0.03010299956
     [comp] input.I[8] cfg-in X=0.03010299956
     [comp] input.I[8] cfg-out O=0.03010299956
     [comp] input.I[9] cfg-in X=0.03010299956
     [comp] input.I[9] cfg-out O=0.03010299956
     [comp] output.V[0] cfg-in X=LacLp
     [comp] output.V[0] cfg-out O=LacLp
     [comp] output.V[1] cfg-in X=clp
     [comp] output.V[1] cfg-out O=clp
     [comp] output.V[2] cfg-in X=TetRp
     [comp] output.V[2] cfg-out O=TetRp
     [sln] rm-route ihill_rep[4].S = LacLp
     [sln] rm-route ihill_rep[8].S = clp
     [sln] rm-route ihill_rep[7].S = TetRp
     [sln] rm-route ihill_rep[4].n = 2
     [sln] add-comp input.V[0]
     [sln] generate input.V[0].O = 2
     [sln] rm-route ihill_rep[8].n = 2
     [sln] add-comp input.V[1]
     [sln] generate input.V[1].O = 2
     [sln] rm-route ihill_rep[7].n = 2
     [sln] add-comp input.V[2]
     [sln] generate input.V[2].O = 2
     [sln] rm-route vdadd[6].OUT_0 = 60
     [sln] add-comp input.V[3]
     [sln] generate input.V[3].O = 60
     [sln] rm-route vdadd[1].B = 0
     [sln] add-comp input.V[4]
     [sln] generate input.V[4].O = 0
     [sln] rm-route vdadd[6].B = 0
     [sln] add-comp input.V[5]
     [sln] generate input.V[5].O = 0
     [sln] rm-route vdadd[3].B = 0
     [sln] add-comp input.V[6]
     [sln] generate input.V[6].O = 0
     [sln] rm-route ihill_rep[4].Vmax = 0.4995
     [sln] add-comp input.I[0]
     [sln] generate input.I[0].O = 0.4995
     [sln] rm-route ihill_rep[8].Vmax = 0.4995
     [sln] add-comp input.I[1]
     [sln] generate input.I[1].O = 0.4995
     [sln] rm-route ihill_rep[7].Vmax = 0.4995
     [sln] add-comp input.I[2]
     [sln] generate input.I[2].O = 0.4995
     [sln] rm-route vdadd[1].OUT_0 = 40
     [sln] add-comp input.V[7]
     [sln] generate input.V[7].O = 40
     [sln] rm-route ihill_rep[4].Km = 40
     [sln] add-comp input.I[3]
     [sln] generate input.I[3].O = 40
     [sln] rm-route ihill_rep[8].Km = 40
     [sln] add-comp input.I[4]
     [sln] generate input.I[4].O = 40
     [sln] rm-route ihill_rep[7].Km = 40
     [sln] add-comp input.I[5]
     [sln] generate input.I[5].O = 40
     [sln] rm-route vgain[0].X = 3.01029995664
     [sln] add-comp input.V[8]
     [sln] generate input.V[8].O = 3.01029995664
     [sln] rm-route itov[5].K = 3.01029995664
     [sln] add-comp input.V[9]
     [sln] generate input.V[9].O = 3.01029995664
     [sln] rm-route itov[2].X = 3.01029995664
     [sln] add-comp input.I[6]
     [sln] generate input.I[6].O = 3.01029995664
     [sln] rm-route vdadd[3].OUT_0 = 20
     [sln] add-comp input.V[10]
     [sln] generate input.V[10].O = 20
     [sln] rm-route vdadd[1].D = 0.03010299956
     [sln] add-comp input.I[7]
     [sln] generate input.I[7].O = 0.03010299956
     [sln] rm-route vdadd[6].D = 0.03010299956
     [sln] add-comp input.I[8]
     [sln] generate input.I[8].O = 0.03010299956
     [sln] rm-route vdadd[3].D = 0.03010299956
     [sln] add-comp input.I[9]
     [sln] generate input.I[9].O = 0.03010299956
     [sln] add-comp output.V[0]
     [sln] generate output.V[0].O = LacLp
     [sln] add-comp output.V[1]
     [sln] generate output.V[1].O = clp
     [sln] add-comp output.V[2]
     [sln] generate output.V[2].O = TetRp
     [sln] route input.V[0].X = 2
     [sln] route input.V[1].X = 2
     [sln] route input.V[2].X = 2
     [sln] route input.V[3].X = 60
     [sln] route input.V[4].X = 0
     [sln] route input.V[5].X = 0
     [sln] route input.V[6].X = 0
     [sln] route input.I[0].X = 0.4995
     [sln] route input.I[1].X = 0.4995
     [sln] route input.I[2].X = 0.4995
     [sln] route input.V[7].X = 40
     [sln] route input.I[3].X = 40
     [sln] route input.I[4].X = 40
     [sln] route input.I[5].X = 40
     [sln] route input.V[8].X = 3.01029995664
     [sln] route input.V[9].X = 3.01029995664
     [sln] route input.I[6].X = 3.01029995664
     [sln] route input.V[10].X = 20
     [sln] route input.I[7].X = 0.03010299956
     [sln] route input.I[8].X = 0.03010299956
     [sln] route input.I[9].X = 0.03010299956
     [comp] make-comp input.V0
     [comp] make-comp input.V1
     [comp] make-comp input.V2
     [comp] make-comp input.V3
     [comp] make-comp input.V4
     [comp] make-comp input.V5
     [comp] make-comp input.V6
     [comp] make-comp input.I0
     [comp] make-comp input.I1
     [comp] make-comp input.I2
     [comp] make-comp input.V7
     [comp] make-comp input.I3
     [comp] make-comp input.I4
     [comp] make-comp input.I5
     [comp] make-comp input.V8
     [comp] make-comp input.V9
     [comp] make-comp input.I6
     [comp] make-comp input.V10
     [comp] make-comp input.I7
     [comp] make-comp input.I8
     [comp] make-comp input.I9
     [comp] make-comp output.V0
     [comp] make-comp output.V1
     [comp] make-comp output.V2
     add-goal [1670] [CONN] vdadd[6].OUT => ihill_rep[4].S (LacLp)
     add-goal [1671] [CONN] vdadd[3].OUT => ihill_rep[8].S (clp)
     add-goal [1672] [CONN] vdadd[1].OUT => ihill_rep[7].S (TetRp)
     add-goal [1673] [CONN] input.V[0].O => ihill_rep[4].n (2)
     add-goal [1674] [CONN] input.V[1].O => ihill_rep[8].n (2)
     add-goal [1675] [CONN] input.V[2].O => ihill_rep[7].n (2)
     add-goal [1676] [CONN] input.V[3].O => vdadd[6].OUT_0 (60)
     add-goal [1677] [CONN] input.V[4].O => vdadd[1].B (0)
     add-goal [1678] [CONN] input.V[5].O => vdadd[6].B (0)
     add-goal [1679] [CONN] input.V[6].O => vdadd[3].B (0)
     add-goal [1680] [CONN] input.I[0].O => ihill_rep[4].Vmax (0.4995)
     add-goal [1681] [CONN] input.I[1].O => ihill_rep[8].Vmax (0.4995)
     add-goal [1682] [CONN] input.I[2].O => ihill_rep[7].Vmax (0.4995)
     add-goal [1683] [CONN] input.V[7].O => vdadd[1].OUT_0 (40)
     add-goal [1684] [CONN] input.I[3].O => ihill_rep[4].Km (40)
     add-goal [1685] [CONN] input.I[4].O => ihill_rep[8].Km (40)
     add-goal [1686] [CONN] input.I[5].O => ihill_rep[7].Km (40)
     add-goal [1687] [CONN] input.V[8].O => vgain[0].X (3.01029995664)
     add-goal [1688] [CONN] input.V[9].O => itov[5].K (3.01029995664)
     add-goal [1689] [CONN] input.I[6].O => itov[2].X (3.01029995664)
     add-goal [1690] [CONN] input.V[10].O => vdadd[3].OUT_0 (20)
     add-goal [1691] [CONN] input.I[7].O => vdadd[1].D (0.03010299956)
     add-goal [1692] [CONN] input.I[8].O => vdadd[6].D (0.03010299956)
     add-goal [1693] [CONN] input.I[9].O => vdadd[3].D (0.03010299956)
     add-goal [1694] [CONN] vdadd[6].OUT => output.V[0].X (LacLp)
     add-goal [1695] [CONN] vdadd[3].OUT => output.V[1].X (clp)
     add-goal [1696] [CONN] vdadd[1].OUT => output.V[2].X (TetRp)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1676] [CONN] input.V[3].O => vdadd[6].OUT_0 (60)
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1679] [CONN] input.V[6].O => vdadd[3].B (0)
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1678] [CONN] input.V[5].O => vdadd[6].B (0)
[1695] [CONN] vdadd[3].OUT => output.V[1].X (clp)
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1684] [CONN] input.I[3].O => ihill_rep[4].Km (40)
[1689] [CONN] input.I[6].O => itov[2].X (3.01029995664)
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1680] [CONN] input.I[0].O => ihill_rep[4].Vmax (0.4995)
[1692] [CONN] input.I[8].O => vdadd[6].D (0.03010299956)
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1685] [CONN] input.I[4].O => ihill_rep[8].Km (40)
[1693] [CONN] input.I[9].O => vdadd[3].D (0.03010299956)
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1688] [CONN] input.V[9].O => itov[5].K (3.01029995664)
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1671] [CONN] vdadd[3].OUT => ihill_rep[8].S (clp)
[1672] [CONN] vdadd[1].OUT => ihill_rep[7].S (TetRp)
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1673] [CONN] input.V[0].O => ihill_rep[4].n (2)
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1674] [CONN] input.V[1].O => ihill_rep[8].n (2)
[1675] [CONN] input.V[2].O => ihill_rep[7].n (2)
[1687] [CONN] input.V[8].O => vgain[0].X (3.01029995664)
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1681] [CONN] input.I[1].O => ihill_rep[8].Vmax (0.4995)
[1683] [CONN] input.V[7].O => vdadd[1].OUT_0 (40)
[1686] [CONN] input.I[5].O => ihill_rep[7].Km (40)
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1694] [CONN] vdadd[6].OUT => output.V[0].X (LacLp)
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1670] [CONN] vdadd[6].OUT => ihill_rep[4].S (LacLp)
[1691] [CONN] input.I[7].O => vdadd[1].D (0.03010299956)
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1682] [CONN] input.I[2].O => ihill_rep[7].Vmax (0.4995)
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1677] [CONN] input.V[4].O => vdadd[1].B (0)
[1690] [CONN] input.V[10].O => vdadd[3].OUT_0 (20)
[1696] [CONN] vdadd[1].OUT => output.V[2].X (TetRp)
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> Current Goal: [1696] [CONN] vdadd[1].OUT => output.V[2].X (TetRp)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vgain.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->itov.K
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->itov.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 3
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=52

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] [TERMINATE] found 0 / 1
[eqn] [TERMINATE] could not find another node
[multi]   >> Found # Global Solutions: 1/1
[multi] >>>SOLUTION IS UNFINISHED <<<
[multi]  > Added Local Solution
[multi]  > Finding Global Solution
[multi] found # steps: 43
[multi] found # steps: 43
[multi] found # steps: 43
[multi] found # steps: 30
[multi] found # steps: 30
[multi] found # steps: 30
[multi] # partial ids = 6
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1451] [EXPR]vdadd[5].A<V>=(3.01029995664*LacLm)
   remove-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] vgain[0] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[0] cfg-in Z=TetRm
   [comp] vgain[0] cfg-in X=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] itov[2] cfg-in Y=(3.01029995664*clm)
   [comp] itov[2] cfg-in K=clm
   [comp] itov[2] cfg-in X=3.01029995664
   [comp] vdadd[3] cfg-in OUT_0=20
   [comp] vdadd[3] cfg-in OUT=clp
   [comp] vdadd[3] cfg-param BSW=1
   [comp] vdadd[3] cfg-param DSW=1
   [comp] vdadd[3] cfg-in D=0.03010299956
   [comp] vdadd[3] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[3] cfg-in B=0
   [comp] vgain[4] cfg-in P=(3.01029995664*LacLm)
   [comp] vgain[4] cfg-in Z=LacLm
   [comp] vgain[4] cfg-in X=3.01029995664
   [comp] vdadd[5] cfg-in OUT_0=60
   [comp] vdadd[5] cfg-in OUT=LacLp
   [comp] vdadd[5] cfg-param BSW=1
   [comp] vdadd[5] cfg-param DSW=1
   [comp] vdadd[5] cfg-in D=0.03010299956
   [comp] vdadd[5] cfg-in A=(3.01029995664*LacLm)
   [comp] vdadd[5] cfg-in B=0
   [comp] ihill_rep[6] cfg-in REP=TRTetR
   [comp] ihill_rep[6] cfg-in n=2
   [comp] ihill_rep[6] cfg-in S=LacLp
   [comp] ihill_rep[6] cfg-in Vmax=0.4995
   [comp] ihill_rep[6] cfg-in Km=40
   [comp] ihill_rep[7] cfg-in REP=TRclp
   [comp] ihill_rep[7] cfg-in n=2
   [comp] ihill_rep[7] cfg-in S=TetRp
   [comp] ihill_rep[7] cfg-in Vmax=0.4995
   [comp] ihill_rep[7] cfg-in Km=40
   [comp] ihill_rep[8] cfg-in REP=TRLacL
   [comp] ihill_rep[8] cfg-in n=2
   [comp] ihill_rep[8] cfg-in S=clp
   [comp] ihill_rep[8] cfg-in Vmax=0.4995
   [comp] ihill_rep[8] cfg-in Km=40
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[0]
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] conn vgain[0].P->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] add-comp itov[2]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] conn itov[2].Y->vdadd[3].A
   [sln] generate vdadd[3].OUT = clp
   [sln] add-comp vdadd[3]
   [sln] generate vgain[4].P = (3.01029995664*LacLm)
   [sln] add-comp vgain[4]
   [sln] generate vgain[4].P = (3.01029995664*LacLm)
   [sln] conn vgain[4].P->vdadd[5].A
   [sln] generate vdadd[5].OUT = LacLp
   [sln] add-comp vdadd[5]
   [sln] generate ihill_rep[6].REP = TRTetR
   [sln] add-comp ihill_rep[6]
   [sln] generate ihill_rep[7].REP = TRclp
   [sln] add-comp ihill_rep[7]
   [sln] generate ihill_rep[8].REP = TRLacL
   [sln] add-comp ihill_rep[8]
   [sln] route vgain[0].Z = TetRm
   [sln] route vgain[0].X = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route itov[2].K = clm
   [sln] route itov[2].X = 3.01029995664
   [sln] route vdadd[3].OUT_0 = 20
   [sln] route vdadd[3].D = 0.03010299956
   [sln] route vdadd[3].B = 0
   [sln] route vgain[4].Z = LacLm
   [sln] route vgain[4].X = 3.01029995664
   [sln] route vdadd[5].OUT_0 = 60
   [sln] route vdadd[5].D = 0.03010299956
   [sln] route vdadd[5].B = 0
   [sln] route ihill_rep[6].n = 2
   [sln] route ihill_rep[6].S = LacLp
   [sln] route ihill_rep[6].Vmax = 0.4995
   [sln] route ihill_rep[6].Km = 40
   [sln] route ihill_rep[7].n = 2
   [sln] route ihill_rep[7].S = TetRp
   [sln] route ihill_rep[7].Vmax = 0.4995
   [sln] route ihill_rep[7].Km = 40
   [sln] route ihill_rep[8].n = 2
   [sln] route ihill_rep[8].S = clp
   [sln] route ihill_rep[8].Vmax = 0.4995
   [sln] route ihill_rep[8].Km = 40
   [comp] make-comp vgain0
   [comp] make-comp vdadd1
   [comp] make-comp itov2
   [comp] make-comp vdadd3
   [comp] make-comp vgain4
   [comp] make-comp vdadd5
   [comp] make-comp ihill_rep6
   [comp] make-comp ihill_rep7
   [comp] make-comp ihill_rep8
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 1391 to disabled
   change-goal-status 1392 to disabled
   change-goal-status 1393 to disabled
   change-goal-status 1394 to disabled
   change-goal-status 1396 to disabled
   change-goal-status 1397 to disabled
   change-goal-status 1398 to disabled
   change-goal-status 1399 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   add-goal [1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1451] [EXPR]vdadd[5].A<V>=(3.01029995664*LacLm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ==== ROUTES =====
[multi] > vgain[0].Z = TetRm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[6].S = LacLp
[multi]    - connecting generates to routes.
[multi] > vgain[4].Z = LacLm
[multi]    - connecting generates to routes.
[multi] > itov[2].K = clm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[8].S = clp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[7].S = TetRp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[6].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[8].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[7].n = 2
[multi]    - making an input block.
[multi] > vdadd[5].OUT_0 = 60
[multi]    - making an input block.
[multi] > vdadd[1].B = 0
[multi]    - making an input block.
[multi] > vdadd[5].B = 0
[multi]    - making an input block.
[multi] > vdadd[3].B = 0
[multi]    - making an input block.
[multi] > ihill_rep[6].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[8].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[7].Vmax = 0.4995
[multi]    - making an input block.
[multi] > vdadd[1].OUT_0 = 40
[multi]    - making an input block.
[multi] > ihill_rep[6].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[8].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[7].Km = 40
[multi]    - making an input block.
[multi] > vgain[0].X = 3.01029995664
[multi]    - making an input block.
[multi] > vgain[4].X = 3.01029995664
[multi]    - making an input block.
[multi] > itov[2].X = 3.01029995664
[multi]    - making an input block.
[multi] > vdadd[3].OUT_0 = 20
[multi]    - making an input block.
[multi] > vdadd[1].D = 0.03010299956
[multi]    - making an input block.
[multi] > vdadd[5].D = 0.03010299956
[multi]    - making an input block.
[multi] > vdadd[3].D = 0.03010299956
[multi]    - making an input block.
[multi] ==== GENERATES =====
[multi] > vdadd[5].OUT = LacLp
[multi]    - making an output block.
[multi] > vdadd[3].OUT = clp
[multi]    - making an output block.
[multi] > vdadd[1].OUT = TetRp
[multi]    - making an output block.
[multi] > ihill_rep[6].REP = TRTetR
[multi] > ihill_rep[8].REP = TRLacL
[multi] > ihill_rep[7].REP = TRclp
[multi] > itov[2].Y = (3.01029995664*clm)
[multi] > itov[2].Y = (3.01029995664*clm)
[multi] > vgain[4].P = (3.01029995664*LacLm)
[multi] > vgain[4].P = (3.01029995664*LacLm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] --> Number of options 27
[multi] --> Number of nodes 1
[multi] ======= Partial (Root) Steps 219 =======
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1451] [EXPR]vdadd[5].A<V>=(3.01029995664*LacLm)
   remove-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] vgain[0] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[0] cfg-in Z=TetRm
   [comp] vgain[0] cfg-in X=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] itov[2] cfg-in Y=(3.01029995664*clm)
   [comp] itov[2] cfg-in K=clm
   [comp] itov[2] cfg-in X=3.01029995664
   [comp] vdadd[3] cfg-in OUT_0=20
   [comp] vdadd[3] cfg-in OUT=clp
   [comp] vdadd[3] cfg-param BSW=1
   [comp] vdadd[3] cfg-param DSW=1
   [comp] vdadd[3] cfg-in D=0.03010299956
   [comp] vdadd[3] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[3] cfg-in B=0
   [comp] vgain[4] cfg-in P=(3.01029995664*LacLm)
   [comp] vgain[4] cfg-in Z=LacLm
   [comp] vgain[4] cfg-in X=3.01029995664
   [comp] vdadd[5] cfg-in OUT_0=60
   [comp] vdadd[5] cfg-in OUT=LacLp
   [comp] vdadd[5] cfg-param BSW=1
   [comp] vdadd[5] cfg-param DSW=1
   [comp] vdadd[5] cfg-in D=0.03010299956
   [comp] vdadd[5] cfg-in A=(3.01029995664*LacLm)
   [comp] vdadd[5] cfg-in B=0
   [comp] ihill_rep[6] cfg-in REP=TRTetR
   [comp] ihill_rep[6] cfg-in n=2
   [comp] ihill_rep[6] cfg-in S=LacLp
   [comp] ihill_rep[6] cfg-in Vmax=0.4995
   [comp] ihill_rep[6] cfg-in Km=40
   [comp] ihill_rep[7] cfg-in REP=TRclp
   [comp] ihill_rep[7] cfg-in n=2
   [comp] ihill_rep[7] cfg-in S=TetRp
   [comp] ihill_rep[7] cfg-in Vmax=0.4995
   [comp] ihill_rep[7] cfg-in Km=40
   [comp] ihill_rep[8] cfg-in REP=TRLacL
   [comp] ihill_rep[8] cfg-in n=2
   [comp] ihill_rep[8] cfg-in S=clp
   [comp] ihill_rep[8] cfg-in Vmax=0.4995
   [comp] ihill_rep[8] cfg-in Km=40
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[0]
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] conn vgain[0].P->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] add-comp itov[2]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] conn itov[2].Y->vdadd[3].A
   [sln] generate vdadd[3].OUT = clp
   [sln] add-comp vdadd[3]
   [sln] generate vgain[4].P = (3.01029995664*LacLm)
   [sln] add-comp vgain[4]
   [sln] generate vgain[4].P = (3.01029995664*LacLm)
   [sln] conn vgain[4].P->vdadd[5].A
   [sln] generate vdadd[5].OUT = LacLp
   [sln] add-comp vdadd[5]
   [sln] generate ihill_rep[6].REP = TRTetR
   [sln] add-comp ihill_rep[6]
   [sln] generate ihill_rep[7].REP = TRclp
   [sln] add-comp ihill_rep[7]
   [sln] generate ihill_rep[8].REP = TRLacL
   [sln] add-comp ihill_rep[8]
   [sln] route vgain[0].Z = TetRm
   [sln] route vgain[0].X = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route itov[2].K = clm
   [sln] route itov[2].X = 3.01029995664
   [sln] route vdadd[3].OUT_0 = 20
   [sln] route vdadd[3].D = 0.03010299956
   [sln] route vdadd[3].B = 0
   [sln] route vgain[4].Z = LacLm
   [sln] route vgain[4].X = 3.01029995664
   [sln] route vdadd[5].OUT_0 = 60
   [sln] route vdadd[5].D = 0.03010299956
   [sln] route vdadd[5].B = 0
   [sln] route ihill_rep[6].n = 2
   [sln] route ihill_rep[6].S = LacLp
   [sln] route ihill_rep[6].Vmax = 0.4995
   [sln] route ihill_rep[6].Km = 40
   [sln] route ihill_rep[7].n = 2
   [sln] route ihill_rep[7].S = TetRp
   [sln] route ihill_rep[7].Vmax = 0.4995
   [sln] route ihill_rep[7].Km = 40
   [sln] route ihill_rep[8].n = 2
   [sln] route ihill_rep[8].S = clp
   [sln] route ihill_rep[8].Vmax = 0.4995
   [sln] route ihill_rep[8].Km = 40
   [comp] make-comp vgain0
   [comp] make-comp vdadd1
   [comp] make-comp itov2
   [comp] make-comp vdadd3
   [comp] make-comp vgain4
   [comp] make-comp vdadd5
   [comp] make-comp ihill_rep6
   [comp] make-comp ihill_rep7
   [comp] make-comp ihill_rep8
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 1391 to disabled
   change-goal-status 1392 to disabled
   change-goal-status 1393 to disabled
   change-goal-status 1394 to disabled
   change-goal-status 1396 to disabled
   change-goal-status 1397 to disabled
   change-goal-status 1398 to disabled
   change-goal-status 1399 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   add-goal [1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1451] [EXPR]vdadd[5].A<V>=(3.01029995664*LacLm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ============================
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.V[0] cfg-in X=2
     [comp] input.V[0] cfg-out O=2
     [comp] input.V[1] cfg-in X=2
     [comp] input.V[1] cfg-out O=2
     [comp] input.V[2] cfg-in X=2
     [comp] input.V[2] cfg-out O=2
     [comp] input.V[3] cfg-in X=60
     [comp] input.V[3] cfg-out O=60
     [comp] input.V[4] cfg-in X=0
     [comp] input.V[4] cfg-out O=0
     [comp] input.V[5] cfg-in X=0
     [comp] input.V[5] cfg-out O=0
     [comp] input.V[6] cfg-in X=0
     [comp] input.V[6] cfg-out O=0
     [comp] input.I[0] cfg-in X=0.4995
     [comp] input.I[0] cfg-out O=0.4995
     [comp] input.I[1] cfg-in X=0.4995
     [comp] input.I[1] cfg-out O=0.4995
     [comp] input.I[2] cfg-in X=0.4995
     [comp] input.I[2] cfg-out O=0.4995
     [comp] input.V[7] cfg-in X=40
     [comp] input.V[7] cfg-out O=40
     [comp] input.I[3] cfg-in X=40
     [comp] input.I[3] cfg-out O=40
     [comp] input.I[4] cfg-in X=40
     [comp] input.I[4] cfg-out O=40
     [comp] input.I[5] cfg-in X=40
     [comp] input.I[5] cfg-out O=40
     [comp] input.V[8] cfg-in X=3.01029995664
     [comp] input.V[8] cfg-out O=3.01029995664
     [comp] input.V[9] cfg-in X=3.01029995664
     [comp] input.V[9] cfg-out O=3.01029995664
     [comp] input.I[6] cfg-in X=3.01029995664
     [comp] input.I[6] cfg-out O=3.01029995664
     [comp] input.V[10] cfg-in X=20
     [comp] input.V[10] cfg-out O=20
     [comp] input.I[7] cfg-in X=0.03010299956
     [comp] input.I[7] cfg-out O=0.03010299956
     [comp] input.I[8] cfg-in X=0.03010299956
     [comp] input.I[8] cfg-out O=0.03010299956
     [comp] input.I[9] cfg-in X=0.03010299956
     [comp] input.I[9] cfg-out O=0.03010299956
     [comp] output.V[0] cfg-in X=LacLp
     [comp] output.V[0] cfg-out O=LacLp
     [comp] output.V[1] cfg-in X=clp
     [comp] output.V[1] cfg-out O=clp
     [comp] output.V[2] cfg-in X=TetRp
     [comp] output.V[2] cfg-out O=TetRp
     [sln] rm-route ihill_rep[6].S = LacLp
     [sln] rm-route ihill_rep[8].S = clp
     [sln] rm-route ihill_rep[7].S = TetRp
     [sln] rm-route ihill_rep[6].n = 2
     [sln] add-comp input.V[0]
     [sln] generate input.V[0].O = 2
     [sln] rm-route ihill_rep[8].n = 2
     [sln] add-comp input.V[1]
     [sln] generate input.V[1].O = 2
     [sln] rm-route ihill_rep[7].n = 2
     [sln] add-comp input.V[2]
     [sln] generate input.V[2].O = 2
     [sln] rm-route vdadd[5].OUT_0 = 60
     [sln] add-comp input.V[3]
     [sln] generate input.V[3].O = 60
     [sln] rm-route vdadd[1].B = 0
     [sln] add-comp input.V[4]
     [sln] generate input.V[4].O = 0
     [sln] rm-route vdadd[5].B = 0
     [sln] add-comp input.V[5]
     [sln] generate input.V[5].O = 0
     [sln] rm-route vdadd[3].B = 0
     [sln] add-comp input.V[6]
     [sln] generate input.V[6].O = 0
     [sln] rm-route ihill_rep[6].Vmax = 0.4995
     [sln] add-comp input.I[0]
     [sln] generate input.I[0].O = 0.4995
     [sln] rm-route ihill_rep[8].Vmax = 0.4995
     [sln] add-comp input.I[1]
     [sln] generate input.I[1].O = 0.4995
     [sln] rm-route ihill_rep[7].Vmax = 0.4995
     [sln] add-comp input.I[2]
     [sln] generate input.I[2].O = 0.4995
     [sln] rm-route vdadd[1].OUT_0 = 40
     [sln] add-comp input.V[7]
     [sln] generate input.V[7].O = 40
     [sln] rm-route ihill_rep[6].Km = 40
     [sln] add-comp input.I[3]
     [sln] generate input.I[3].O = 40
     [sln] rm-route ihill_rep[8].Km = 40
     [sln] add-comp input.I[4]
     [sln] generate input.I[4].O = 40
     [sln] rm-route ihill_rep[7].Km = 40
     [sln] add-comp input.I[5]
     [sln] generate input.I[5].O = 40
     [sln] rm-route vgain[0].X = 3.01029995664
     [sln] add-comp input.V[8]
     [sln] generate input.V[8].O = 3.01029995664
     [sln] rm-route vgain[4].X = 3.01029995664
     [sln] add-comp input.V[9]
     [sln] generate input.V[9].O = 3.01029995664
     [sln] rm-route itov[2].X = 3.01029995664
     [sln] add-comp input.I[6]
     [sln] generate input.I[6].O = 3.01029995664
     [sln] rm-route vdadd[3].OUT_0 = 20
     [sln] add-comp input.V[10]
     [sln] generate input.V[10].O = 20
     [sln] rm-route vdadd[1].D = 0.03010299956
     [sln] add-comp input.I[7]
     [sln] generate input.I[7].O = 0.03010299956
     [sln] rm-route vdadd[5].D = 0.03010299956
     [sln] add-comp input.I[8]
     [sln] generate input.I[8].O = 0.03010299956
     [sln] rm-route vdadd[3].D = 0.03010299956
     [sln] add-comp input.I[9]
     [sln] generate input.I[9].O = 0.03010299956
     [sln] add-comp output.V[0]
     [sln] generate output.V[0].O = LacLp
     [sln] add-comp output.V[1]
     [sln] generate output.V[1].O = clp
     [sln] add-comp output.V[2]
     [sln] generate output.V[2].O = TetRp
     [sln] route input.V[0].X = 2
     [sln] route input.V[1].X = 2
     [sln] route input.V[2].X = 2
     [sln] route input.V[3].X = 60
     [sln] route input.V[4].X = 0
     [sln] route input.V[5].X = 0
     [sln] route input.V[6].X = 0
     [sln] route input.I[0].X = 0.4995
     [sln] route input.I[1].X = 0.4995
     [sln] route input.I[2].X = 0.4995
     [sln] route input.V[7].X = 40
     [sln] route input.I[3].X = 40
     [sln] route input.I[4].X = 40
     [sln] route input.I[5].X = 40
     [sln] route input.V[8].X = 3.01029995664
     [sln] route input.V[9].X = 3.01029995664
     [sln] route input.I[6].X = 3.01029995664
     [sln] route input.V[10].X = 20
     [sln] route input.I[7].X = 0.03010299956
     [sln] route input.I[8].X = 0.03010299956
     [sln] route input.I[9].X = 0.03010299956
     [comp] make-comp input.V0
     [comp] make-comp input.V1
     [comp] make-comp input.V2
     [comp] make-comp input.V3
     [comp] make-comp input.V4
     [comp] make-comp input.V5
     [comp] make-comp input.V6
     [comp] make-comp input.I0
     [comp] make-comp input.I1
     [comp] make-comp input.I2
     [comp] make-comp input.V7
     [comp] make-comp input.I3
     [comp] make-comp input.I4
     [comp] make-comp input.I5
     [comp] make-comp input.V8
     [comp] make-comp input.V9
     [comp] make-comp input.I6
     [comp] make-comp input.V10
     [comp] make-comp input.I7
     [comp] make-comp input.I8
     [comp] make-comp input.I9
     [comp] make-comp output.V0
     [comp] make-comp output.V1
     [comp] make-comp output.V2
     add-goal [1697] [CONN] vdadd[5].OUT => ihill_rep[6].S (LacLp)
     add-goal [1698] [CONN] vdadd[3].OUT => ihill_rep[8].S (clp)
     add-goal [1699] [CONN] vdadd[1].OUT => ihill_rep[7].S (TetRp)
     add-goal [1700] [CONN] input.V[0].O => ihill_rep[6].n (2)
     add-goal [1701] [CONN] input.V[1].O => ihill_rep[8].n (2)
     add-goal [1702] [CONN] input.V[2].O => ihill_rep[7].n (2)
     add-goal [1703] [CONN] input.V[3].O => vdadd[5].OUT_0 (60)
     add-goal [1704] [CONN] input.V[4].O => vdadd[1].B (0)
     add-goal [1705] [CONN] input.V[5].O => vdadd[5].B (0)
     add-goal [1706] [CONN] input.V[6].O => vdadd[3].B (0)
     add-goal [1707] [CONN] input.I[0].O => ihill_rep[6].Vmax (0.4995)
     add-goal [1708] [CONN] input.I[1].O => ihill_rep[8].Vmax (0.4995)
     add-goal [1709] [CONN] input.I[2].O => ihill_rep[7].Vmax (0.4995)
     add-goal [1710] [CONN] input.V[7].O => vdadd[1].OUT_0 (40)
     add-goal [1711] [CONN] input.I[3].O => ihill_rep[6].Km (40)
     add-goal [1712] [CONN] input.I[4].O => ihill_rep[8].Km (40)
     add-goal [1713] [CONN] input.I[5].O => ihill_rep[7].Km (40)
     add-goal [1714] [CONN] input.V[8].O => vgain[0].X (3.01029995664)
     add-goal [1715] [CONN] input.V[9].O => vgain[4].X (3.01029995664)
     add-goal [1716] [CONN] input.I[6].O => itov[2].X (3.01029995664)
     add-goal [1717] [CONN] input.V[10].O => vdadd[3].OUT_0 (20)
     add-goal [1718] [CONN] input.I[7].O => vdadd[1].D (0.03010299956)
     add-goal [1719] [CONN] input.I[8].O => vdadd[5].D (0.03010299956)
     add-goal [1720] [CONN] input.I[9].O => vdadd[3].D (0.03010299956)
     add-goal [1721] [CONN] vdadd[5].OUT => output.V[0].X (LacLp)
     add-goal [1722] [CONN] vdadd[3].OUT => output.V[1].X (clp)
     add-goal [1723] [CONN] vdadd[1].OUT => output.V[2].X (TetRp)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1698] [CONN] vdadd[3].OUT => ihill_rep[8].S (clp)
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1702] [CONN] input.V[2].O => ihill_rep[7].n (2)
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1716] [CONN] input.I[6].O => itov[2].X (3.01029995664)
[1719] [CONN] input.I[8].O => vdadd[5].D (0.03010299956)
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1699] [CONN] vdadd[1].OUT => ihill_rep[7].S (TetRp)
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1697] [CONN] vdadd[5].OUT => ihill_rep[6].S (LacLp)
[1721] [CONN] vdadd[5].OUT => output.V[0].X (LacLp)
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1700] [CONN] input.V[0].O => ihill_rep[6].n (2)
[1713] [CONN] input.I[5].O => ihill_rep[7].Km (40)
[1714] [CONN] input.V[8].O => vgain[0].X (3.01029995664)
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1709] [CONN] input.I[2].O => ihill_rep[7].Vmax (0.4995)
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1717] [CONN] input.V[10].O => vdadd[3].OUT_0 (20)
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1708] [CONN] input.I[1].O => ihill_rep[8].Vmax (0.4995)
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1718] [CONN] input.I[7].O => vdadd[1].D (0.03010299956)
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1703] [CONN] input.V[3].O => vdadd[5].OUT_0 (60)
[1707] [CONN] input.I[0].O => ihill_rep[6].Vmax (0.4995)
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1706] [CONN] input.V[6].O => vdadd[3].B (0)
[1715] [CONN] input.V[9].O => vgain[4].X (3.01029995664)
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1704] [CONN] input.V[4].O => vdadd[1].B (0)
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1712] [CONN] input.I[4].O => ihill_rep[8].Km (40)
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1701] [CONN] input.V[1].O => ihill_rep[8].n (2)
[1711] [CONN] input.I[3].O => ihill_rep[6].Km (40)
[1723] [CONN] vdadd[1].OUT => output.V[2].X (TetRp)
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1722] [CONN] vdadd[3].OUT => output.V[1].X (clp)
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1705] [CONN] input.V[5].O => vdadd[5].B (0)
[1710] [CONN] input.V[7].O => vdadd[1].OUT_0 (40)
[1720] [CONN] input.I[9].O => vdadd[3].D (0.03010299956)
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> Current Goal: [1720] [CONN] input.I[9].O => vdadd[3].D (0.03010299956)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vgain.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vgain.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->itov.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 3
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=53

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] [TERMINATE] found 0 / 1
[eqn] [TERMINATE] could not find another node
[multi]   >> Found # Global Solutions: 1/1
[multi] >>>SOLUTION IS UNFINISHED <<<
[multi] # Found 0, Required: 1
[multi] solving target: clm
[multi] search tree is not exhausted. adding existing:clm
[multi] finding new partial solution
[multi] made a partial tree with 9 goals
[multi] find a partial solution
[multi] == Finding Local Solution ==
[multi] == Current # Solutions: 0
[multi] == # New Solutions To Find: 1
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[1729] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1727] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1732] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1730] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1725] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1728] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1731] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1724] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1726] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[1729] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1727] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1732] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1730] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1725] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1728] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1731] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1724] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1726] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}

============
>> Current Goal: [1730] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
vdadd.OUT -> true
mm.XY -> true
[eqn] >>> NUMBER OF COMPATIBLE COMPONENTS  2 <<<
[eqn] new: [0] <vdadd> output OUT.V
<analog-st> ((vdadd.V{A}:+(vdadd.BSW*vdadd.V{B}:))-(vdadd.DSW*vdadd.I{D}:*vdadd.V{OUT}:)) ic=OUT_0.V / std=none 0
<analog-st> [ddt v]=?? {ddt v}->[ddt v]=@
<analog-st> [v]=[0.,12000.] {v}->[v]=@ {v}->*[v]=@


checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 11 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 11 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
[eqn] new: [0] <mm> output XY.V
<analog-st> ((mm.I{kf}:*mm.V{X}:*mm.V{Y}:)-(mm.I{kr}:*mm.V{XY}:)) ic=XY0.V / std=gauss ((0.001*mm.V{XY}:)+0.1)
<analog-st> [ddt v]=?? {ddt v}->[ddt v]=@
<analog-st> [v]=[0.,3200.] {v}->[v]=@ {v}->*[v]=@


[eqn] [FOUND-SOLS] ===> Found <23> solutions
[slvrsearch] > weight--: <mvar-goal>clm
[eqn] -> [valid?] testing node 40
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=54

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 37
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=55

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 35
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=56

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 17
[eqn] <<< SAT => VALID >>
[eqn] [search_tree] Found enough solutions
[multi] === returned from partial search ===
[multi] >>> Partial Results Found <<<
[multi] done with search
[multi] found some partial solutions. Will add partial solution node and global
[multi] == Adding Local Solution : 40 ==
[multi] == Adding Local Solution : 37 ==
[multi] == Adding Local Solution : 35 ==
[multi]  > Added Local Solution
[multi]  > Finding Global Solution
[multi] found # steps: 43
[multi] found # steps: 43
[multi] found # steps: 43
[multi] found # steps: 30
[multi] found # steps: 32
[multi] found # steps: 30
[multi] found # steps: 30
[multi] # partial ids = 7
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1451] [EXPR]vdadd[5].A<V>=(3.01029995664*LacLm)
   remove-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [1730] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] vgain[0] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[0] cfg-in Z=TetRm
   [comp] vgain[0] cfg-in X=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] itov[2] cfg-in Y=(3.01029995664*clm)
   [comp] itov[2] cfg-in K=clm
   [comp] itov[2] cfg-in X=3.01029995664
   [comp] vdadd[3] cfg-in OUT_0=20
   [comp] vdadd[3] cfg-in OUT=clp
   [comp] vdadd[3] cfg-param BSW=1
   [comp] vdadd[3] cfg-param DSW=1
   [comp] vdadd[3] cfg-in D=0.03010299956
   [comp] vdadd[3] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[3] cfg-in B=0
   [comp] itov[4] cfg-in Y=(3.01029995664*LacLm)
   [comp] itov[4] cfg-in K=LacLm
   [comp] itov[4] cfg-in X=3.01029995664
   [comp] vdadd[5] cfg-in OUT_0=60
   [comp] vdadd[5] cfg-in OUT=LacLp
   [comp] vdadd[5] cfg-param BSW=1
   [comp] vdadd[5] cfg-param DSW=1
   [comp] vdadd[5] cfg-in D=0.03010299956
   [comp] vdadd[5] cfg-in A=(3.01029995664*LacLm)
   [comp] vdadd[5] cfg-in B=0
   [comp] ihill_rep[6] cfg-in REP=TRTetR
   [comp] ihill_rep[6] cfg-in n=2
   [comp] ihill_rep[6] cfg-in S=LacLp
   [comp] ihill_rep[6] cfg-in Vmax=0.4995
   [comp] ihill_rep[6] cfg-in Km=40
   [comp] vdadd[7] cfg-in OUT_0=0.25
   [comp] vdadd[7] cfg-in OUT=clm
   [comp] vdadd[7] cfg-param BSW=1
   [comp] vdadd[7] cfg-param DSW=1
   [comp] vdadd[7] cfg-in B=0.0005
   [comp] vdadd[7] cfg-in D=0.15051499783
   [comp] vdadd[7] cfg-in A=TRclp
   [comp] ihill_rep[8] cfg-in REP=TRclp
   [comp] ihill_rep[8] cfg-in n=2
   [comp] ihill_rep[8] cfg-in S=TetRp
   [comp] ihill_rep[8] cfg-in Vmax=0.4995
   [comp] ihill_rep[8] cfg-in Km=40
   [comp] ihill_rep[9] cfg-in REP=TRLacL
   [comp] ihill_rep[9] cfg-in n=2
   [comp] ihill_rep[9] cfg-in S=clp
   [comp] ihill_rep[9] cfg-in Vmax=0.4995
   [comp] ihill_rep[9] cfg-in Km=40
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[0]
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] conn vgain[0].P->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] add-comp itov[2]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] conn itov[2].Y->vdadd[3].A
   [sln] generate vdadd[3].OUT = clp
   [sln] add-comp vdadd[3]
   [sln] generate itov[4].Y = (3.01029995664*LacLm)
   [sln] add-comp itov[4]
   [sln] generate itov[4].Y = (3.01029995664*LacLm)
   [sln] conn itov[4].Y->vdadd[5].A
   [sln] generate vdadd[5].OUT = LacLp
   [sln] add-comp vdadd[5]
   [sln] generate ihill_rep[6].REP = TRTetR
   [sln] add-comp ihill_rep[6]
   [sln] generate vdadd[7].OUT = clm
   [sln] add-comp vdadd[7]
   [sln] generate ihill_rep[8].REP = TRclp
   [sln] add-comp ihill_rep[8]
   [sln] generate ihill_rep[9].REP = TRLacL
   [sln] add-comp ihill_rep[9]
   [sln] route vgain[0].Z = TetRm
   [sln] route vgain[0].X = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route itov[2].K = clm
   [sln] route itov[2].X = 3.01029995664
   [sln] route vdadd[3].OUT_0 = 20
   [sln] route vdadd[3].D = 0.03010299956
   [sln] route vdadd[3].B = 0
   [sln] route itov[4].K = LacLm
   [sln] route itov[4].X = 3.01029995664
   [sln] route vdadd[5].OUT_0 = 60
   [sln] route vdadd[5].D = 0.03010299956
   [sln] route vdadd[5].B = 0
   [sln] route ihill_rep[6].n = 2
   [sln] route ihill_rep[6].S = LacLp
   [sln] route ihill_rep[6].Vmax = 0.4995
   [sln] route ihill_rep[6].Km = 40
   [sln] route vdadd[7].OUT_0 = 0.25
   [sln] route vdadd[7].B = 0.0005
   [sln] route vdadd[7].D = 0.15051499783
   [sln] route vdadd[7].A = TRclp
   [sln] route ihill_rep[8].n = 2
   [sln] route ihill_rep[8].S = TetRp
   [sln] route ihill_rep[8].Vmax = 0.4995
   [sln] route ihill_rep[8].Km = 40
   [sln] route ihill_rep[9].n = 2
   [sln] route ihill_rep[9].S = clp
   [sln] route ihill_rep[9].Vmax = 0.4995
   [sln] route ihill_rep[9].Km = 40
   [comp] make-comp vgain0
   [comp] make-comp vdadd1
   [comp] make-comp itov2
   [comp] make-comp vdadd3
   [comp] make-comp itov4
   [comp] make-comp vdadd5
   [comp] make-comp ihill_rep6
   [comp] make-comp vdadd7
   [comp] make-comp ihill_rep8
   [comp] make-comp ihill_rep9
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 1391 to disabled
   change-goal-status 1392 to disabled
   change-goal-status 1393 to disabled
   change-goal-status 1394 to disabled
   change-goal-status 1396 to disabled
   change-goal-status 1397 to disabled
   change-goal-status 1398 to disabled
   change-goal-status 1399 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 1724 to disabled
   change-goal-status 1725 to disabled
   change-goal-status 1726 to disabled
   change-goal-status 1727 to disabled
   change-goal-status 1728 to disabled
   change-goal-status 1729 to disabled
   change-goal-status 1731 to disabled
   change-goal-status 1732 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   add-goal [1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1451] [EXPR]vdadd[5].A<V>=(3.01029995664*LacLm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1724] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1725] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1726] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1727] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1728] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1729] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1730] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1731] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1732] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ==== ROUTES =====
[multi] > vgain[0].Z = TetRm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[6].S = LacLp
[multi]    - connecting generates to routes.
[multi] > itov[4].K = LacLm
[multi]    - connecting generates to routes.
[multi] > itov[2].K = clm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[9].S = clp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[8].S = TetRp
[multi]    - connecting generates to routes.
[multi] > vdadd[7].A = TRclp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[6].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[9].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[8].n = 2
[multi]    - making an input block.
[multi] > vdadd[5].OUT_0 = 60
[multi]    - making an input block.
[multi] > vdadd[1].B = 0
[multi]    - making an input block.
[multi] > vdadd[5].B = 0
[multi]    - making an input block.
[multi] > vdadd[3].B = 0
[multi]    - making an input block.
[multi] > vdadd[7].D = 0.15051499783
[multi]    - making an input block.
[multi] > ihill_rep[6].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[9].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[8].Vmax = 0.4995
[multi]    - making an input block.
[multi] > vdadd[7].B = 0.0005
[multi]    - making an input block.
[multi] > vdadd[1].OUT_0 = 40
[multi]    - making an input block.
[multi] > ihill_rep[6].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[9].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[8].Km = 40
[multi]    - making an input block.
[multi] > vgain[0].X = 3.01029995664
[multi]    - making an input block.
[multi] > itov[4].X = 3.01029995664
[multi]    - making an input block.
[multi] > itov[2].X = 3.01029995664
[multi]    - making an input block.
[multi] > vdadd[7].OUT_0 = 0.25
[multi]    - making an input block.
[multi] > vdadd[3].OUT_0 = 20
[multi]    - making an input block.
[multi] > vdadd[1].D = 0.03010299956
[multi]    - making an input block.
[multi] > vdadd[5].D = 0.03010299956
[multi]    - making an input block.
[multi] > vdadd[3].D = 0.03010299956
[multi]    - making an input block.
[multi] ==== GENERATES =====
[multi] > vdadd[5].OUT = LacLp
[multi]    - making an output block.
[multi] > vdadd[7].OUT = clm
[multi]    - making an output block.
[multi] > vdadd[3].OUT = clp
[multi]    - making an output block.
[multi] > vdadd[1].OUT = TetRp
[multi]    - making an output block.
[multi] > ihill_rep[6].REP = TRTetR
[multi] > ihill_rep[9].REP = TRLacL
[multi] > ihill_rep[8].REP = TRclp
[multi] > itov[2].Y = (3.01029995664*clm)
[multi] > itov[2].Y = (3.01029995664*clm)
[multi] > itov[4].Y = (3.01029995664*LacLm)
[multi] > itov[4].Y = (3.01029995664*LacLm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] --> Number of options 33
[multi] --> Number of nodes 1
[multi] ======= Partial (Root) Steps 251 =======
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1451] [EXPR]vdadd[5].A<V>=(3.01029995664*LacLm)
   remove-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [1730] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] vgain[0] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[0] cfg-in Z=TetRm
   [comp] vgain[0] cfg-in X=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] itov[2] cfg-in Y=(3.01029995664*clm)
   [comp] itov[2] cfg-in K=clm
   [comp] itov[2] cfg-in X=3.01029995664
   [comp] vdadd[3] cfg-in OUT_0=20
   [comp] vdadd[3] cfg-in OUT=clp
   [comp] vdadd[3] cfg-param BSW=1
   [comp] vdadd[3] cfg-param DSW=1
   [comp] vdadd[3] cfg-in D=0.03010299956
   [comp] vdadd[3] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[3] cfg-in B=0
   [comp] itov[4] cfg-in Y=(3.01029995664*LacLm)
   [comp] itov[4] cfg-in K=LacLm
   [comp] itov[4] cfg-in X=3.01029995664
   [comp] vdadd[5] cfg-in OUT_0=60
   [comp] vdadd[5] cfg-in OUT=LacLp
   [comp] vdadd[5] cfg-param BSW=1
   [comp] vdadd[5] cfg-param DSW=1
   [comp] vdadd[5] cfg-in D=0.03010299956
   [comp] vdadd[5] cfg-in A=(3.01029995664*LacLm)
   [comp] vdadd[5] cfg-in B=0
   [comp] ihill_rep[6] cfg-in REP=TRTetR
   [comp] ihill_rep[6] cfg-in n=2
   [comp] ihill_rep[6] cfg-in S=LacLp
   [comp] ihill_rep[6] cfg-in Vmax=0.4995
   [comp] ihill_rep[6] cfg-in Km=40
   [comp] vdadd[7] cfg-in OUT_0=0.25
   [comp] vdadd[7] cfg-in OUT=clm
   [comp] vdadd[7] cfg-param BSW=1
   [comp] vdadd[7] cfg-param DSW=1
   [comp] vdadd[7] cfg-in B=0.0005
   [comp] vdadd[7] cfg-in D=0.15051499783
   [comp] vdadd[7] cfg-in A=TRclp
   [comp] ihill_rep[8] cfg-in REP=TRclp
   [comp] ihill_rep[8] cfg-in n=2
   [comp] ihill_rep[8] cfg-in S=TetRp
   [comp] ihill_rep[8] cfg-in Vmax=0.4995
   [comp] ihill_rep[8] cfg-in Km=40
   [comp] ihill_rep[9] cfg-in REP=TRLacL
   [comp] ihill_rep[9] cfg-in n=2
   [comp] ihill_rep[9] cfg-in S=clp
   [comp] ihill_rep[9] cfg-in Vmax=0.4995
   [comp] ihill_rep[9] cfg-in Km=40
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[0]
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] conn vgain[0].P->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] add-comp itov[2]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] conn itov[2].Y->vdadd[3].A
   [sln] generate vdadd[3].OUT = clp
   [sln] add-comp vdadd[3]
   [sln] generate itov[4].Y = (3.01029995664*LacLm)
   [sln] add-comp itov[4]
   [sln] generate itov[4].Y = (3.01029995664*LacLm)
   [sln] conn itov[4].Y->vdadd[5].A
   [sln] generate vdadd[5].OUT = LacLp
   [sln] add-comp vdadd[5]
   [sln] generate ihill_rep[6].REP = TRTetR
   [sln] add-comp ihill_rep[6]
   [sln] generate vdadd[7].OUT = clm
   [sln] add-comp vdadd[7]
   [sln] generate ihill_rep[8].REP = TRclp
   [sln] add-comp ihill_rep[8]
   [sln] generate ihill_rep[9].REP = TRLacL
   [sln] add-comp ihill_rep[9]
   [sln] route vgain[0].Z = TetRm
   [sln] route vgain[0].X = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route itov[2].K = clm
   [sln] route itov[2].X = 3.01029995664
   [sln] route vdadd[3].OUT_0 = 20
   [sln] route vdadd[3].D = 0.03010299956
   [sln] route vdadd[3].B = 0
   [sln] route itov[4].K = LacLm
   [sln] route itov[4].X = 3.01029995664
   [sln] route vdadd[5].OUT_0 = 60
   [sln] route vdadd[5].D = 0.03010299956
   [sln] route vdadd[5].B = 0
   [sln] route ihill_rep[6].n = 2
   [sln] route ihill_rep[6].S = LacLp
   [sln] route ihill_rep[6].Vmax = 0.4995
   [sln] route ihill_rep[6].Km = 40
   [sln] route vdadd[7].OUT_0 = 0.25
   [sln] route vdadd[7].B = 0.0005
   [sln] route vdadd[7].D = 0.15051499783
   [sln] route vdadd[7].A = TRclp
   [sln] route ihill_rep[8].n = 2
   [sln] route ihill_rep[8].S = TetRp
   [sln] route ihill_rep[8].Vmax = 0.4995
   [sln] route ihill_rep[8].Km = 40
   [sln] route ihill_rep[9].n = 2
   [sln] route ihill_rep[9].S = clp
   [sln] route ihill_rep[9].Vmax = 0.4995
   [sln] route ihill_rep[9].Km = 40
   [comp] make-comp vgain0
   [comp] make-comp vdadd1
   [comp] make-comp itov2
   [comp] make-comp vdadd3
   [comp] make-comp itov4
   [comp] make-comp vdadd5
   [comp] make-comp ihill_rep6
   [comp] make-comp vdadd7
   [comp] make-comp ihill_rep8
   [comp] make-comp ihill_rep9
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 1391 to disabled
   change-goal-status 1392 to disabled
   change-goal-status 1393 to disabled
   change-goal-status 1394 to disabled
   change-goal-status 1396 to disabled
   change-goal-status 1397 to disabled
   change-goal-status 1398 to disabled
   change-goal-status 1399 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 1724 to disabled
   change-goal-status 1725 to disabled
   change-goal-status 1726 to disabled
   change-goal-status 1727 to disabled
   change-goal-status 1728 to disabled
   change-goal-status 1729 to disabled
   change-goal-status 1731 to disabled
   change-goal-status 1732 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   add-goal [1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1451] [EXPR]vdadd[5].A<V>=(3.01029995664*LacLm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1724] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1725] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1726] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1727] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1728] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1729] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1730] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1731] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1732] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ============================
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.V[0] cfg-in X=2
     [comp] input.V[0] cfg-out O=2
     [comp] input.V[1] cfg-in X=2
     [comp] input.V[1] cfg-out O=2
     [comp] input.V[2] cfg-in X=2
     [comp] input.V[2] cfg-out O=2
     [comp] input.V[3] cfg-in X=60
     [comp] input.V[3] cfg-out O=60
     [comp] input.V[4] cfg-in X=0
     [comp] input.V[4] cfg-out O=0
     [comp] input.V[5] cfg-in X=0
     [comp] input.V[5] cfg-out O=0
     [comp] input.V[6] cfg-in X=0
     [comp] input.V[6] cfg-out O=0
     [comp] input.I[0] cfg-in X=0.15051499783
     [comp] input.I[0] cfg-out O=0.15051499783
     [comp] input.I[1] cfg-in X=0.4995
     [comp] input.I[1] cfg-out O=0.4995
     [comp] input.I[2] cfg-in X=0.4995
     [comp] input.I[2] cfg-out O=0.4995
     [comp] input.I[3] cfg-in X=0.4995
     [comp] input.I[3] cfg-out O=0.4995
     [comp] input.V[7] cfg-in X=0.0005
     [comp] input.V[7] cfg-out O=0.0005
     [comp] input.V[8] cfg-in X=40
     [comp] input.V[8] cfg-out O=40
     [comp] input.I[4] cfg-in X=40
     [comp] input.I[4] cfg-out O=40
     [comp] input.I[5] cfg-in X=40
     [comp] input.I[5] cfg-out O=40
     [comp] input.I[6] cfg-in X=40
     [comp] input.I[6] cfg-out O=40
     [comp] input.V[9] cfg-in X=3.01029995664
     [comp] input.V[9] cfg-out O=3.01029995664
     [comp] input.I[7] cfg-in X=3.01029995664
     [comp] input.I[7] cfg-out O=3.01029995664
     [comp] input.I[8] cfg-in X=3.01029995664
     [comp] input.I[8] cfg-out O=3.01029995664
     [comp] input.V[10] cfg-in X=0.25
     [comp] input.V[10] cfg-out O=0.25
     [comp] input.V[11] cfg-in X=20
     [comp] input.V[11] cfg-out O=20
     [comp] input.I[9] cfg-in X=0.03010299956
     [comp] input.I[9] cfg-out O=0.03010299956
     [comp] input.I[10] cfg-in X=0.03010299956
     [comp] input.I[10] cfg-out O=0.03010299956
     [comp] input.I[11] cfg-in X=0.03010299956
     [comp] input.I[11] cfg-out O=0.03010299956
     [comp] output.V[0] cfg-in X=LacLp
     [comp] output.V[0] cfg-out O=LacLp
     [comp] output.V[1] cfg-in X=clm
     [comp] output.V[1] cfg-out O=clm
     [comp] output.V[2] cfg-in X=clp
     [comp] output.V[2] cfg-out O=clp
     [comp] output.V[3] cfg-in X=TetRp
     [comp] output.V[3] cfg-out O=TetRp
     [sln] rm-route ihill_rep[6].S = LacLp
     [sln] rm-route itov[2].K = clm
     [sln] rm-route ihill_rep[9].S = clp
     [sln] rm-route ihill_rep[8].S = TetRp
     [sln] rm-route vdadd[7].A = TRclp
     [sln] rm-route ihill_rep[6].n = 2
     [sln] add-comp input.V[0]
     [sln] generate input.V[0].O = 2
     [sln] rm-route ihill_rep[9].n = 2
     [sln] add-comp input.V[1]
     [sln] generate input.V[1].O = 2
     [sln] rm-route ihill_rep[8].n = 2
     [sln] add-comp input.V[2]
     [sln] generate input.V[2].O = 2
     [sln] rm-route vdadd[5].OUT_0 = 60
     [sln] add-comp input.V[3]
     [sln] generate input.V[3].O = 60
     [sln] rm-route vdadd[1].B = 0
     [sln] add-comp input.V[4]
     [sln] generate input.V[4].O = 0
     [sln] rm-route vdadd[5].B = 0
     [sln] add-comp input.V[5]
     [sln] generate input.V[5].O = 0
     [sln] rm-route vdadd[3].B = 0
     [sln] add-comp input.V[6]
     [sln] generate input.V[6].O = 0
     [sln] rm-route vdadd[7].D = 0.15051499783
     [sln] add-comp input.I[0]
     [sln] generate input.I[0].O = 0.15051499783
     [sln] rm-route ihill_rep[6].Vmax = 0.4995
     [sln] add-comp input.I[1]
     [sln] generate input.I[1].O = 0.4995
     [sln] rm-route ihill_rep[9].Vmax = 0.4995
     [sln] add-comp input.I[2]
     [sln] generate input.I[2].O = 0.4995
     [sln] rm-route ihill_rep[8].Vmax = 0.4995
     [sln] add-comp input.I[3]
     [sln] generate input.I[3].O = 0.4995
     [sln] rm-route vdadd[7].B = 0.0005
     [sln] add-comp input.V[7]
     [sln] generate input.V[7].O = 0.0005
     [sln] rm-route vdadd[1].OUT_0 = 40
     [sln] add-comp input.V[8]
     [sln] generate input.V[8].O = 40
     [sln] rm-route ihill_rep[6].Km = 40
     [sln] add-comp input.I[4]
     [sln] generate input.I[4].O = 40
     [sln] rm-route ihill_rep[9].Km = 40
     [sln] add-comp input.I[5]
     [sln] generate input.I[5].O = 40
     [sln] rm-route ihill_rep[8].Km = 40
     [sln] add-comp input.I[6]
     [sln] generate input.I[6].O = 40
     [sln] rm-route vgain[0].X = 3.01029995664
     [sln] add-comp input.V[9]
     [sln] generate input.V[9].O = 3.01029995664
     [sln] rm-route itov[4].X = 3.01029995664
     [sln] add-comp input.I[7]
     [sln] generate input.I[7].O = 3.01029995664
     [sln] rm-route itov[2].X = 3.01029995664
     [sln] add-comp input.I[8]
     [sln] generate input.I[8].O = 3.01029995664
     [sln] rm-route vdadd[7].OUT_0 = 0.25
     [sln] add-comp input.V[10]
     [sln] generate input.V[10].O = 0.25
     [sln] rm-route vdadd[3].OUT_0 = 20
     [sln] add-comp input.V[11]
     [sln] generate input.V[11].O = 20
     [sln] rm-route vdadd[1].D = 0.03010299956
     [sln] add-comp input.I[9]
     [sln] generate input.I[9].O = 0.03010299956
     [sln] rm-route vdadd[5].D = 0.03010299956
     [sln] add-comp input.I[10]
     [sln] generate input.I[10].O = 0.03010299956
     [sln] rm-route vdadd[3].D = 0.03010299956
     [sln] add-comp input.I[11]
     [sln] generate input.I[11].O = 0.03010299956
     [sln] add-comp output.V[0]
     [sln] generate output.V[0].O = LacLp
     [sln] add-comp output.V[1]
     [sln] generate output.V[1].O = clm
     [sln] add-comp output.V[2]
     [sln] generate output.V[2].O = clp
     [sln] add-comp output.V[3]
     [sln] generate output.V[3].O = TetRp
     [sln] route input.V[0].X = 2
     [sln] route input.V[1].X = 2
     [sln] route input.V[2].X = 2
     [sln] route input.V[3].X = 60
     [sln] route input.V[4].X = 0
     [sln] route input.V[5].X = 0
     [sln] route input.V[6].X = 0
     [sln] route input.I[0].X = 0.15051499783
     [sln] route input.I[1].X = 0.4995
     [sln] route input.I[2].X = 0.4995
     [sln] route input.I[3].X = 0.4995
     [sln] route input.V[7].X = 0.0005
     [sln] route input.V[8].X = 40
     [sln] route input.I[4].X = 40
     [sln] route input.I[5].X = 40
     [sln] route input.I[6].X = 40
     [sln] route input.V[9].X = 3.01029995664
     [sln] route input.I[7].X = 3.01029995664
     [sln] route input.I[8].X = 3.01029995664
     [sln] route input.V[10].X = 0.25
     [sln] route input.V[11].X = 20
     [sln] route input.I[9].X = 0.03010299956
     [sln] route input.I[10].X = 0.03010299956
     [sln] route input.I[11].X = 0.03010299956
     [comp] make-comp input.V0
     [comp] make-comp input.V1
     [comp] make-comp input.V2
     [comp] make-comp input.V3
     [comp] make-comp input.V4
     [comp] make-comp input.V5
     [comp] make-comp input.V6
     [comp] make-comp input.I0
     [comp] make-comp input.I1
     [comp] make-comp input.I2
     [comp] make-comp input.I3
     [comp] make-comp input.V7
     [comp] make-comp input.V8
     [comp] make-comp input.I4
     [comp] make-comp input.I5
     [comp] make-comp input.I6
     [comp] make-comp input.V9
     [comp] make-comp input.I7
     [comp] make-comp input.I8
     [comp] make-comp input.V10
     [comp] make-comp input.V11
     [comp] make-comp input.I9
     [comp] make-comp input.I10
     [comp] make-comp input.I11
     [comp] make-comp output.V0
     [comp] make-comp output.V1
     [comp] make-comp output.V2
     [comp] make-comp output.V3
     add-goal [1809] [CONN] vdadd[5].OUT => ihill_rep[6].S (LacLp)
     add-goal [1810] [CONN] vdadd[7].OUT => itov[2].K (clm)
     add-goal [1811] [CONN] vdadd[3].OUT => ihill_rep[9].S (clp)
     add-goal [1812] [CONN] vdadd[1].OUT => ihill_rep[8].S (TetRp)
     add-goal [1813] [CONN] ihill_rep[8].REP => vdadd[7].A (TRclp)
     add-goal [1814] [CONN] input.V[0].O => ihill_rep[6].n (2)
     add-goal [1815] [CONN] input.V[1].O => ihill_rep[9].n (2)
     add-goal [1816] [CONN] input.V[2].O => ihill_rep[8].n (2)
     add-goal [1817] [CONN] input.V[3].O => vdadd[5].OUT_0 (60)
     add-goal [1818] [CONN] input.V[4].O => vdadd[1].B (0)
     add-goal [1819] [CONN] input.V[5].O => vdadd[5].B (0)
     add-goal [1820] [CONN] input.V[6].O => vdadd[3].B (0)
     add-goal [1821] [CONN] input.I[0].O => vdadd[7].D (0.15051499783)
     add-goal [1822] [CONN] input.I[1].O => ihill_rep[6].Vmax (0.4995)
     add-goal [1823] [CONN] input.I[2].O => ihill_rep[9].Vmax (0.4995)
     add-goal [1824] [CONN] input.I[3].O => ihill_rep[8].Vmax (0.4995)
     add-goal [1825] [CONN] input.V[7].O => vdadd[7].B (0.0005)
     add-goal [1826] [CONN] input.V[8].O => vdadd[1].OUT_0 (40)
     add-goal [1827] [CONN] input.I[4].O => ihill_rep[6].Km (40)
     add-goal [1828] [CONN] input.I[5].O => ihill_rep[9].Km (40)
     add-goal [1829] [CONN] input.I[6].O => ihill_rep[8].Km (40)
     add-goal [1830] [CONN] input.V[9].O => vgain[0].X (3.01029995664)
     add-goal [1831] [CONN] input.I[7].O => itov[4].X (3.01029995664)
     add-goal [1832] [CONN] input.I[8].O => itov[2].X (3.01029995664)
     add-goal [1833] [CONN] input.V[10].O => vdadd[7].OUT_0 (0.25)
     add-goal [1834] [CONN] input.V[11].O => vdadd[3].OUT_0 (20)
     add-goal [1835] [CONN] input.I[9].O => vdadd[1].D (0.03010299956)
     add-goal [1836] [CONN] input.I[10].O => vdadd[5].D (0.03010299956)
     add-goal [1837] [CONN] input.I[11].O => vdadd[3].D (0.03010299956)
     add-goal [1838] [CONN] vdadd[5].OUT => output.V[0].X (LacLp)
     add-goal [1839] [CONN] vdadd[7].OUT => output.V[1].X (clm)
     add-goal [1840] [CONN] vdadd[3].OUT => output.V[2].X (clp)
     add-goal [1841] [CONN] vdadd[1].OUT => output.V[3].X (TetRp)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1732] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1726] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1729] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1727] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1725] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1728] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1731] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1724] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1818] [CONN] input.V[4].O => vdadd[1].B (0)
[1840] [CONN] vdadd[3].OUT => output.V[2].X (clp)
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1811] [CONN] vdadd[3].OUT => ihill_rep[9].S (clp)
[1819] [CONN] input.V[5].O => vdadd[5].B (0)
[1828] [CONN] input.I[5].O => ihill_rep[9].Km (40)
[1732] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1826] [CONN] input.V[8].O => vdadd[1].OUT_0 (40)
[1835] [CONN] input.I[9].O => vdadd[1].D (0.03010299956)
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1810] [CONN] vdadd[7].OUT => itov[2].K (clm)
[1833] [CONN] input.V[10].O => vdadd[7].OUT_0 (0.25)
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1834] [CONN] input.V[11].O => vdadd[3].OUT_0 (20)
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1809] [CONN] vdadd[5].OUT => ihill_rep[6].S (LacLp)
[1836] [CONN] input.I[10].O => vdadd[5].D (0.03010299956)
[1831] [CONN] input.I[7].O => itov[4].X (3.01029995664)
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1822] [CONN] input.I[1].O => ihill_rep[6].Vmax (0.4995)
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1821] [CONN] input.I[0].O => vdadd[7].D (0.15051499783)
[1820] [CONN] input.V[6].O => vdadd[3].B (0)
[1839] [CONN] vdadd[7].OUT => output.V[1].X (clm)
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1825] [CONN] input.V[7].O => vdadd[7].B (0.0005)
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1812] [CONN] vdadd[1].OUT => ihill_rep[8].S (TetRp)
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1726] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1829] [CONN] input.I[6].O => ihill_rep[8].Km (40)
[1837] [CONN] input.I[11].O => vdadd[3].D (0.03010299956)
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1838] [CONN] vdadd[5].OUT => output.V[0].X (LacLp)
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1841] [CONN] vdadd[1].OUT => output.V[3].X (TetRp)
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1729] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1830] [CONN] input.V[9].O => vgain[0].X (3.01029995664)
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1727] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1832] [CONN] input.I[8].O => itov[2].X (3.01029995664)
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1816] [CONN] input.V[2].O => ihill_rep[8].n (2)
[1824] [CONN] input.I[3].O => ihill_rep[8].Vmax (0.4995)
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1827] [CONN] input.I[4].O => ihill_rep[6].Km (40)
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1814] [CONN] input.V[0].O => ihill_rep[6].n (2)
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1725] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1817] [CONN] input.V[3].O => vdadd[5].OUT_0 (60)
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1728] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1813] [CONN] ihill_rep[8].REP => vdadd[7].A (TRclp)
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1815] [CONN] input.V[1].O => ihill_rep[9].n (2)
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1731] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1823] [CONN] input.I[2].O => ihill_rep[9].Vmax (0.4995)
[1724] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> Current Goal: [1823] [CONN] input.I[2].O => ihill_rep[9].Vmax (0.4995)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>ihill_rep.REP->vdadd.A
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->itov.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vgain.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->itov.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->itov.K
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 3
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=57

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] [TERMINATE] found 0 / 1
[eqn] [TERMINATE] could not find another node
[multi]   >> Found # Global Solutions: 1/1
[multi] >>>SOLUTION IS UNFINISHED <<<
[multi]  > Added Local Solution
[multi]  > Finding Global Solution
[multi] found # steps: 32
[multi] found # steps: 43
[multi] found # steps: 43
[multi] found # steps: 43
[multi] found # steps: 30
[multi] found # steps: 30
[multi] found # steps: 30
[multi] # partial ids = 7
[multi]    remove-goal [1730] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   remove-goal [893] [EXPR]vdadd[2].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1154] [EXPR]vdadd[4].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1451] [EXPR]vdadd[6].A<V>=(3.01029995664*LacLm)
   remove-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] vdadd[0] cfg-in OUT_0=0.25
   [comp] vdadd[0] cfg-in OUT=clm
   [comp] vdadd[0] cfg-param BSW=1
   [comp] vdadd[0] cfg-param DSW=1
   [comp] vdadd[0] cfg-in B=0.0005
   [comp] vdadd[0] cfg-in D=0.15051499783
   [comp] vdadd[0] cfg-in A=TRclp
   [comp] vgain[1] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[1] cfg-in Z=TetRm
   [comp] vgain[1] cfg-in X=3.01029995664
   [comp] vdadd[2] cfg-in OUT_0=40
   [comp] vdadd[2] cfg-in OUT=TetRp
   [comp] vdadd[2] cfg-param BSW=1
   [comp] vdadd[2] cfg-param DSW=1
   [comp] vdadd[2] cfg-in B=0
   [comp] vdadd[2] cfg-in D=0.03010299956
   [comp] vdadd[2] cfg-in A=(3.01029995664*TetRm)
   [comp] itov[3] cfg-in Y=(3.01029995664*clm)
   [comp] itov[3] cfg-in K=clm
   [comp] itov[3] cfg-in X=3.01029995664
   [comp] vdadd[4] cfg-in OUT_0=20
   [comp] vdadd[4] cfg-in OUT=clp
   [comp] vdadd[4] cfg-param BSW=1
   [comp] vdadd[4] cfg-param DSW=1
   [comp] vdadd[4] cfg-in D=0.03010299956
   [comp] vdadd[4] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[4] cfg-in B=0
   [comp] itov[5] cfg-in Y=(3.01029995664*LacLm)
   [comp] itov[5] cfg-in K=LacLm
   [comp] itov[5] cfg-in X=3.01029995664
   [comp] vdadd[6] cfg-in OUT_0=60
   [comp] vdadd[6] cfg-in OUT=LacLp
   [comp] vdadd[6] cfg-param BSW=1
   [comp] vdadd[6] cfg-param DSW=1
   [comp] vdadd[6] cfg-in D=0.03010299956
   [comp] vdadd[6] cfg-in A=(3.01029995664*LacLm)
   [comp] vdadd[6] cfg-in B=0
   [comp] ihill_rep[7] cfg-in REP=TRTetR
   [comp] ihill_rep[7] cfg-in n=2
   [comp] ihill_rep[7] cfg-in S=LacLp
   [comp] ihill_rep[7] cfg-in Vmax=0.4995
   [comp] ihill_rep[7] cfg-in Km=40
   [comp] ihill_rep[8] cfg-in REP=TRclp
   [comp] ihill_rep[8] cfg-in n=2
   [comp] ihill_rep[8] cfg-in S=TetRp
   [comp] ihill_rep[8] cfg-in Vmax=0.4995
   [comp] ihill_rep[8] cfg-in Km=40
   [comp] ihill_rep[9] cfg-in REP=TRLacL
   [comp] ihill_rep[9] cfg-in n=2
   [comp] ihill_rep[9] cfg-in S=clp
   [comp] ihill_rep[9] cfg-in Vmax=0.4995
   [comp] ihill_rep[9] cfg-in Km=40
   [sln] generate vdadd[0].OUT = clm
   [sln] add-comp vdadd[0]
   [sln] generate vgain[1].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[1]
   [sln] generate vgain[1].P = (3.01029995664*TetRm)
   [sln] conn vgain[1].P->vdadd[2].A
   [sln] generate vdadd[2].OUT = TetRp
   [sln] add-comp vdadd[2]
   [sln] generate itov[3].Y = (3.01029995664*clm)
   [sln] add-comp itov[3]
   [sln] generate itov[3].Y = (3.01029995664*clm)
   [sln] conn itov[3].Y->vdadd[4].A
   [sln] generate vdadd[4].OUT = clp
   [sln] add-comp vdadd[4]
   [sln] generate itov[5].Y = (3.01029995664*LacLm)
   [sln] add-comp itov[5]
   [sln] generate itov[5].Y = (3.01029995664*LacLm)
   [sln] conn itov[5].Y->vdadd[6].A
   [sln] generate vdadd[6].OUT = LacLp
   [sln] add-comp vdadd[6]
   [sln] generate ihill_rep[7].REP = TRTetR
   [sln] add-comp ihill_rep[7]
   [sln] generate ihill_rep[8].REP = TRclp
   [sln] add-comp ihill_rep[8]
   [sln] generate ihill_rep[9].REP = TRLacL
   [sln] add-comp ihill_rep[9]
   [sln] route vdadd[0].OUT_0 = 0.25
   [sln] route vdadd[0].B = 0.0005
   [sln] route vdadd[0].D = 0.15051499783
   [sln] route vdadd[0].A = TRclp
   [sln] route vgain[1].Z = TetRm
   [sln] route vgain[1].X = 3.01029995664
   [sln] route vdadd[2].OUT_0 = 40
   [sln] route vdadd[2].B = 0
   [sln] route vdadd[2].D = 0.03010299956
   [sln] route itov[3].K = clm
   [sln] route itov[3].X = 3.01029995664
   [sln] route vdadd[4].OUT_0 = 20
   [sln] route vdadd[4].D = 0.03010299956
   [sln] route vdadd[4].B = 0
   [sln] route itov[5].K = LacLm
   [sln] route itov[5].X = 3.01029995664
   [sln] route vdadd[6].OUT_0 = 60
   [sln] route vdadd[6].D = 0.03010299956
   [sln] route vdadd[6].B = 0
   [sln] route ihill_rep[7].n = 2
   [sln] route ihill_rep[7].S = LacLp
   [sln] route ihill_rep[7].Vmax = 0.4995
   [sln] route ihill_rep[7].Km = 40
   [sln] route ihill_rep[8].n = 2
   [sln] route ihill_rep[8].S = TetRp
   [sln] route ihill_rep[8].Vmax = 0.4995
   [sln] route ihill_rep[8].Km = 40
   [sln] route ihill_rep[9].n = 2
   [sln] route ihill_rep[9].S = clp
   [sln] route ihill_rep[9].Vmax = 0.4995
   [sln] route ihill_rep[9].Km = 40
   [comp] make-comp vdadd0
   [comp] make-comp vgain1
   [comp] make-comp vdadd2
   [comp] make-comp itov3
   [comp] make-comp vdadd4
   [comp] make-comp itov5
   [comp] make-comp vdadd6
   [comp] make-comp ihill_rep7
   [comp] make-comp ihill_rep8
   [comp] make-comp ihill_rep9
   change-goal-status 1724 to disabled
   change-goal-status 1725 to disabled
   change-goal-status 1726 to disabled
   change-goal-status 1727 to disabled
   change-goal-status 1728 to disabled
   change-goal-status 1729 to disabled
   change-goal-status 1731 to disabled
   change-goal-status 1732 to disabled
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 1391 to disabled
   change-goal-status 1392 to disabled
   change-goal-status 1393 to disabled
   change-goal-status 1394 to disabled
   change-goal-status 1396 to disabled
   change-goal-status 1397 to disabled
   change-goal-status 1398 to disabled
   change-goal-status 1399 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [1724] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1725] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1726] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1727] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1728] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1729] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1730] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1731] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1732] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[2].A<V>=(3.01029995664*TetRm)
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[4].A<V>=(3.01029995664*clm)
   add-goal [1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1451] [EXPR]vdadd[6].A<V>=(3.01029995664*LacLm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ==== ROUTES =====
[multi] > vgain[1].Z = TetRm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[7].S = LacLp
[multi]    - connecting generates to routes.
[multi] > itov[5].K = LacLm
[multi]    - connecting generates to routes.
[multi] > itov[3].K = clm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[9].S = clp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[8].S = TetRp
[multi]    - connecting generates to routes.
[multi] > vdadd[0].A = TRclp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[7].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[9].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[8].n = 2
[multi]    - making an input block.
[multi] > vdadd[6].OUT_0 = 60
[multi]    - making an input block.
[multi] > vdadd[2].B = 0
[multi]    - making an input block.
[multi] > vdadd[6].B = 0
[multi]    - making an input block.
[multi] > vdadd[4].B = 0
[multi]    - making an input block.
[multi] > vdadd[0].D = 0.15051499783
[multi]    - making an input block.
[multi] > ihill_rep[7].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[9].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[8].Vmax = 0.4995
[multi]    - making an input block.
[multi] > vdadd[0].B = 0.0005
[multi]    - making an input block.
[multi] > vdadd[2].OUT_0 = 40
[multi]    - making an input block.
[multi] > ihill_rep[7].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[9].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[8].Km = 40
[multi]    - making an input block.
[multi] > vdadd[0].OUT_0 = 0.25
[multi]    - making an input block.
[multi] > vgain[1].X = 3.01029995664
[multi]    - making an input block.
[multi] > itov[5].X = 3.01029995664
[multi]    - making an input block.
[multi] > itov[3].X = 3.01029995664
[multi]    - making an input block.
[multi] > vdadd[4].OUT_0 = 20
[multi]    - making an input block.
[multi] > vdadd[2].D = 0.03010299956
[multi]    - making an input block.
[multi] > vdadd[6].D = 0.03010299956
[multi]    - making an input block.
[multi] > vdadd[4].D = 0.03010299956
[multi]    - making an input block.
[multi] ==== GENERATES =====
[multi] > vdadd[6].OUT = LacLp
[multi]    - making an output block.
[multi] > vdadd[0].OUT = clm
[multi]    - making an output block.
[multi] > vdadd[4].OUT = clp
[multi]    - making an output block.
[multi] > vdadd[2].OUT = TetRp
[multi]    - making an output block.
[multi] > ihill_rep[7].REP = TRTetR
[multi] > ihill_rep[9].REP = TRLacL
[multi] > ihill_rep[8].REP = TRclp
[multi] > itov[3].Y = (3.01029995664*clm)
[multi] > itov[3].Y = (3.01029995664*clm)
[multi] > itov[5].Y = (3.01029995664*LacLm)
[multi] > itov[5].Y = (3.01029995664*LacLm)
[multi] > vgain[1].P = (3.01029995664*TetRm)
[multi] > vgain[1].P = (3.01029995664*TetRm)
[multi] --> Number of options 33
[multi] --> Number of nodes 1
[multi] ======= Partial (Root) Steps 251 =======
[multi]    remove-goal [1730] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   remove-goal [893] [EXPR]vdadd[2].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1154] [EXPR]vdadd[4].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1451] [EXPR]vdadd[6].A<V>=(3.01029995664*LacLm)
   remove-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] vdadd[0] cfg-in OUT_0=0.25
   [comp] vdadd[0] cfg-in OUT=clm
   [comp] vdadd[0] cfg-param BSW=1
   [comp] vdadd[0] cfg-param DSW=1
   [comp] vdadd[0] cfg-in B=0.0005
   [comp] vdadd[0] cfg-in D=0.15051499783
   [comp] vdadd[0] cfg-in A=TRclp
   [comp] vgain[1] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[1] cfg-in Z=TetRm
   [comp] vgain[1] cfg-in X=3.01029995664
   [comp] vdadd[2] cfg-in OUT_0=40
   [comp] vdadd[2] cfg-in OUT=TetRp
   [comp] vdadd[2] cfg-param BSW=1
   [comp] vdadd[2] cfg-param DSW=1
   [comp] vdadd[2] cfg-in B=0
   [comp] vdadd[2] cfg-in D=0.03010299956
   [comp] vdadd[2] cfg-in A=(3.01029995664*TetRm)
   [comp] itov[3] cfg-in Y=(3.01029995664*clm)
   [comp] itov[3] cfg-in K=clm
   [comp] itov[3] cfg-in X=3.01029995664
   [comp] vdadd[4] cfg-in OUT_0=20
   [comp] vdadd[4] cfg-in OUT=clp
   [comp] vdadd[4] cfg-param BSW=1
   [comp] vdadd[4] cfg-param DSW=1
   [comp] vdadd[4] cfg-in D=0.03010299956
   [comp] vdadd[4] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[4] cfg-in B=0
   [comp] itov[5] cfg-in Y=(3.01029995664*LacLm)
   [comp] itov[5] cfg-in K=LacLm
   [comp] itov[5] cfg-in X=3.01029995664
   [comp] vdadd[6] cfg-in OUT_0=60
   [comp] vdadd[6] cfg-in OUT=LacLp
   [comp] vdadd[6] cfg-param BSW=1
   [comp] vdadd[6] cfg-param DSW=1
   [comp] vdadd[6] cfg-in D=0.03010299956
   [comp] vdadd[6] cfg-in A=(3.01029995664*LacLm)
   [comp] vdadd[6] cfg-in B=0
   [comp] ihill_rep[7] cfg-in REP=TRTetR
   [comp] ihill_rep[7] cfg-in n=2
   [comp] ihill_rep[7] cfg-in S=LacLp
   [comp] ihill_rep[7] cfg-in Vmax=0.4995
   [comp] ihill_rep[7] cfg-in Km=40
   [comp] ihill_rep[8] cfg-in REP=TRclp
   [comp] ihill_rep[8] cfg-in n=2
   [comp] ihill_rep[8] cfg-in S=TetRp
   [comp] ihill_rep[8] cfg-in Vmax=0.4995
   [comp] ihill_rep[8] cfg-in Km=40
   [comp] ihill_rep[9] cfg-in REP=TRLacL
   [comp] ihill_rep[9] cfg-in n=2
   [comp] ihill_rep[9] cfg-in S=clp
   [comp] ihill_rep[9] cfg-in Vmax=0.4995
   [comp] ihill_rep[9] cfg-in Km=40
   [sln] generate vdadd[0].OUT = clm
   [sln] add-comp vdadd[0]
   [sln] generate vgain[1].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[1]
   [sln] generate vgain[1].P = (3.01029995664*TetRm)
   [sln] conn vgain[1].P->vdadd[2].A
   [sln] generate vdadd[2].OUT = TetRp
   [sln] add-comp vdadd[2]
   [sln] generate itov[3].Y = (3.01029995664*clm)
   [sln] add-comp itov[3]
   [sln] generate itov[3].Y = (3.01029995664*clm)
   [sln] conn itov[3].Y->vdadd[4].A
   [sln] generate vdadd[4].OUT = clp
   [sln] add-comp vdadd[4]
   [sln] generate itov[5].Y = (3.01029995664*LacLm)
   [sln] add-comp itov[5]
   [sln] generate itov[5].Y = (3.01029995664*LacLm)
   [sln] conn itov[5].Y->vdadd[6].A
   [sln] generate vdadd[6].OUT = LacLp
   [sln] add-comp vdadd[6]
   [sln] generate ihill_rep[7].REP = TRTetR
   [sln] add-comp ihill_rep[7]
   [sln] generate ihill_rep[8].REP = TRclp
   [sln] add-comp ihill_rep[8]
   [sln] generate ihill_rep[9].REP = TRLacL
   [sln] add-comp ihill_rep[9]
   [sln] route vdadd[0].OUT_0 = 0.25
   [sln] route vdadd[0].B = 0.0005
   [sln] route vdadd[0].D = 0.15051499783
   [sln] route vdadd[0].A = TRclp
   [sln] route vgain[1].Z = TetRm
   [sln] route vgain[1].X = 3.01029995664
   [sln] route vdadd[2].OUT_0 = 40
   [sln] route vdadd[2].B = 0
   [sln] route vdadd[2].D = 0.03010299956
   [sln] route itov[3].K = clm
   [sln] route itov[3].X = 3.01029995664
   [sln] route vdadd[4].OUT_0 = 20
   [sln] route vdadd[4].D = 0.03010299956
   [sln] route vdadd[4].B = 0
   [sln] route itov[5].K = LacLm
   [sln] route itov[5].X = 3.01029995664
   [sln] route vdadd[6].OUT_0 = 60
   [sln] route vdadd[6].D = 0.03010299956
   [sln] route vdadd[6].B = 0
   [sln] route ihill_rep[7].n = 2
   [sln] route ihill_rep[7].S = LacLp
   [sln] route ihill_rep[7].Vmax = 0.4995
   [sln] route ihill_rep[7].Km = 40
   [sln] route ihill_rep[8].n = 2
   [sln] route ihill_rep[8].S = TetRp
   [sln] route ihill_rep[8].Vmax = 0.4995
   [sln] route ihill_rep[8].Km = 40
   [sln] route ihill_rep[9].n = 2
   [sln] route ihill_rep[9].S = clp
   [sln] route ihill_rep[9].Vmax = 0.4995
   [sln] route ihill_rep[9].Km = 40
   [comp] make-comp vdadd0
   [comp] make-comp vgain1
   [comp] make-comp vdadd2
   [comp] make-comp itov3
   [comp] make-comp vdadd4
   [comp] make-comp itov5
   [comp] make-comp vdadd6
   [comp] make-comp ihill_rep7
   [comp] make-comp ihill_rep8
   [comp] make-comp ihill_rep9
   change-goal-status 1724 to disabled
   change-goal-status 1725 to disabled
   change-goal-status 1726 to disabled
   change-goal-status 1727 to disabled
   change-goal-status 1728 to disabled
   change-goal-status 1729 to disabled
   change-goal-status 1731 to disabled
   change-goal-status 1732 to disabled
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 1391 to disabled
   change-goal-status 1392 to disabled
   change-goal-status 1393 to disabled
   change-goal-status 1394 to disabled
   change-goal-status 1396 to disabled
   change-goal-status 1397 to disabled
   change-goal-status 1398 to disabled
   change-goal-status 1399 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [1724] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1725] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1726] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1727] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1728] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1729] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1730] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1731] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1732] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[2].A<V>=(3.01029995664*TetRm)
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[4].A<V>=(3.01029995664*clm)
   add-goal [1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1451] [EXPR]vdadd[6].A<V>=(3.01029995664*LacLm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ============================
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.V[0] cfg-in X=2
     [comp] input.V[0] cfg-out O=2
     [comp] input.V[1] cfg-in X=2
     [comp] input.V[1] cfg-out O=2
     [comp] input.V[2] cfg-in X=2
     [comp] input.V[2] cfg-out O=2
     [comp] input.V[3] cfg-in X=60
     [comp] input.V[3] cfg-out O=60
     [comp] input.V[4] cfg-in X=0
     [comp] input.V[4] cfg-out O=0
     [comp] input.V[5] cfg-in X=0
     [comp] input.V[5] cfg-out O=0
     [comp] input.V[6] cfg-in X=0
     [comp] input.V[6] cfg-out O=0
     [comp] input.I[0] cfg-in X=0.15051499783
     [comp] input.I[0] cfg-out O=0.15051499783
     [comp] input.I[1] cfg-in X=0.4995
     [comp] input.I[1] cfg-out O=0.4995
     [comp] input.I[2] cfg-in X=0.4995
     [comp] input.I[2] cfg-out O=0.4995
     [comp] input.I[3] cfg-in X=0.4995
     [comp] input.I[3] cfg-out O=0.4995
     [comp] input.V[7] cfg-in X=0.0005
     [comp] input.V[7] cfg-out O=0.0005
     [comp] input.V[8] cfg-in X=40
     [comp] input.V[8] cfg-out O=40
     [comp] input.I[4] cfg-in X=40
     [comp] input.I[4] cfg-out O=40
     [comp] input.I[5] cfg-in X=40
     [comp] input.I[5] cfg-out O=40
     [comp] input.I[6] cfg-in X=40
     [comp] input.I[6] cfg-out O=40
     [comp] input.V[9] cfg-in X=0.25
     [comp] input.V[9] cfg-out O=0.25
     [comp] input.V[10] cfg-in X=3.01029995664
     [comp] input.V[10] cfg-out O=3.01029995664
     [comp] input.I[7] cfg-in X=3.01029995664
     [comp] input.I[7] cfg-out O=3.01029995664
     [comp] input.I[8] cfg-in X=3.01029995664
     [comp] input.I[8] cfg-out O=3.01029995664
     [comp] input.V[11] cfg-in X=20
     [comp] input.V[11] cfg-out O=20
     [comp] input.I[9] cfg-in X=0.03010299956
     [comp] input.I[9] cfg-out O=0.03010299956
     [comp] input.I[10] cfg-in X=0.03010299956
     [comp] input.I[10] cfg-out O=0.03010299956
     [comp] input.I[11] cfg-in X=0.03010299956
     [comp] input.I[11] cfg-out O=0.03010299956
     [comp] output.V[0] cfg-in X=LacLp
     [comp] output.V[0] cfg-out O=LacLp
     [comp] output.V[1] cfg-in X=clm
     [comp] output.V[1] cfg-out O=clm
     [comp] output.V[2] cfg-in X=clp
     [comp] output.V[2] cfg-out O=clp
     [comp] output.V[3] cfg-in X=TetRp
     [comp] output.V[3] cfg-out O=TetRp
     [sln] rm-route ihill_rep[7].S = LacLp
     [sln] rm-route itov[3].K = clm
     [sln] rm-route ihill_rep[9].S = clp
     [sln] rm-route ihill_rep[8].S = TetRp
     [sln] rm-route vdadd[0].A = TRclp
     [sln] rm-route ihill_rep[7].n = 2
     [sln] add-comp input.V[0]
     [sln] generate input.V[0].O = 2
     [sln] rm-route ihill_rep[9].n = 2
     [sln] add-comp input.V[1]
     [sln] generate input.V[1].O = 2
     [sln] rm-route ihill_rep[8].n = 2
     [sln] add-comp input.V[2]
     [sln] generate input.V[2].O = 2
     [sln] rm-route vdadd[6].OUT_0 = 60
     [sln] add-comp input.V[3]
     [sln] generate input.V[3].O = 60
     [sln] rm-route vdadd[2].B = 0
     [sln] add-comp input.V[4]
     [sln] generate input.V[4].O = 0
     [sln] rm-route vdadd[6].B = 0
     [sln] add-comp input.V[5]
     [sln] generate input.V[5].O = 0
     [sln] rm-route vdadd[4].B = 0
     [sln] add-comp input.V[6]
     [sln] generate input.V[6].O = 0
     [sln] rm-route vdadd[0].D = 0.15051499783
     [sln] add-comp input.I[0]
     [sln] generate input.I[0].O = 0.15051499783
     [sln] rm-route ihill_rep[7].Vmax = 0.4995
     [sln] add-comp input.I[1]
     [sln] generate input.I[1].O = 0.4995
     [sln] rm-route ihill_rep[9].Vmax = 0.4995
     [sln] add-comp input.I[2]
     [sln] generate input.I[2].O = 0.4995
     [sln] rm-route ihill_rep[8].Vmax = 0.4995
     [sln] add-comp input.I[3]
     [sln] generate input.I[3].O = 0.4995
     [sln] rm-route vdadd[0].B = 0.0005
     [sln] add-comp input.V[7]
     [sln] generate input.V[7].O = 0.0005
     [sln] rm-route vdadd[2].OUT_0 = 40
     [sln] add-comp input.V[8]
     [sln] generate input.V[8].O = 40
     [sln] rm-route ihill_rep[7].Km = 40
     [sln] add-comp input.I[4]
     [sln] generate input.I[4].O = 40
     [sln] rm-route ihill_rep[9].Km = 40
     [sln] add-comp input.I[5]
     [sln] generate input.I[5].O = 40
     [sln] rm-route ihill_rep[8].Km = 40
     [sln] add-comp input.I[6]
     [sln] generate input.I[6].O = 40
     [sln] rm-route vdadd[0].OUT_0 = 0.25
     [sln] add-comp input.V[9]
     [sln] generate input.V[9].O = 0.25
     [sln] rm-route vgain[1].X = 3.01029995664
     [sln] add-comp input.V[10]
     [sln] generate input.V[10].O = 3.01029995664
     [sln] rm-route itov[5].X = 3.01029995664
     [sln] add-comp input.I[7]
     [sln] generate input.I[7].O = 3.01029995664
     [sln] rm-route itov[3].X = 3.01029995664
     [sln] add-comp input.I[8]
     [sln] generate input.I[8].O = 3.01029995664
     [sln] rm-route vdadd[4].OUT_0 = 20
     [sln] add-comp input.V[11]
     [sln] generate input.V[11].O = 20
     [sln] rm-route vdadd[2].D = 0.03010299956
     [sln] add-comp input.I[9]
     [sln] generate input.I[9].O = 0.03010299956
     [sln] rm-route vdadd[6].D = 0.03010299956
     [sln] add-comp input.I[10]
     [sln] generate input.I[10].O = 0.03010299956
     [sln] rm-route vdadd[4].D = 0.03010299956
     [sln] add-comp input.I[11]
     [sln] generate input.I[11].O = 0.03010299956
     [sln] add-comp output.V[0]
     [sln] generate output.V[0].O = LacLp
     [sln] add-comp output.V[1]
     [sln] generate output.V[1].O = clm
     [sln] add-comp output.V[2]
     [sln] generate output.V[2].O = clp
     [sln] add-comp output.V[3]
     [sln] generate output.V[3].O = TetRp
     [sln] route input.V[0].X = 2
     [sln] route input.V[1].X = 2
     [sln] route input.V[2].X = 2
     [sln] route input.V[3].X = 60
     [sln] route input.V[4].X = 0
     [sln] route input.V[5].X = 0
     [sln] route input.V[6].X = 0
     [sln] route input.I[0].X = 0.15051499783
     [sln] route input.I[1].X = 0.4995
     [sln] route input.I[2].X = 0.4995
     [sln] route input.I[3].X = 0.4995
     [sln] route input.V[7].X = 0.0005
     [sln] route input.V[8].X = 40
     [sln] route input.I[4].X = 40
     [sln] route input.I[5].X = 40
     [sln] route input.I[6].X = 40
     [sln] route input.V[9].X = 0.25
     [sln] route input.V[10].X = 3.01029995664
     [sln] route input.I[7].X = 3.01029995664
     [sln] route input.I[8].X = 3.01029995664
     [sln] route input.V[11].X = 20
     [sln] route input.I[9].X = 0.03010299956
     [sln] route input.I[10].X = 0.03010299956
     [sln] route input.I[11].X = 0.03010299956
     [comp] make-comp input.V0
     [comp] make-comp input.V1
     [comp] make-comp input.V2
     [comp] make-comp input.V3
     [comp] make-comp input.V4
     [comp] make-comp input.V5
     [comp] make-comp input.V6
     [comp] make-comp input.I0
     [comp] make-comp input.I1
     [comp] make-comp input.I2
     [comp] make-comp input.I3
     [comp] make-comp input.V7
     [comp] make-comp input.V8
     [comp] make-comp input.I4
     [comp] make-comp input.I5
     [comp] make-comp input.I6
     [comp] make-comp input.V9
     [comp] make-comp input.V10
     [comp] make-comp input.I7
     [comp] make-comp input.I8
     [comp] make-comp input.V11
     [comp] make-comp input.I9
     [comp] make-comp input.I10
     [comp] make-comp input.I11
     [comp] make-comp output.V0
     [comp] make-comp output.V1
     [comp] make-comp output.V2
     [comp] make-comp output.V3
     add-goal [1842] [CONN] vdadd[6].OUT => ihill_rep[7].S (LacLp)
     add-goal [1843] [CONN] vdadd[0].OUT => itov[3].K (clm)
     add-goal [1844] [CONN] vdadd[4].OUT => ihill_rep[9].S (clp)
     add-goal [1845] [CONN] vdadd[2].OUT => ihill_rep[8].S (TetRp)
     add-goal [1846] [CONN] ihill_rep[8].REP => vdadd[0].A (TRclp)
     add-goal [1847] [CONN] input.V[0].O => ihill_rep[7].n (2)
     add-goal [1848] [CONN] input.V[1].O => ihill_rep[9].n (2)
     add-goal [1849] [CONN] input.V[2].O => ihill_rep[8].n (2)
     add-goal [1850] [CONN] input.V[3].O => vdadd[6].OUT_0 (60)
     add-goal [1851] [CONN] input.V[4].O => vdadd[2].B (0)
     add-goal [1852] [CONN] input.V[5].O => vdadd[6].B (0)
     add-goal [1853] [CONN] input.V[6].O => vdadd[4].B (0)
     add-goal [1854] [CONN] input.I[0].O => vdadd[0].D (0.15051499783)
     add-goal [1855] [CONN] input.I[1].O => ihill_rep[7].Vmax (0.4995)
     add-goal [1856] [CONN] input.I[2].O => ihill_rep[9].Vmax (0.4995)
     add-goal [1857] [CONN] input.I[3].O => ihill_rep[8].Vmax (0.4995)
     add-goal [1858] [CONN] input.V[7].O => vdadd[0].B (0.0005)
     add-goal [1859] [CONN] input.V[8].O => vdadd[2].OUT_0 (40)
     add-goal [1860] [CONN] input.I[4].O => ihill_rep[7].Km (40)
     add-goal [1861] [CONN] input.I[5].O => ihill_rep[9].Km (40)
     add-goal [1862] [CONN] input.I[6].O => ihill_rep[8].Km (40)
     add-goal [1863] [CONN] input.V[9].O => vdadd[0].OUT_0 (0.25)
     add-goal [1864] [CONN] input.V[10].O => vgain[1].X (3.01029995664)
     add-goal [1865] [CONN] input.I[7].O => itov[5].X (3.01029995664)
     add-goal [1866] [CONN] input.I[8].O => itov[3].X (3.01029995664)
     add-goal [1867] [CONN] input.V[11].O => vdadd[4].OUT_0 (20)
     add-goal [1868] [CONN] input.I[9].O => vdadd[2].D (0.03010299956)
     add-goal [1869] [CONN] input.I[10].O => vdadd[6].D (0.03010299956)
     add-goal [1870] [CONN] input.I[11].O => vdadd[4].D (0.03010299956)
     add-goal [1871] [CONN] vdadd[6].OUT => output.V[0].X (LacLp)
     add-goal [1872] [CONN] vdadd[0].OUT => output.V[1].X (clm)
     add-goal [1873] [CONN] vdadd[4].OUT => output.V[2].X (clp)
     add-goal [1874] [CONN] vdadd[2].OUT => output.V[3].X (TetRp)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1732] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1726] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1729] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1727] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1725] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1728] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1731] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1724] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[1856] [CONN] input.I[2].O => ihill_rep[9].Vmax (0.4995)
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1870] [CONN] input.I[11].O => vdadd[4].D (0.03010299956)
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1869] [CONN] input.I[10].O => vdadd[6].D (0.03010299956)
[1860] [CONN] input.I[4].O => ihill_rep[7].Km (40)
[1864] [CONN] input.V[10].O => vgain[1].X (3.01029995664)
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1852] [CONN] input.V[5].O => vdadd[6].B (0)
[1732] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1849] [CONN] input.V[2].O => ihill_rep[8].n (2)
[1866] [CONN] input.I[8].O => itov[3].X (3.01029995664)
[1871] [CONN] vdadd[6].OUT => output.V[0].X (LacLp)
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1850] [CONN] input.V[3].O => vdadd[6].OUT_0 (60)
[1863] [CONN] input.V[9].O => vdadd[0].OUT_0 (0.25)
[1868] [CONN] input.I[9].O => vdadd[2].D (0.03010299956)
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1855] [CONN] input.I[1].O => ihill_rep[7].Vmax (0.4995)
[1859] [CONN] input.V[8].O => vdadd[2].OUT_0 (40)
[1862] [CONN] input.I[6].O => ihill_rep[8].Km (40)
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1857] [CONN] input.I[3].O => ihill_rep[8].Vmax (0.4995)
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1846] [CONN] ihill_rep[8].REP => vdadd[0].A (TRclp)
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1867] [CONN] input.V[11].O => vdadd[4].OUT_0 (20)
[1726] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1851] [CONN] input.V[4].O => vdadd[2].B (0)
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1729] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1847] [CONN] input.V[0].O => ihill_rep[7].n (2)
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1842] [CONN] vdadd[6].OUT => ihill_rep[7].S (LacLp)
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1727] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1843] [CONN] vdadd[0].OUT => itov[3].K (clm)
[1854] [CONN] input.I[0].O => vdadd[0].D (0.15051499783)
[1853] [CONN] input.V[6].O => vdadd[4].B (0)
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1872] [CONN] vdadd[0].OUT => output.V[1].X (clm)
[1845] [CONN] vdadd[2].OUT => ihill_rep[8].S (TetRp)
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1861] [CONN] input.I[5].O => ihill_rep[9].Km (40)
[1873] [CONN] vdadd[4].OUT => output.V[2].X (clp)
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1725] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1728] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1848] [CONN] input.V[1].O => ihill_rep[9].n (2)
[1874] [CONN] vdadd[2].OUT => output.V[3].X (TetRp)
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1731] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1844] [CONN] vdadd[4].OUT => ihill_rep[9].S (clp)
[1724] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1858] [CONN] input.V[7].O => vdadd[0].B (0.0005)
[1865] [CONN] input.I[7].O => itov[5].X (3.01029995664)
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> Current Goal: [1865] [CONN] input.I[7].O => itov[5].X (3.01029995664)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->itov.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->itov.K
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>ihill_rep.REP->vdadd.A
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->itov.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vgain.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 3
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=58

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] [TERMINATE] found 0 / 1
[eqn] [TERMINATE] could not find another node
[multi]   >> Found # Global Solutions: 1/1
[multi] >>>SOLUTION IS UNFINISHED <<<
[multi]  > Added Local Solution
[multi]  > Finding Global Solution
[multi] found # steps: 32
[multi] found # steps: 43
[multi] found # steps: 43
[multi] found # steps: 43
[multi] found # steps: 30
[multi] found # steps: 30
[multi] found # steps: 30
[multi] # partial ids = 7
[multi]    remove-goal [1730] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   remove-goal [893] [EXPR]vdadd[2].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1154] [EXPR]vdadd[4].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1451] [EXPR]vdadd[6].A<V>=(3.01029995664*LacLm)
   remove-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] vdadd[0] cfg-in OUT_0=0.25
   [comp] vdadd[0] cfg-in OUT=clm
   [comp] vdadd[0] cfg-param BSW=1
   [comp] vdadd[0] cfg-param DSW=1
   [comp] vdadd[0] cfg-in B=TRclp
   [comp] vdadd[0] cfg-in D=0.15051499783
   [comp] vdadd[0] cfg-in A=0.0005
   [comp] vgain[1] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[1] cfg-in Z=TetRm
   [comp] vgain[1] cfg-in X=3.01029995664
   [comp] vdadd[2] cfg-in OUT_0=40
   [comp] vdadd[2] cfg-in OUT=TetRp
   [comp] vdadd[2] cfg-param BSW=1
   [comp] vdadd[2] cfg-param DSW=1
   [comp] vdadd[2] cfg-in B=0
   [comp] vdadd[2] cfg-in D=0.03010299956
   [comp] vdadd[2] cfg-in A=(3.01029995664*TetRm)
   [comp] itov[3] cfg-in Y=(3.01029995664*clm)
   [comp] itov[3] cfg-in K=clm
   [comp] itov[3] cfg-in X=3.01029995664
   [comp] vdadd[4] cfg-in OUT_0=20
   [comp] vdadd[4] cfg-in OUT=clp
   [comp] vdadd[4] cfg-param BSW=1
   [comp] vdadd[4] cfg-param DSW=1
   [comp] vdadd[4] cfg-in D=0.03010299956
   [comp] vdadd[4] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[4] cfg-in B=0
   [comp] itov[5] cfg-in Y=(3.01029995664*LacLm)
   [comp] itov[5] cfg-in K=LacLm
   [comp] itov[5] cfg-in X=3.01029995664
   [comp] vdadd[6] cfg-in OUT_0=60
   [comp] vdadd[6] cfg-in OUT=LacLp
   [comp] vdadd[6] cfg-param BSW=1
   [comp] vdadd[6] cfg-param DSW=1
   [comp] vdadd[6] cfg-in D=0.03010299956
   [comp] vdadd[6] cfg-in A=(3.01029995664*LacLm)
   [comp] vdadd[6] cfg-in B=0
   [comp] ihill_rep[7] cfg-in REP=TRTetR
   [comp] ihill_rep[7] cfg-in n=2
   [comp] ihill_rep[7] cfg-in S=LacLp
   [comp] ihill_rep[7] cfg-in Vmax=0.4995
   [comp] ihill_rep[7] cfg-in Km=40
   [comp] ihill_rep[8] cfg-in REP=TRclp
   [comp] ihill_rep[8] cfg-in n=2
   [comp] ihill_rep[8] cfg-in S=TetRp
   [comp] ihill_rep[8] cfg-in Vmax=0.4995
   [comp] ihill_rep[8] cfg-in Km=40
   [comp] ihill_rep[9] cfg-in REP=TRLacL
   [comp] ihill_rep[9] cfg-in n=2
   [comp] ihill_rep[9] cfg-in S=clp
   [comp] ihill_rep[9] cfg-in Vmax=0.4995
   [comp] ihill_rep[9] cfg-in Km=40
   [sln] generate vdadd[0].OUT = clm
   [sln] add-comp vdadd[0]
   [sln] generate vgain[1].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[1]
   [sln] generate vgain[1].P = (3.01029995664*TetRm)
   [sln] conn vgain[1].P->vdadd[2].A
   [sln] generate vdadd[2].OUT = TetRp
   [sln] add-comp vdadd[2]
   [sln] generate itov[3].Y = (3.01029995664*clm)
   [sln] add-comp itov[3]
   [sln] generate itov[3].Y = (3.01029995664*clm)
   [sln] conn itov[3].Y->vdadd[4].A
   [sln] generate vdadd[4].OUT = clp
   [sln] add-comp vdadd[4]
   [sln] generate itov[5].Y = (3.01029995664*LacLm)
   [sln] add-comp itov[5]
   [sln] generate itov[5].Y = (3.01029995664*LacLm)
   [sln] conn itov[5].Y->vdadd[6].A
   [sln] generate vdadd[6].OUT = LacLp
   [sln] add-comp vdadd[6]
   [sln] generate ihill_rep[7].REP = TRTetR
   [sln] add-comp ihill_rep[7]
   [sln] generate ihill_rep[8].REP = TRclp
   [sln] add-comp ihill_rep[8]
   [sln] generate ihill_rep[9].REP = TRLacL
   [sln] add-comp ihill_rep[9]
   [sln] route vdadd[0].OUT_0 = 0.25
   [sln] route vdadd[0].B = TRclp
   [sln] route vdadd[0].D = 0.15051499783
   [sln] route vdadd[0].A = 0.0005
   [sln] route vgain[1].Z = TetRm
   [sln] route vgain[1].X = 3.01029995664
   [sln] route vdadd[2].OUT_0 = 40
   [sln] route vdadd[2].B = 0
   [sln] route vdadd[2].D = 0.03010299956
   [sln] route itov[3].K = clm
   [sln] route itov[3].X = 3.01029995664
   [sln] route vdadd[4].OUT_0 = 20
   [sln] route vdadd[4].D = 0.03010299956
   [sln] route vdadd[4].B = 0
   [sln] route itov[5].K = LacLm
   [sln] route itov[5].X = 3.01029995664
   [sln] route vdadd[6].OUT_0 = 60
   [sln] route vdadd[6].D = 0.03010299956
   [sln] route vdadd[6].B = 0
   [sln] route ihill_rep[7].n = 2
   [sln] route ihill_rep[7].S = LacLp
   [sln] route ihill_rep[7].Vmax = 0.4995
   [sln] route ihill_rep[7].Km = 40
   [sln] route ihill_rep[8].n = 2
   [sln] route ihill_rep[8].S = TetRp
   [sln] route ihill_rep[8].Vmax = 0.4995
   [sln] route ihill_rep[8].Km = 40
   [sln] route ihill_rep[9].n = 2
   [sln] route ihill_rep[9].S = clp
   [sln] route ihill_rep[9].Vmax = 0.4995
   [sln] route ihill_rep[9].Km = 40
   [comp] make-comp vdadd0
   [comp] make-comp vgain1
   [comp] make-comp vdadd2
   [comp] make-comp itov3
   [comp] make-comp vdadd4
   [comp] make-comp itov5
   [comp] make-comp vdadd6
   [comp] make-comp ihill_rep7
   [comp] make-comp ihill_rep8
   [comp] make-comp ihill_rep9
   change-goal-status 1724 to disabled
   change-goal-status 1725 to disabled
   change-goal-status 1726 to disabled
   change-goal-status 1727 to disabled
   change-goal-status 1728 to disabled
   change-goal-status 1729 to disabled
   change-goal-status 1731 to disabled
   change-goal-status 1732 to disabled
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 1391 to disabled
   change-goal-status 1392 to disabled
   change-goal-status 1393 to disabled
   change-goal-status 1394 to disabled
   change-goal-status 1396 to disabled
   change-goal-status 1397 to disabled
   change-goal-status 1398 to disabled
   change-goal-status 1399 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [1724] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1725] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1726] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1727] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1728] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1729] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1730] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1731] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1732] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[2].A<V>=(3.01029995664*TetRm)
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[4].A<V>=(3.01029995664*clm)
   add-goal [1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1451] [EXPR]vdadd[6].A<V>=(3.01029995664*LacLm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ==== ROUTES =====
[multi] > vgain[1].Z = TetRm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[7].S = LacLp
[multi]    - connecting generates to routes.
[multi] > itov[5].K = LacLm
[multi]    - connecting generates to routes.
[multi] > itov[3].K = clm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[9].S = clp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[8].S = TetRp
[multi]    - connecting generates to routes.
[multi] > vdadd[0].B = TRclp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[7].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[9].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[8].n = 2
[multi]    - making an input block.
[multi] > vdadd[6].OUT_0 = 60
[multi]    - making an input block.
[multi] > vdadd[2].B = 0
[multi]    - making an input block.
[multi] > vdadd[6].B = 0
[multi]    - making an input block.
[multi] > vdadd[4].B = 0
[multi]    - making an input block.
[multi] > vdadd[0].D = 0.15051499783
[multi]    - making an input block.
[multi] > ihill_rep[7].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[9].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[8].Vmax = 0.4995
[multi]    - making an input block.
[multi] > vdadd[0].A = 0.0005
[multi]    - making an input block.
[multi] > vdadd[2].OUT_0 = 40
[multi]    - making an input block.
[multi] > ihill_rep[7].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[9].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[8].Km = 40
[multi]    - making an input block.
[multi] > vdadd[0].OUT_0 = 0.25
[multi]    - making an input block.
[multi] > vgain[1].X = 3.01029995664
[multi]    - making an input block.
[multi] > itov[5].X = 3.01029995664
[multi]    - making an input block.
[multi] > itov[3].X = 3.01029995664
[multi]    - making an input block.
[multi] > vdadd[4].OUT_0 = 20
[multi]    - making an input block.
[multi] > vdadd[2].D = 0.03010299956
[multi]    - making an input block.
[multi] > vdadd[6].D = 0.03010299956
[multi]    - making an input block.
[multi] > vdadd[4].D = 0.03010299956
[multi]    - making an input block.
[multi] ==== GENERATES =====
[multi] > vdadd[6].OUT = LacLp
[multi]    - making an output block.
[multi] > vdadd[0].OUT = clm
[multi]    - making an output block.
[multi] > vdadd[4].OUT = clp
[multi]    - making an output block.
[multi] > vdadd[2].OUT = TetRp
[multi]    - making an output block.
[multi] > ihill_rep[7].REP = TRTetR
[multi] > ihill_rep[9].REP = TRLacL
[multi] > ihill_rep[8].REP = TRclp
[multi] > itov[3].Y = (3.01029995664*clm)
[multi] > itov[3].Y = (3.01029995664*clm)
[multi] > itov[5].Y = (3.01029995664*LacLm)
[multi] > itov[5].Y = (3.01029995664*LacLm)
[multi] > vgain[1].P = (3.01029995664*TetRm)
[multi] > vgain[1].P = (3.01029995664*TetRm)
[multi] --> Number of options 33
[multi] --> Number of nodes 1
[multi] ======= Partial (Root) Steps 251 =======
[multi]    remove-goal [1730] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   remove-goal [893] [EXPR]vdadd[2].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1154] [EXPR]vdadd[4].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1451] [EXPR]vdadd[6].A<V>=(3.01029995664*LacLm)
   remove-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] vdadd[0] cfg-in OUT_0=0.25
   [comp] vdadd[0] cfg-in OUT=clm
   [comp] vdadd[0] cfg-param BSW=1
   [comp] vdadd[0] cfg-param DSW=1
   [comp] vdadd[0] cfg-in B=TRclp
   [comp] vdadd[0] cfg-in D=0.15051499783
   [comp] vdadd[0] cfg-in A=0.0005
   [comp] vgain[1] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[1] cfg-in Z=TetRm
   [comp] vgain[1] cfg-in X=3.01029995664
   [comp] vdadd[2] cfg-in OUT_0=40
   [comp] vdadd[2] cfg-in OUT=TetRp
   [comp] vdadd[2] cfg-param BSW=1
   [comp] vdadd[2] cfg-param DSW=1
   [comp] vdadd[2] cfg-in B=0
   [comp] vdadd[2] cfg-in D=0.03010299956
   [comp] vdadd[2] cfg-in A=(3.01029995664*TetRm)
   [comp] itov[3] cfg-in Y=(3.01029995664*clm)
   [comp] itov[3] cfg-in K=clm
   [comp] itov[3] cfg-in X=3.01029995664
   [comp] vdadd[4] cfg-in OUT_0=20
   [comp] vdadd[4] cfg-in OUT=clp
   [comp] vdadd[4] cfg-param BSW=1
   [comp] vdadd[4] cfg-param DSW=1
   [comp] vdadd[4] cfg-in D=0.03010299956
   [comp] vdadd[4] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[4] cfg-in B=0
   [comp] itov[5] cfg-in Y=(3.01029995664*LacLm)
   [comp] itov[5] cfg-in K=LacLm
   [comp] itov[5] cfg-in X=3.01029995664
   [comp] vdadd[6] cfg-in OUT_0=60
   [comp] vdadd[6] cfg-in OUT=LacLp
   [comp] vdadd[6] cfg-param BSW=1
   [comp] vdadd[6] cfg-param DSW=1
   [comp] vdadd[6] cfg-in D=0.03010299956
   [comp] vdadd[6] cfg-in A=(3.01029995664*LacLm)
   [comp] vdadd[6] cfg-in B=0
   [comp] ihill_rep[7] cfg-in REP=TRTetR
   [comp] ihill_rep[7] cfg-in n=2
   [comp] ihill_rep[7] cfg-in S=LacLp
   [comp] ihill_rep[7] cfg-in Vmax=0.4995
   [comp] ihill_rep[7] cfg-in Km=40
   [comp] ihill_rep[8] cfg-in REP=TRclp
   [comp] ihill_rep[8] cfg-in n=2
   [comp] ihill_rep[8] cfg-in S=TetRp
   [comp] ihill_rep[8] cfg-in Vmax=0.4995
   [comp] ihill_rep[8] cfg-in Km=40
   [comp] ihill_rep[9] cfg-in REP=TRLacL
   [comp] ihill_rep[9] cfg-in n=2
   [comp] ihill_rep[9] cfg-in S=clp
   [comp] ihill_rep[9] cfg-in Vmax=0.4995
   [comp] ihill_rep[9] cfg-in Km=40
   [sln] generate vdadd[0].OUT = clm
   [sln] add-comp vdadd[0]
   [sln] generate vgain[1].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[1]
   [sln] generate vgain[1].P = (3.01029995664*TetRm)
   [sln] conn vgain[1].P->vdadd[2].A
   [sln] generate vdadd[2].OUT = TetRp
   [sln] add-comp vdadd[2]
   [sln] generate itov[3].Y = (3.01029995664*clm)
   [sln] add-comp itov[3]
   [sln] generate itov[3].Y = (3.01029995664*clm)
   [sln] conn itov[3].Y->vdadd[4].A
   [sln] generate vdadd[4].OUT = clp
   [sln] add-comp vdadd[4]
   [sln] generate itov[5].Y = (3.01029995664*LacLm)
   [sln] add-comp itov[5]
   [sln] generate itov[5].Y = (3.01029995664*LacLm)
   [sln] conn itov[5].Y->vdadd[6].A
   [sln] generate vdadd[6].OUT = LacLp
   [sln] add-comp vdadd[6]
   [sln] generate ihill_rep[7].REP = TRTetR
   [sln] add-comp ihill_rep[7]
   [sln] generate ihill_rep[8].REP = TRclp
   [sln] add-comp ihill_rep[8]
   [sln] generate ihill_rep[9].REP = TRLacL
   [sln] add-comp ihill_rep[9]
   [sln] route vdadd[0].OUT_0 = 0.25
   [sln] route vdadd[0].B = TRclp
   [sln] route vdadd[0].D = 0.15051499783
   [sln] route vdadd[0].A = 0.0005
   [sln] route vgain[1].Z = TetRm
   [sln] route vgain[1].X = 3.01029995664
   [sln] route vdadd[2].OUT_0 = 40
   [sln] route vdadd[2].B = 0
   [sln] route vdadd[2].D = 0.03010299956
   [sln] route itov[3].K = clm
   [sln] route itov[3].X = 3.01029995664
   [sln] route vdadd[4].OUT_0 = 20
   [sln] route vdadd[4].D = 0.03010299956
   [sln] route vdadd[4].B = 0
   [sln] route itov[5].K = LacLm
   [sln] route itov[5].X = 3.01029995664
   [sln] route vdadd[6].OUT_0 = 60
   [sln] route vdadd[6].D = 0.03010299956
   [sln] route vdadd[6].B = 0
   [sln] route ihill_rep[7].n = 2
   [sln] route ihill_rep[7].S = LacLp
   [sln] route ihill_rep[7].Vmax = 0.4995
   [sln] route ihill_rep[7].Km = 40
   [sln] route ihill_rep[8].n = 2
   [sln] route ihill_rep[8].S = TetRp
   [sln] route ihill_rep[8].Vmax = 0.4995
   [sln] route ihill_rep[8].Km = 40
   [sln] route ihill_rep[9].n = 2
   [sln] route ihill_rep[9].S = clp
   [sln] route ihill_rep[9].Vmax = 0.4995
   [sln] route ihill_rep[9].Km = 40
   [comp] make-comp vdadd0
   [comp] make-comp vgain1
   [comp] make-comp vdadd2
   [comp] make-comp itov3
   [comp] make-comp vdadd4
   [comp] make-comp itov5
   [comp] make-comp vdadd6
   [comp] make-comp ihill_rep7
   [comp] make-comp ihill_rep8
   [comp] make-comp ihill_rep9
   change-goal-status 1724 to disabled
   change-goal-status 1725 to disabled
   change-goal-status 1726 to disabled
   change-goal-status 1727 to disabled
   change-goal-status 1728 to disabled
   change-goal-status 1729 to disabled
   change-goal-status 1731 to disabled
   change-goal-status 1732 to disabled
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 1391 to disabled
   change-goal-status 1392 to disabled
   change-goal-status 1393 to disabled
   change-goal-status 1394 to disabled
   change-goal-status 1396 to disabled
   change-goal-status 1397 to disabled
   change-goal-status 1398 to disabled
   change-goal-status 1399 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [1724] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1725] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1726] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1727] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1728] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1729] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1730] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1731] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1732] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[2].A<V>=(3.01029995664*TetRm)
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[4].A<V>=(3.01029995664*clm)
   add-goal [1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1451] [EXPR]vdadd[6].A<V>=(3.01029995664*LacLm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ============================
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.V[0] cfg-in X=2
     [comp] input.V[0] cfg-out O=2
     [comp] input.V[1] cfg-in X=2
     [comp] input.V[1] cfg-out O=2
     [comp] input.V[2] cfg-in X=2
     [comp] input.V[2] cfg-out O=2
     [comp] input.V[3] cfg-in X=60
     [comp] input.V[3] cfg-out O=60
     [comp] input.V[4] cfg-in X=0
     [comp] input.V[4] cfg-out O=0
     [comp] input.V[5] cfg-in X=0
     [comp] input.V[5] cfg-out O=0
     [comp] input.V[6] cfg-in X=0
     [comp] input.V[6] cfg-out O=0
     [comp] input.I[0] cfg-in X=0.15051499783
     [comp] input.I[0] cfg-out O=0.15051499783
     [comp] input.I[1] cfg-in X=0.4995
     [comp] input.I[1] cfg-out O=0.4995
     [comp] input.I[2] cfg-in X=0.4995
     [comp] input.I[2] cfg-out O=0.4995
     [comp] input.I[3] cfg-in X=0.4995
     [comp] input.I[3] cfg-out O=0.4995
     [comp] input.V[7] cfg-in X=0.0005
     [comp] input.V[7] cfg-out O=0.0005
     [comp] input.V[8] cfg-in X=40
     [comp] input.V[8] cfg-out O=40
     [comp] input.I[4] cfg-in X=40
     [comp] input.I[4] cfg-out O=40
     [comp] input.I[5] cfg-in X=40
     [comp] input.I[5] cfg-out O=40
     [comp] input.I[6] cfg-in X=40
     [comp] input.I[6] cfg-out O=40
     [comp] input.V[9] cfg-in X=0.25
     [comp] input.V[9] cfg-out O=0.25
     [comp] input.V[10] cfg-in X=3.01029995664
     [comp] input.V[10] cfg-out O=3.01029995664
     [comp] input.I[7] cfg-in X=3.01029995664
     [comp] input.I[7] cfg-out O=3.01029995664
     [comp] input.I[8] cfg-in X=3.01029995664
     [comp] input.I[8] cfg-out O=3.01029995664
     [comp] input.V[11] cfg-in X=20
     [comp] input.V[11] cfg-out O=20
     [comp] input.I[9] cfg-in X=0.03010299956
     [comp] input.I[9] cfg-out O=0.03010299956
     [comp] input.I[10] cfg-in X=0.03010299956
     [comp] input.I[10] cfg-out O=0.03010299956
     [comp] input.I[11] cfg-in X=0.03010299956
     [comp] input.I[11] cfg-out O=0.03010299956
     [comp] output.V[0] cfg-in X=LacLp
     [comp] output.V[0] cfg-out O=LacLp
     [comp] output.V[1] cfg-in X=clm
     [comp] output.V[1] cfg-out O=clm
     [comp] output.V[2] cfg-in X=clp
     [comp] output.V[2] cfg-out O=clp
     [comp] output.V[3] cfg-in X=TetRp
     [comp] output.V[3] cfg-out O=TetRp
     [sln] rm-route ihill_rep[7].S = LacLp
     [sln] rm-route itov[3].K = clm
     [sln] rm-route ihill_rep[9].S = clp
     [sln] rm-route ihill_rep[8].S = TetRp
     [sln] rm-route vdadd[0].B = TRclp
     [sln] rm-route ihill_rep[7].n = 2
     [sln] add-comp input.V[0]
     [sln] generate input.V[0].O = 2
     [sln] rm-route ihill_rep[9].n = 2
     [sln] add-comp input.V[1]
     [sln] generate input.V[1].O = 2
     [sln] rm-route ihill_rep[8].n = 2
     [sln] add-comp input.V[2]
     [sln] generate input.V[2].O = 2
     [sln] rm-route vdadd[6].OUT_0 = 60
     [sln] add-comp input.V[3]
     [sln] generate input.V[3].O = 60
     [sln] rm-route vdadd[2].B = 0
     [sln] add-comp input.V[4]
     [sln] generate input.V[4].O = 0
     [sln] rm-route vdadd[6].B = 0
     [sln] add-comp input.V[5]
     [sln] generate input.V[5].O = 0
     [sln] rm-route vdadd[4].B = 0
     [sln] add-comp input.V[6]
     [sln] generate input.V[6].O = 0
     [sln] rm-route vdadd[0].D = 0.15051499783
     [sln] add-comp input.I[0]
     [sln] generate input.I[0].O = 0.15051499783
     [sln] rm-route ihill_rep[7].Vmax = 0.4995
     [sln] add-comp input.I[1]
     [sln] generate input.I[1].O = 0.4995
     [sln] rm-route ihill_rep[9].Vmax = 0.4995
     [sln] add-comp input.I[2]
     [sln] generate input.I[2].O = 0.4995
     [sln] rm-route ihill_rep[8].Vmax = 0.4995
     [sln] add-comp input.I[3]
     [sln] generate input.I[3].O = 0.4995
     [sln] rm-route vdadd[0].A = 0.0005
     [sln] add-comp input.V[7]
     [sln] generate input.V[7].O = 0.0005
     [sln] rm-route vdadd[2].OUT_0 = 40
     [sln] add-comp input.V[8]
     [sln] generate input.V[8].O = 40
     [sln] rm-route ihill_rep[7].Km = 40
     [sln] add-comp input.I[4]
     [sln] generate input.I[4].O = 40
     [sln] rm-route ihill_rep[9].Km = 40
     [sln] add-comp input.I[5]
     [sln] generate input.I[5].O = 40
     [sln] rm-route ihill_rep[8].Km = 40
     [sln] add-comp input.I[6]
     [sln] generate input.I[6].O = 40
     [sln] rm-route vdadd[0].OUT_0 = 0.25
     [sln] add-comp input.V[9]
     [sln] generate input.V[9].O = 0.25
     [sln] rm-route vgain[1].X = 3.01029995664
     [sln] add-comp input.V[10]
     [sln] generate input.V[10].O = 3.01029995664
     [sln] rm-route itov[5].X = 3.01029995664
     [sln] add-comp input.I[7]
     [sln] generate input.I[7].O = 3.01029995664
     [sln] rm-route itov[3].X = 3.01029995664
     [sln] add-comp input.I[8]
     [sln] generate input.I[8].O = 3.01029995664
     [sln] rm-route vdadd[4].OUT_0 = 20
     [sln] add-comp input.V[11]
     [sln] generate input.V[11].O = 20
     [sln] rm-route vdadd[2].D = 0.03010299956
     [sln] add-comp input.I[9]
     [sln] generate input.I[9].O = 0.03010299956
     [sln] rm-route vdadd[6].D = 0.03010299956
     [sln] add-comp input.I[10]
     [sln] generate input.I[10].O = 0.03010299956
     [sln] rm-route vdadd[4].D = 0.03010299956
     [sln] add-comp input.I[11]
     [sln] generate input.I[11].O = 0.03010299956
     [sln] add-comp output.V[0]
     [sln] generate output.V[0].O = LacLp
     [sln] add-comp output.V[1]
     [sln] generate output.V[1].O = clm
     [sln] add-comp output.V[2]
     [sln] generate output.V[2].O = clp
     [sln] add-comp output.V[3]
     [sln] generate output.V[3].O = TetRp
     [sln] route input.V[0].X = 2
     [sln] route input.V[1].X = 2
     [sln] route input.V[2].X = 2
     [sln] route input.V[3].X = 60
     [sln] route input.V[4].X = 0
     [sln] route input.V[5].X = 0
     [sln] route input.V[6].X = 0
     [sln] route input.I[0].X = 0.15051499783
     [sln] route input.I[1].X = 0.4995
     [sln] route input.I[2].X = 0.4995
     [sln] route input.I[3].X = 0.4995
     [sln] route input.V[7].X = 0.0005
     [sln] route input.V[8].X = 40
     [sln] route input.I[4].X = 40
     [sln] route input.I[5].X = 40
     [sln] route input.I[6].X = 40
     [sln] route input.V[9].X = 0.25
     [sln] route input.V[10].X = 3.01029995664
     [sln] route input.I[7].X = 3.01029995664
     [sln] route input.I[8].X = 3.01029995664
     [sln] route input.V[11].X = 20
     [sln] route input.I[9].X = 0.03010299956
     [sln] route input.I[10].X = 0.03010299956
     [sln] route input.I[11].X = 0.03010299956
     [comp] make-comp input.V0
     [comp] make-comp input.V1
     [comp] make-comp input.V2
     [comp] make-comp input.V3
     [comp] make-comp input.V4
     [comp] make-comp input.V5
     [comp] make-comp input.V6
     [comp] make-comp input.I0
     [comp] make-comp input.I1
     [comp] make-comp input.I2
     [comp] make-comp input.I3
     [comp] make-comp input.V7
     [comp] make-comp input.V8
     [comp] make-comp input.I4
     [comp] make-comp input.I5
     [comp] make-comp input.I6
     [comp] make-comp input.V9
     [comp] make-comp input.V10
     [comp] make-comp input.I7
     [comp] make-comp input.I8
     [comp] make-comp input.V11
     [comp] make-comp input.I9
     [comp] make-comp input.I10
     [comp] make-comp input.I11
     [comp] make-comp output.V0
     [comp] make-comp output.V1
     [comp] make-comp output.V2
     [comp] make-comp output.V3
     add-goal [1875] [CONN] vdadd[6].OUT => ihill_rep[7].S (LacLp)
     add-goal [1876] [CONN] vdadd[0].OUT => itov[3].K (clm)
     add-goal [1877] [CONN] vdadd[4].OUT => ihill_rep[9].S (clp)
     add-goal [1878] [CONN] vdadd[2].OUT => ihill_rep[8].S (TetRp)
     add-goal [1879] [CONN] ihill_rep[8].REP => vdadd[0].B (TRclp)
     add-goal [1880] [CONN] input.V[0].O => ihill_rep[7].n (2)
     add-goal [1881] [CONN] input.V[1].O => ihill_rep[9].n (2)
     add-goal [1882] [CONN] input.V[2].O => ihill_rep[8].n (2)
     add-goal [1883] [CONN] input.V[3].O => vdadd[6].OUT_0 (60)
     add-goal [1884] [CONN] input.V[4].O => vdadd[2].B (0)
     add-goal [1885] [CONN] input.V[5].O => vdadd[6].B (0)
     add-goal [1886] [CONN] input.V[6].O => vdadd[4].B (0)
     add-goal [1887] [CONN] input.I[0].O => vdadd[0].D (0.15051499783)
     add-goal [1888] [CONN] input.I[1].O => ihill_rep[7].Vmax (0.4995)
     add-goal [1889] [CONN] input.I[2].O => ihill_rep[9].Vmax (0.4995)
     add-goal [1890] [CONN] input.I[3].O => ihill_rep[8].Vmax (0.4995)
     add-goal [1891] [CONN] input.V[7].O => vdadd[0].A (0.0005)
     add-goal [1892] [CONN] input.V[8].O => vdadd[2].OUT_0 (40)
     add-goal [1893] [CONN] input.I[4].O => ihill_rep[7].Km (40)
     add-goal [1894] [CONN] input.I[5].O => ihill_rep[9].Km (40)
     add-goal [1895] [CONN] input.I[6].O => ihill_rep[8].Km (40)
     add-goal [1896] [CONN] input.V[9].O => vdadd[0].OUT_0 (0.25)
     add-goal [1897] [CONN] input.V[10].O => vgain[1].X (3.01029995664)
     add-goal [1898] [CONN] input.I[7].O => itov[5].X (3.01029995664)
     add-goal [1899] [CONN] input.I[8].O => itov[3].X (3.01029995664)
     add-goal [1900] [CONN] input.V[11].O => vdadd[4].OUT_0 (20)
     add-goal [1901] [CONN] input.I[9].O => vdadd[2].D (0.03010299956)
     add-goal [1902] [CONN] input.I[10].O => vdadd[6].D (0.03010299956)
     add-goal [1903] [CONN] input.I[11].O => vdadd[4].D (0.03010299956)
     add-goal [1904] [CONN] vdadd[6].OUT => output.V[0].X (LacLp)
     add-goal [1905] [CONN] vdadd[0].OUT => output.V[1].X (clm)
     add-goal [1906] [CONN] vdadd[4].OUT => output.V[2].X (clp)
     add-goal [1907] [CONN] vdadd[2].OUT => output.V[3].X (TetRp)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1732] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1726] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1729] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1727] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1725] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1728] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1731] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1724] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[1902] [CONN] input.I[10].O => vdadd[6].D (0.03010299956)
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1883] [CONN] input.V[3].O => vdadd[6].OUT_0 (60)
[1890] [CONN] input.I[3].O => ihill_rep[8].Vmax (0.4995)
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1878] [CONN] vdadd[2].OUT => ihill_rep[8].S (TetRp)
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1886] [CONN] input.V[6].O => vdadd[4].B (0)
[1877] [CONN] vdadd[4].OUT => ihill_rep[9].S (clp)
[1891] [CONN] input.V[7].O => vdadd[0].A (0.0005)
[1892] [CONN] input.V[8].O => vdadd[2].OUT_0 (40)
[1732] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1875] [CONN] vdadd[6].OUT => ihill_rep[7].S (LacLp)
[1900] [CONN] input.V[11].O => vdadd[4].OUT_0 (20)
[1896] [CONN] input.V[9].O => vdadd[0].OUT_0 (0.25)
[1904] [CONN] vdadd[6].OUT => output.V[0].X (LacLp)
[1879] [CONN] ihill_rep[8].REP => vdadd[0].B (TRclp)
[1906] [CONN] vdadd[4].OUT => output.V[2].X (clp)
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1887] [CONN] input.I[0].O => vdadd[0].D (0.15051499783)
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1905] [CONN] vdadd[0].OUT => output.V[1].X (clm)
[1893] [CONN] input.I[4].O => ihill_rep[7].Km (40)
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1903] [CONN] input.I[11].O => vdadd[4].D (0.03010299956)
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1899] [CONN] input.I[8].O => itov[3].X (3.01029995664)
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1888] [CONN] input.I[1].O => ihill_rep[7].Vmax (0.4995)
[1889] [CONN] input.I[2].O => ihill_rep[9].Vmax (0.4995)
[1894] [CONN] input.I[5].O => ihill_rep[9].Km (40)
[1726] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1901] [CONN] input.I[9].O => vdadd[2].D (0.03010299956)
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1880] [CONN] input.V[0].O => ihill_rep[7].n (2)
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1729] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1898] [CONN] input.I[7].O => itov[5].X (3.01029995664)
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1876] [CONN] vdadd[0].OUT => itov[3].K (clm)
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1885] [CONN] input.V[5].O => vdadd[6].B (0)
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1727] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1897] [CONN] input.V[10].O => vgain[1].X (3.01029995664)
[1882] [CONN] input.V[2].O => ihill_rep[8].n (2)
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1725] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1884] [CONN] input.V[4].O => vdadd[2].B (0)
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1728] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1731] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1907] [CONN] vdadd[2].OUT => output.V[3].X (TetRp)
[1724] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1881] [CONN] input.V[1].O => ihill_rep[9].n (2)
[1895] [CONN] input.I[6].O => ihill_rep[8].Km (40)
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> Current Goal: [1895] [CONN] input.I[6].O => ihill_rep[8].Km (40)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vgain.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->itov.K
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->itov.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->itov.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>ihill_rep.REP->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.A
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 3
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=59

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] [TERMINATE] found 0 / 1
[eqn] [TERMINATE] could not find another node
[multi]   >> Found # Global Solutions: 1/1
[multi] >>>SOLUTION IS UNFINISHED <<<
[multi] # Found 0, Required: 1
[multi] solving target: LacLm
[multi] search tree is not exhausted. adding existing:LacLm
[multi] finding new partial solution
[multi] made a partial tree with 9 goals
[multi] find a partial solution
[multi] == Finding Local Solution ==
[multi] == Current # Solutions: 0
[multi] == # New Solutions To Find: 1
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[1911] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1916] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1915] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1913] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1914] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1912] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1910] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1909] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1908] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[1911] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1916] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1915] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1913] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1914] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1912] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1910] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1909] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1908] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}

============
>> Current Goal: [1913] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
vdadd.OUT -> true
mm.XY -> true
[eqn] >>> NUMBER OF COMPATIBLE COMPONENTS  2 <<<
[eqn] new: [0] <vdadd> output OUT.V
<analog-st> ((vdadd.V{A}:+(vdadd.BSW*vdadd.V{B}:))-(vdadd.DSW*vdadd.I{D}:*vdadd.V{OUT}:)) ic=OUT_0.V / std=none 0
<analog-st> [ddt v]=?? {ddt v}->[ddt v]=@
<analog-st> [v]=[0.,12000.] {v}->[v]=@ {v}->*[v]=@


checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 11 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 11 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
[eqn] new: [0] <mm> output XY.V
<analog-st> ((mm.I{kf}:*mm.V{X}:*mm.V{Y}:)-(mm.I{kr}:*mm.V{XY}:)) ic=XY0.V / std=gauss ((0.001*mm.V{XY}:)+0.1)
<analog-st> [ddt v]=?? {ddt v}->[ddt v]=@
<analog-st> [v]=[0.,3200.] {v}->[v]=@ {v}->*[v]=@


[eqn] [FOUND-SOLS] ===> Found <23> solutions
[slvrsearch] > weight--: <mvar-goal>LacLm
[eqn] -> [valid?] testing node 40
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=60

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 37
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=61

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 35
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=62

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 17
[eqn] <<< SAT => VALID >>
[eqn] [search_tree] Found enough solutions
[multi] === returned from partial search ===
[multi] >>> Partial Results Found <<<
[multi] done with search
[multi] found some partial solutions. Will add partial solution node and global
[multi] == Adding Local Solution : 40 ==
[multi] == Adding Local Solution : 37 ==
[multi] == Adding Local Solution : 35 ==
[multi]  > Added Local Solution
[multi]  > Finding Global Solution
[multi] found # steps: 32
[multi] found # steps: 43
[multi] found # steps: 43
[multi] found # steps: 43
[multi] found # steps: 30
[multi] found # steps: 32
[multi] found # steps: 30
[multi] found # steps: 30
[multi] # partial ids = 8
[multi]    remove-goal [1913] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   remove-goal [893] [EXPR]vdadd[2].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1154] [EXPR]vdadd[4].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1451] [EXPR]vdadd[6].A<V>=(3.01029995664*LacLm)
   remove-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [1730] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] vdadd[0] cfg-in OUT_0=0.5
   [comp] vdadd[0] cfg-in OUT=LacLm
   [comp] vdadd[0] cfg-param BSW=1
   [comp] vdadd[0] cfg-param DSW=1
   [comp] vdadd[0] cfg-in B=0.0005
   [comp] vdadd[0] cfg-in D=0.15051499783
   [comp] vdadd[0] cfg-in A=TRLacL
   [comp] vgain[1] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[1] cfg-in Z=TetRm
   [comp] vgain[1] cfg-in X=3.01029995664
   [comp] vdadd[2] cfg-in OUT_0=40
   [comp] vdadd[2] cfg-in OUT=TetRp
   [comp] vdadd[2] cfg-param BSW=1
   [comp] vdadd[2] cfg-param DSW=1
   [comp] vdadd[2] cfg-in B=0
   [comp] vdadd[2] cfg-in D=0.03010299956
   [comp] vdadd[2] cfg-in A=(3.01029995664*TetRm)
   [comp] itov[3] cfg-in Y=(3.01029995664*clm)
   [comp] itov[3] cfg-in K=clm
   [comp] itov[3] cfg-in X=3.01029995664
   [comp] vdadd[4] cfg-in OUT_0=20
   [comp] vdadd[4] cfg-in OUT=clp
   [comp] vdadd[4] cfg-param BSW=1
   [comp] vdadd[4] cfg-param DSW=1
   [comp] vdadd[4] cfg-in D=0.03010299956
   [comp] vdadd[4] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[4] cfg-in B=0
   [comp] itov[5] cfg-in Y=(3.01029995664*LacLm)
   [comp] itov[5] cfg-in K=LacLm
   [comp] itov[5] cfg-in X=3.01029995664
   [comp] vdadd[6] cfg-in OUT_0=60
   [comp] vdadd[6] cfg-in OUT=LacLp
   [comp] vdadd[6] cfg-param BSW=1
   [comp] vdadd[6] cfg-param DSW=1
   [comp] vdadd[6] cfg-in D=0.03010299956
   [comp] vdadd[6] cfg-in A=(3.01029995664*LacLm)
   [comp] vdadd[6] cfg-in B=0
   [comp] ihill_rep[7] cfg-in REP=TRTetR
   [comp] ihill_rep[7] cfg-in n=2
   [comp] ihill_rep[7] cfg-in S=LacLp
   [comp] ihill_rep[7] cfg-in Vmax=0.4995
   [comp] ihill_rep[7] cfg-in Km=40
   [comp] vdadd[8] cfg-in OUT_0=0.25
   [comp] vdadd[8] cfg-in OUT=clm
   [comp] vdadd[8] cfg-param BSW=1
   [comp] vdadd[8] cfg-param DSW=1
   [comp] vdadd[8] cfg-in B=0.0005
   [comp] vdadd[8] cfg-in D=0.15051499783
   [comp] vdadd[8] cfg-in A=TRclp
   [comp] ihill_rep[9] cfg-in REP=TRclp
   [comp] ihill_rep[9] cfg-in n=2
   [comp] ihill_rep[9] cfg-in S=TetRp
   [comp] ihill_rep[9] cfg-in Vmax=0.4995
   [comp] ihill_rep[9] cfg-in Km=40
   [comp] ihill_rep[10] cfg-in REP=TRLacL
   [comp] ihill_rep[10] cfg-in n=2
   [comp] ihill_rep[10] cfg-in S=clp
   [comp] ihill_rep[10] cfg-in Vmax=0.4995
   [comp] ihill_rep[10] cfg-in Km=40
   [sln] generate vdadd[0].OUT = LacLm
   [sln] add-comp vdadd[0]
   [sln] generate vgain[1].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[1]
   [sln] generate vgain[1].P = (3.01029995664*TetRm)
   [sln] conn vgain[1].P->vdadd[2].A
   [sln] generate vdadd[2].OUT = TetRp
   [sln] add-comp vdadd[2]
   [sln] generate itov[3].Y = (3.01029995664*clm)
   [sln] add-comp itov[3]
   [sln] generate itov[3].Y = (3.01029995664*clm)
   [sln] conn itov[3].Y->vdadd[4].A
   [sln] generate vdadd[4].OUT = clp
   [sln] add-comp vdadd[4]
   [sln] generate itov[5].Y = (3.01029995664*LacLm)
   [sln] add-comp itov[5]
   [sln] generate itov[5].Y = (3.01029995664*LacLm)
   [sln] conn itov[5].Y->vdadd[6].A
   [sln] generate vdadd[6].OUT = LacLp
   [sln] add-comp vdadd[6]
   [sln] generate ihill_rep[7].REP = TRTetR
   [sln] add-comp ihill_rep[7]
   [sln] generate vdadd[8].OUT = clm
   [sln] add-comp vdadd[8]
   [sln] generate ihill_rep[9].REP = TRclp
   [sln] add-comp ihill_rep[9]
   [sln] generate ihill_rep[10].REP = TRLacL
   [sln] add-comp ihill_rep[10]
   [sln] route vdadd[0].OUT_0 = 0.5
   [sln] route vdadd[0].B = 0.0005
   [sln] route vdadd[0].D = 0.15051499783
   [sln] route vdadd[0].A = TRLacL
   [sln] route vgain[1].Z = TetRm
   [sln] route vgain[1].X = 3.01029995664
   [sln] route vdadd[2].OUT_0 = 40
   [sln] route vdadd[2].B = 0
   [sln] route vdadd[2].D = 0.03010299956
   [sln] route itov[3].K = clm
   [sln] route itov[3].X = 3.01029995664
   [sln] route vdadd[4].OUT_0 = 20
   [sln] route vdadd[4].D = 0.03010299956
   [sln] route vdadd[4].B = 0
   [sln] route itov[5].K = LacLm
   [sln] route itov[5].X = 3.01029995664
   [sln] route vdadd[6].OUT_0 = 60
   [sln] route vdadd[6].D = 0.03010299956
   [sln] route vdadd[6].B = 0
   [sln] route ihill_rep[7].n = 2
   [sln] route ihill_rep[7].S = LacLp
   [sln] route ihill_rep[7].Vmax = 0.4995
   [sln] route ihill_rep[7].Km = 40
   [sln] route vdadd[8].OUT_0 = 0.25
   [sln] route vdadd[8].B = 0.0005
   [sln] route vdadd[8].D = 0.15051499783
   [sln] route vdadd[8].A = TRclp
   [sln] route ihill_rep[9].n = 2
   [sln] route ihill_rep[9].S = TetRp
   [sln] route ihill_rep[9].Vmax = 0.4995
   [sln] route ihill_rep[9].Km = 40
   [sln] route ihill_rep[10].n = 2
   [sln] route ihill_rep[10].S = clp
   [sln] route ihill_rep[10].Vmax = 0.4995
   [sln] route ihill_rep[10].Km = 40
   [comp] make-comp vdadd0
   [comp] make-comp vgain1
   [comp] make-comp vdadd2
   [comp] make-comp itov3
   [comp] make-comp vdadd4
   [comp] make-comp itov5
   [comp] make-comp vdadd6
   [comp] make-comp ihill_rep7
   [comp] make-comp vdadd8
   [comp] make-comp ihill_rep9
   [comp] make-comp ihill_rep10
   change-goal-status 1908 to disabled
   change-goal-status 1909 to disabled
   change-goal-status 1910 to disabled
   change-goal-status 1911 to disabled
   change-goal-status 1912 to disabled
   change-goal-status 1914 to disabled
   change-goal-status 1915 to disabled
   change-goal-status 1916 to disabled
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 1391 to disabled
   change-goal-status 1392 to disabled
   change-goal-status 1393 to disabled
   change-goal-status 1394 to disabled
   change-goal-status 1396 to disabled
   change-goal-status 1397 to disabled
   change-goal-status 1398 to disabled
   change-goal-status 1399 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 1724 to disabled
   change-goal-status 1725 to disabled
   change-goal-status 1726 to disabled
   change-goal-status 1727 to disabled
   change-goal-status 1728 to disabled
   change-goal-status 1729 to disabled
   change-goal-status 1731 to disabled
   change-goal-status 1732 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [1908] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1909] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1910] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1911] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1912] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1913] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1914] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1915] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1916] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[2].A<V>=(3.01029995664*TetRm)
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[4].A<V>=(3.01029995664*clm)
   add-goal [1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1451] [EXPR]vdadd[6].A<V>=(3.01029995664*LacLm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1724] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1725] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1726] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1727] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1728] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1729] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1730] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1731] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1732] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ==== ROUTES =====
[multi] > vgain[1].Z = TetRm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[7].S = LacLp
[multi]    - connecting generates to routes.
[multi] > itov[5].K = LacLm
[multi]    - connecting generates to routes.
[multi] > itov[3].K = clm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[10].S = clp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[9].S = TetRp
[multi]    - connecting generates to routes.
[multi] > vdadd[0].A = TRLacL
[multi]    - connecting generates to routes.
[multi] > vdadd[8].A = TRclp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[7].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[10].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[9].n = 2
[multi]    - making an input block.
[multi] > vdadd[6].OUT_0 = 60
[multi]    - making an input block.
[multi] > vdadd[2].B = 0
[multi]    - making an input block.
[multi] > vdadd[6].B = 0
[multi]    - making an input block.
[multi] > vdadd[4].B = 0
[multi]    - making an input block.
[multi] > vdadd[0].OUT_0 = 0.5
[multi]    - making an input block.
[multi] > vdadd[8].D = 0.15051499783
[multi]    - making an input block.
[multi] > vdadd[0].D = 0.15051499783
[multi]    - making an input block.
[multi] > ihill_rep[7].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[10].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[9].Vmax = 0.4995
[multi]    - making an input block.
[multi] > vdadd[8].B = 0.0005
[multi]    - making an input block.
[multi] > vdadd[0].B = 0.0005
[multi]    - making an input block.
[multi] > vdadd[2].OUT_0 = 40
[multi]    - making an input block.
[multi] > ihill_rep[7].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[10].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[9].Km = 40
[multi]    - making an input block.
[multi] > vgain[1].X = 3.01029995664
[multi]    - making an input block.
[multi] > itov[5].X = 3.01029995664
[multi]    - making an input block.
[multi] > itov[3].X = 3.01029995664
[multi]    - making an input block.
[multi] > vdadd[8].OUT_0 = 0.25
[multi]    - making an input block.
[multi] > vdadd[4].OUT_0 = 20
[multi]    - making an input block.
[multi] > vdadd[2].D = 0.03010299956
[multi]    - making an input block.
[multi] > vdadd[6].D = 0.03010299956
[multi]    - making an input block.
[multi] > vdadd[4].D = 0.03010299956
[multi]    - making an input block.
[multi] ==== GENERATES =====
[multi] > vdadd[6].OUT = LacLp
[multi]    - making an output block.
[multi] > vdadd[0].OUT = LacLm
[multi]    - making an output block.
[multi] > vdadd[8].OUT = clm
[multi]    - making an output block.
[multi] > vdadd[4].OUT = clp
[multi]    - making an output block.
[multi] > vdadd[2].OUT = TetRp
[multi]    - making an output block.
[multi] > ihill_rep[7].REP = TRTetR
[multi] > ihill_rep[10].REP = TRLacL
[multi] > ihill_rep[9].REP = TRclp
[multi] > itov[3].Y = (3.01029995664*clm)
[multi] > itov[3].Y = (3.01029995664*clm)
[multi] > itov[5].Y = (3.01029995664*LacLm)
[multi] > itov[5].Y = (3.01029995664*LacLm)
[multi] > vgain[1].P = (3.01029995664*TetRm)
[multi] > vgain[1].P = (3.01029995664*TetRm)
[multi] --> Number of options 39
[multi] --> Number of nodes 1
[multi] ======= Partial (Root) Steps 283 =======
[multi]    remove-goal [1913] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   remove-goal [893] [EXPR]vdadd[2].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1154] [EXPR]vdadd[4].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1451] [EXPR]vdadd[6].A<V>=(3.01029995664*LacLm)
   remove-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [1730] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] vdadd[0] cfg-in OUT_0=0.5
   [comp] vdadd[0] cfg-in OUT=LacLm
   [comp] vdadd[0] cfg-param BSW=1
   [comp] vdadd[0] cfg-param DSW=1
   [comp] vdadd[0] cfg-in B=0.0005
   [comp] vdadd[0] cfg-in D=0.15051499783
   [comp] vdadd[0] cfg-in A=TRLacL
   [comp] vgain[1] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[1] cfg-in Z=TetRm
   [comp] vgain[1] cfg-in X=3.01029995664
   [comp] vdadd[2] cfg-in OUT_0=40
   [comp] vdadd[2] cfg-in OUT=TetRp
   [comp] vdadd[2] cfg-param BSW=1
   [comp] vdadd[2] cfg-param DSW=1
   [comp] vdadd[2] cfg-in B=0
   [comp] vdadd[2] cfg-in D=0.03010299956
   [comp] vdadd[2] cfg-in A=(3.01029995664*TetRm)
   [comp] itov[3] cfg-in Y=(3.01029995664*clm)
   [comp] itov[3] cfg-in K=clm
   [comp] itov[3] cfg-in X=3.01029995664
   [comp] vdadd[4] cfg-in OUT_0=20
   [comp] vdadd[4] cfg-in OUT=clp
   [comp] vdadd[4] cfg-param BSW=1
   [comp] vdadd[4] cfg-param DSW=1
   [comp] vdadd[4] cfg-in D=0.03010299956
   [comp] vdadd[4] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[4] cfg-in B=0
   [comp] itov[5] cfg-in Y=(3.01029995664*LacLm)
   [comp] itov[5] cfg-in K=LacLm
   [comp] itov[5] cfg-in X=3.01029995664
   [comp] vdadd[6] cfg-in OUT_0=60
   [comp] vdadd[6] cfg-in OUT=LacLp
   [comp] vdadd[6] cfg-param BSW=1
   [comp] vdadd[6] cfg-param DSW=1
   [comp] vdadd[6] cfg-in D=0.03010299956
   [comp] vdadd[6] cfg-in A=(3.01029995664*LacLm)
   [comp] vdadd[6] cfg-in B=0
   [comp] ihill_rep[7] cfg-in REP=TRTetR
   [comp] ihill_rep[7] cfg-in n=2
   [comp] ihill_rep[7] cfg-in S=LacLp
   [comp] ihill_rep[7] cfg-in Vmax=0.4995
   [comp] ihill_rep[7] cfg-in Km=40
   [comp] vdadd[8] cfg-in OUT_0=0.25
   [comp] vdadd[8] cfg-in OUT=clm
   [comp] vdadd[8] cfg-param BSW=1
   [comp] vdadd[8] cfg-param DSW=1
   [comp] vdadd[8] cfg-in B=0.0005
   [comp] vdadd[8] cfg-in D=0.15051499783
   [comp] vdadd[8] cfg-in A=TRclp
   [comp] ihill_rep[9] cfg-in REP=TRclp
   [comp] ihill_rep[9] cfg-in n=2
   [comp] ihill_rep[9] cfg-in S=TetRp
   [comp] ihill_rep[9] cfg-in Vmax=0.4995
   [comp] ihill_rep[9] cfg-in Km=40
   [comp] ihill_rep[10] cfg-in REP=TRLacL
   [comp] ihill_rep[10] cfg-in n=2
   [comp] ihill_rep[10] cfg-in S=clp
   [comp] ihill_rep[10] cfg-in Vmax=0.4995
   [comp] ihill_rep[10] cfg-in Km=40
   [sln] generate vdadd[0].OUT = LacLm
   [sln] add-comp vdadd[0]
   [sln] generate vgain[1].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[1]
   [sln] generate vgain[1].P = (3.01029995664*TetRm)
   [sln] conn vgain[1].P->vdadd[2].A
   [sln] generate vdadd[2].OUT = TetRp
   [sln] add-comp vdadd[2]
   [sln] generate itov[3].Y = (3.01029995664*clm)
   [sln] add-comp itov[3]
   [sln] generate itov[3].Y = (3.01029995664*clm)
   [sln] conn itov[3].Y->vdadd[4].A
   [sln] generate vdadd[4].OUT = clp
   [sln] add-comp vdadd[4]
   [sln] generate itov[5].Y = (3.01029995664*LacLm)
   [sln] add-comp itov[5]
   [sln] generate itov[5].Y = (3.01029995664*LacLm)
   [sln] conn itov[5].Y->vdadd[6].A
   [sln] generate vdadd[6].OUT = LacLp
   [sln] add-comp vdadd[6]
   [sln] generate ihill_rep[7].REP = TRTetR
   [sln] add-comp ihill_rep[7]
   [sln] generate vdadd[8].OUT = clm
   [sln] add-comp vdadd[8]
   [sln] generate ihill_rep[9].REP = TRclp
   [sln] add-comp ihill_rep[9]
   [sln] generate ihill_rep[10].REP = TRLacL
   [sln] add-comp ihill_rep[10]
   [sln] route vdadd[0].OUT_0 = 0.5
   [sln] route vdadd[0].B = 0.0005
   [sln] route vdadd[0].D = 0.15051499783
   [sln] route vdadd[0].A = TRLacL
   [sln] route vgain[1].Z = TetRm
   [sln] route vgain[1].X = 3.01029995664
   [sln] route vdadd[2].OUT_0 = 40
   [sln] route vdadd[2].B = 0
   [sln] route vdadd[2].D = 0.03010299956
   [sln] route itov[3].K = clm
   [sln] route itov[3].X = 3.01029995664
   [sln] route vdadd[4].OUT_0 = 20
   [sln] route vdadd[4].D = 0.03010299956
   [sln] route vdadd[4].B = 0
   [sln] route itov[5].K = LacLm
   [sln] route itov[5].X = 3.01029995664
   [sln] route vdadd[6].OUT_0 = 60
   [sln] route vdadd[6].D = 0.03010299956
   [sln] route vdadd[6].B = 0
   [sln] route ihill_rep[7].n = 2
   [sln] route ihill_rep[7].S = LacLp
   [sln] route ihill_rep[7].Vmax = 0.4995
   [sln] route ihill_rep[7].Km = 40
   [sln] route vdadd[8].OUT_0 = 0.25
   [sln] route vdadd[8].B = 0.0005
   [sln] route vdadd[8].D = 0.15051499783
   [sln] route vdadd[8].A = TRclp
   [sln] route ihill_rep[9].n = 2
   [sln] route ihill_rep[9].S = TetRp
   [sln] route ihill_rep[9].Vmax = 0.4995
   [sln] route ihill_rep[9].Km = 40
   [sln] route ihill_rep[10].n = 2
   [sln] route ihill_rep[10].S = clp
   [sln] route ihill_rep[10].Vmax = 0.4995
   [sln] route ihill_rep[10].Km = 40
   [comp] make-comp vdadd0
   [comp] make-comp vgain1
   [comp] make-comp vdadd2
   [comp] make-comp itov3
   [comp] make-comp vdadd4
   [comp] make-comp itov5
   [comp] make-comp vdadd6
   [comp] make-comp ihill_rep7
   [comp] make-comp vdadd8
   [comp] make-comp ihill_rep9
   [comp] make-comp ihill_rep10
   change-goal-status 1908 to disabled
   change-goal-status 1909 to disabled
   change-goal-status 1910 to disabled
   change-goal-status 1911 to disabled
   change-goal-status 1912 to disabled
   change-goal-status 1914 to disabled
   change-goal-status 1915 to disabled
   change-goal-status 1916 to disabled
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 1391 to disabled
   change-goal-status 1392 to disabled
   change-goal-status 1393 to disabled
   change-goal-status 1394 to disabled
   change-goal-status 1396 to disabled
   change-goal-status 1397 to disabled
   change-goal-status 1398 to disabled
   change-goal-status 1399 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 1724 to disabled
   change-goal-status 1725 to disabled
   change-goal-status 1726 to disabled
   change-goal-status 1727 to disabled
   change-goal-status 1728 to disabled
   change-goal-status 1729 to disabled
   change-goal-status 1731 to disabled
   change-goal-status 1732 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [1908] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1909] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1910] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1911] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1912] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1913] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1914] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1915] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1916] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[2].A<V>=(3.01029995664*TetRm)
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[4].A<V>=(3.01029995664*clm)
   add-goal [1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1451] [EXPR]vdadd[6].A<V>=(3.01029995664*LacLm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1724] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1725] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1726] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1727] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1728] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1729] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1730] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1731] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1732] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ============================
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.V[0] cfg-in X=2
     [comp] input.V[0] cfg-out O=2
     [comp] input.V[1] cfg-in X=2
     [comp] input.V[1] cfg-out O=2
     [comp] input.V[2] cfg-in X=2
     [comp] input.V[2] cfg-out O=2
     [comp] input.V[3] cfg-in X=60
     [comp] input.V[3] cfg-out O=60
     [comp] input.V[4] cfg-in X=0
     [comp] input.V[4] cfg-out O=0
     [comp] input.V[5] cfg-in X=0
     [comp] input.V[5] cfg-out O=0
     [comp] input.V[6] cfg-in X=0
     [comp] input.V[6] cfg-out O=0
     [comp] input.V[7] cfg-in X=0.5
     [comp] input.V[7] cfg-out O=0.5
     [comp] input.I[0] cfg-in X=0.15051499783
     [comp] input.I[0] cfg-out O=0.15051499783
     [comp] input.I[1] cfg-in X=0.15051499783
     [comp] input.I[1] cfg-out O=0.15051499783
     [comp] input.I[2] cfg-in X=0.4995
     [comp] input.I[2] cfg-out O=0.4995
     [comp] input.I[3] cfg-in X=0.4995
     [comp] input.I[3] cfg-out O=0.4995
     [comp] input.I[4] cfg-in X=0.4995
     [comp] input.I[4] cfg-out O=0.4995
     [comp] input.V[8] cfg-in X=0.0005
     [comp] input.V[8] cfg-out O=0.0005
     [comp] input.V[9] cfg-in X=0.0005
     [comp] input.V[9] cfg-out O=0.0005
     [comp] input.V[10] cfg-in X=40
     [comp] input.V[10] cfg-out O=40
     [comp] input.I[5] cfg-in X=40
     [comp] input.I[5] cfg-out O=40
     [comp] input.I[6] cfg-in X=40
     [comp] input.I[6] cfg-out O=40
     [comp] input.I[7] cfg-in X=40
     [comp] input.I[7] cfg-out O=40
     [comp] input.V[11] cfg-in X=3.01029995664
     [comp] input.V[11] cfg-out O=3.01029995664
     [comp] input.I[8] cfg-in X=3.01029995664
     [comp] input.I[8] cfg-out O=3.01029995664
     [comp] input.I[9] cfg-in X=3.01029995664
     [comp] input.I[9] cfg-out O=3.01029995664
     [comp] input.V[12] cfg-in X=0.25
     [comp] input.V[12] cfg-out O=0.25
     [comp] input.V[13] cfg-in X=20
     [comp] input.V[13] cfg-out O=20
     [comp] input.I[10] cfg-in X=0.03010299956
     [comp] input.I[10] cfg-out O=0.03010299956
     [comp] input.I[11] cfg-in X=0.03010299956
     [comp] input.I[11] cfg-out O=0.03010299956
     [comp] input.I[12] cfg-in X=0.03010299956
     [comp] input.I[12] cfg-out O=0.03010299956
     [comp] output.V[0] cfg-in X=LacLp
     [comp] output.V[0] cfg-out O=LacLp
     [comp] output.V[1] cfg-in X=LacLm
     [comp] output.V[1] cfg-out O=LacLm
     [comp] output.V[2] cfg-in X=clm
     [comp] output.V[2] cfg-out O=clm
     [comp] output.V[3] cfg-in X=clp
     [comp] output.V[3] cfg-out O=clp
     [comp] output.V[4] cfg-in X=TetRp
     [comp] output.V[4] cfg-out O=TetRp
     [sln] rm-route ihill_rep[7].S = LacLp
     [sln] rm-route itov[5].K = LacLm
     [sln] rm-route itov[3].K = clm
     [sln] rm-route ihill_rep[10].S = clp
     [sln] rm-route ihill_rep[9].S = TetRp
     [sln] rm-route vdadd[0].A = TRLacL
     [sln] rm-route vdadd[8].A = TRclp
     [sln] rm-route ihill_rep[7].n = 2
     [sln] add-comp input.V[0]
     [sln] generate input.V[0].O = 2
     [sln] rm-route ihill_rep[10].n = 2
     [sln] add-comp input.V[1]
     [sln] generate input.V[1].O = 2
     [sln] rm-route ihill_rep[9].n = 2
     [sln] add-comp input.V[2]
     [sln] generate input.V[2].O = 2
     [sln] rm-route vdadd[6].OUT_0 = 60
     [sln] add-comp input.V[3]
     [sln] generate input.V[3].O = 60
     [sln] rm-route vdadd[2].B = 0
     [sln] add-comp input.V[4]
     [sln] generate input.V[4].O = 0
     [sln] rm-route vdadd[6].B = 0
     [sln] add-comp input.V[5]
     [sln] generate input.V[5].O = 0
     [sln] rm-route vdadd[4].B = 0
     [sln] add-comp input.V[6]
     [sln] generate input.V[6].O = 0
     [sln] rm-route vdadd[0].OUT_0 = 0.5
     [sln] add-comp input.V[7]
     [sln] generate input.V[7].O = 0.5
     [sln] rm-route vdadd[8].D = 0.15051499783
     [sln] add-comp input.I[0]
     [sln] generate input.I[0].O = 0.15051499783
     [sln] rm-route vdadd[0].D = 0.15051499783
     [sln] add-comp input.I[1]
     [sln] generate input.I[1].O = 0.15051499783
     [sln] rm-route ihill_rep[7].Vmax = 0.4995
     [sln] add-comp input.I[2]
     [sln] generate input.I[2].O = 0.4995
     [sln] rm-route ihill_rep[10].Vmax = 0.4995
     [sln] add-comp input.I[3]
     [sln] generate input.I[3].O = 0.4995
     [sln] rm-route ihill_rep[9].Vmax = 0.4995
     [sln] add-comp input.I[4]
     [sln] generate input.I[4].O = 0.4995
     [sln] rm-route vdadd[8].B = 0.0005
     [sln] add-comp input.V[8]
     [sln] generate input.V[8].O = 0.0005
     [sln] rm-route vdadd[0].B = 0.0005
     [sln] add-comp input.V[9]
     [sln] generate input.V[9].O = 0.0005
     [sln] rm-route vdadd[2].OUT_0 = 40
     [sln] add-comp input.V[10]
     [sln] generate input.V[10].O = 40
     [sln] rm-route ihill_rep[7].Km = 40
     [sln] add-comp input.I[5]
     [sln] generate input.I[5].O = 40
     [sln] rm-route ihill_rep[10].Km = 40
     [sln] add-comp input.I[6]
     [sln] generate input.I[6].O = 40
     [sln] rm-route ihill_rep[9].Km = 40
     [sln] add-comp input.I[7]
     [sln] generate input.I[7].O = 40
     [sln] rm-route vgain[1].X = 3.01029995664
     [sln] add-comp input.V[11]
     [sln] generate input.V[11].O = 3.01029995664
     [sln] rm-route itov[5].X = 3.01029995664
     [sln] add-comp input.I[8]
     [sln] generate input.I[8].O = 3.01029995664
     [sln] rm-route itov[3].X = 3.01029995664
     [sln] add-comp input.I[9]
     [sln] generate input.I[9].O = 3.01029995664
     [sln] rm-route vdadd[8].OUT_0 = 0.25
     [sln] add-comp input.V[12]
     [sln] generate input.V[12].O = 0.25
     [sln] rm-route vdadd[4].OUT_0 = 20
     [sln] add-comp input.V[13]
     [sln] generate input.V[13].O = 20
     [sln] rm-route vdadd[2].D = 0.03010299956
     [sln] add-comp input.I[10]
     [sln] generate input.I[10].O = 0.03010299956
     [sln] rm-route vdadd[6].D = 0.03010299956
     [sln] add-comp input.I[11]
     [sln] generate input.I[11].O = 0.03010299956
     [sln] rm-route vdadd[4].D = 0.03010299956
     [sln] add-comp input.I[12]
     [sln] generate input.I[12].O = 0.03010299956
     [sln] add-comp output.V[0]
     [sln] generate output.V[0].O = LacLp
     [sln] add-comp output.V[1]
     [sln] generate output.V[1].O = LacLm
     [sln] add-comp output.V[2]
     [sln] generate output.V[2].O = clm
     [sln] add-comp output.V[3]
     [sln] generate output.V[3].O = clp
     [sln] add-comp output.V[4]
     [sln] generate output.V[4].O = TetRp
     [sln] route input.V[0].X = 2
     [sln] route input.V[1].X = 2
     [sln] route input.V[2].X = 2
     [sln] route input.V[3].X = 60
     [sln] route input.V[4].X = 0
     [sln] route input.V[5].X = 0
     [sln] route input.V[6].X = 0
     [sln] route input.V[7].X = 0.5
     [sln] route input.I[0].X = 0.15051499783
     [sln] route input.I[1].X = 0.15051499783
     [sln] route input.I[2].X = 0.4995
     [sln] route input.I[3].X = 0.4995
     [sln] route input.I[4].X = 0.4995
     [sln] route input.V[8].X = 0.0005
     [sln] route input.V[9].X = 0.0005
     [sln] route input.V[10].X = 40
     [sln] route input.I[5].X = 40
     [sln] route input.I[6].X = 40
     [sln] route input.I[7].X = 40
     [sln] route input.V[11].X = 3.01029995664
     [sln] route input.I[8].X = 3.01029995664
     [sln] route input.I[9].X = 3.01029995664
     [sln] route input.V[12].X = 0.25
     [sln] route input.V[13].X = 20
     [sln] route input.I[10].X = 0.03010299956
     [sln] route input.I[11].X = 0.03010299956
     [sln] route input.I[12].X = 0.03010299956
     [comp] make-comp input.V0
     [comp] make-comp input.V1
     [comp] make-comp input.V2
     [comp] make-comp input.V3
     [comp] make-comp input.V4
     [comp] make-comp input.V5
     [comp] make-comp input.V6
     [comp] make-comp input.V7
     [comp] make-comp input.I0
     [comp] make-comp input.I1
     [comp] make-comp input.I2
     [comp] make-comp input.I3
     [comp] make-comp input.I4
     [comp] make-comp input.V8
     [comp] make-comp input.V9
     [comp] make-comp input.V10
     [comp] make-comp input.I5
     [comp] make-comp input.I6
     [comp] make-comp input.I7
     [comp] make-comp input.V11
     [comp] make-comp input.I8
     [comp] make-comp input.I9
     [comp] make-comp input.V12
     [comp] make-comp input.V13
     [comp] make-comp input.I10
     [comp] make-comp input.I11
     [comp] make-comp input.I12
     [comp] make-comp output.V0
     [comp] make-comp output.V1
     [comp] make-comp output.V2
     [comp] make-comp output.V3
     [comp] make-comp output.V4
     add-goal [1993] [CONN] vdadd[6].OUT => ihill_rep[7].S (LacLp)
     add-goal [1994] [CONN] vdadd[0].OUT => itov[5].K (LacLm)
     add-goal [1995] [CONN] vdadd[8].OUT => itov[3].K (clm)
     add-goal [1996] [CONN] vdadd[4].OUT => ihill_rep[10].S (clp)
     add-goal [1997] [CONN] vdadd[2].OUT => ihill_rep[9].S (TetRp)
     add-goal [1998] [CONN] ihill_rep[10].REP => vdadd[0].A (TRLacL)
     add-goal [1999] [CONN] ihill_rep[9].REP => vdadd[8].A (TRclp)
     add-goal [2000] [CONN] input.V[0].O => ihill_rep[7].n (2)
     add-goal [2001] [CONN] input.V[1].O => ihill_rep[10].n (2)
     add-goal [2002] [CONN] input.V[2].O => ihill_rep[9].n (2)
     add-goal [2003] [CONN] input.V[3].O => vdadd[6].OUT_0 (60)
     add-goal [2004] [CONN] input.V[4].O => vdadd[2].B (0)
     add-goal [2005] [CONN] input.V[5].O => vdadd[6].B (0)
     add-goal [2006] [CONN] input.V[6].O => vdadd[4].B (0)
     add-goal [2007] [CONN] input.V[7].O => vdadd[0].OUT_0 (0.5)
     add-goal [2008] [CONN] input.I[0].O => vdadd[8].D (0.15051499783)
     add-goal [2009] [CONN] input.I[1].O => vdadd[0].D (0.15051499783)
     add-goal [2010] [CONN] input.I[2].O => ihill_rep[7].Vmax (0.4995)
     add-goal [2011] [CONN] input.I[3].O => ihill_rep[10].Vmax (0.4995)
     add-goal [2012] [CONN] input.I[4].O => ihill_rep[9].Vmax (0.4995)
     add-goal [2013] [CONN] input.V[8].O => vdadd[8].B (0.0005)
     add-goal [2014] [CONN] input.V[9].O => vdadd[0].B (0.0005)
     add-goal [2015] [CONN] input.V[10].O => vdadd[2].OUT_0 (40)
     add-goal [2016] [CONN] input.I[5].O => ihill_rep[7].Km (40)
     add-goal [2017] [CONN] input.I[6].O => ihill_rep[10].Km (40)
     add-goal [2018] [CONN] input.I[7].O => ihill_rep[9].Km (40)
     add-goal [2019] [CONN] input.V[11].O => vgain[1].X (3.01029995664)
     add-goal [2020] [CONN] input.I[8].O => itov[5].X (3.01029995664)
     add-goal [2021] [CONN] input.I[9].O => itov[3].X (3.01029995664)
     add-goal [2022] [CONN] input.V[12].O => vdadd[8].OUT_0 (0.25)
     add-goal [2023] [CONN] input.V[13].O => vdadd[4].OUT_0 (20)
     add-goal [2024] [CONN] input.I[10].O => vdadd[2].D (0.03010299956)
     add-goal [2025] [CONN] input.I[11].O => vdadd[6].D (0.03010299956)
     add-goal [2026] [CONN] input.I[12].O => vdadd[4].D (0.03010299956)
     add-goal [2027] [CONN] vdadd[6].OUT => output.V[0].X (LacLp)
     add-goal [2028] [CONN] vdadd[0].OUT => output.V[1].X (LacLm)
     add-goal [2029] [CONN] vdadd[8].OUT => output.V[2].X (clm)
     add-goal [2030] [CONN] vdadd[4].OUT => output.V[3].X (clp)
     add-goal [2031] [CONN] vdadd[2].OUT => output.V[4].X (TetRp)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1732] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1915] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1908] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1909] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1910] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1726] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1911] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1729] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1916] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1727] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1914] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1912] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1725] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1728] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1731] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1724] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2005] [CONN] input.V[5].O => vdadd[6].B (0)
[2009] [CONN] input.I[1].O => vdadd[0].D (0.15051499783)
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2017] [CONN] input.I[6].O => ihill_rep[10].Km (40)
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2006] [CONN] input.V[6].O => vdadd[4].B (0)
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1993] [CONN] vdadd[6].OUT => ihill_rep[7].S (LacLp)
[2004] [CONN] input.V[4].O => vdadd[2].B (0)
[2022] [CONN] input.V[12].O => vdadd[8].OUT_0 (0.25)
[2028] [CONN] vdadd[0].OUT => output.V[1].X (LacLm)
[1732] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1995] [CONN] vdadd[8].OUT => itov[3].K (clm)
[1915] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2000] [CONN] input.V[0].O => ihill_rep[7].n (2)
[2001] [CONN] input.V[1].O => ihill_rep[10].n (2)
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1908] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1909] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1910] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[2014] [CONN] input.V[9].O => vdadd[0].B (0.0005)
[2016] [CONN] input.I[5].O => ihill_rep[7].Km (40)
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[2026] [CONN] input.I[12].O => vdadd[4].D (0.03010299956)
[2013] [CONN] input.V[8].O => vdadd[8].B (0.0005)
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2021] [CONN] input.I[9].O => itov[3].X (3.01029995664)
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1994] [CONN] vdadd[0].OUT => itov[5].K (LacLm)
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1726] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2024] [CONN] input.I[10].O => vdadd[2].D (0.03010299956)
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2002] [CONN] input.V[2].O => ihill_rep[9].n (2)
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2011] [CONN] input.I[3].O => ihill_rep[10].Vmax (0.4995)
[1911] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1729] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2008] [CONN] input.I[0].O => vdadd[8].D (0.15051499783)
[2019] [CONN] input.V[11].O => vgain[1].X (3.01029995664)
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2029] [CONN] vdadd[8].OUT => output.V[2].X (clm)
[2023] [CONN] input.V[13].O => vdadd[4].OUT_0 (20)
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2007] [CONN] input.V[7].O => vdadd[0].OUT_0 (0.5)
[2015] [CONN] input.V[10].O => vdadd[2].OUT_0 (40)
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1916] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1727] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1999] [CONN] ihill_rep[9].REP => vdadd[8].A (TRclp)
[2020] [CONN] input.I[8].O => itov[5].X (3.01029995664)
[1998] [CONN] ihill_rep[10].REP => vdadd[0].A (TRLacL)
[1914] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1912] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1997] [CONN] vdadd[2].OUT => ihill_rep[9].S (TetRp)
[2003] [CONN] input.V[3].O => vdadd[6].OUT_0 (60)
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2012] [CONN] input.I[4].O => ihill_rep[9].Vmax (0.4995)
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2018] [CONN] input.I[7].O => ihill_rep[9].Km (40)
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1725] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2025] [CONN] input.I[11].O => vdadd[6].D (0.03010299956)
[2031] [CONN] vdadd[2].OUT => output.V[4].X (TetRp)
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1728] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2030] [CONN] vdadd[4].OUT => output.V[3].X (clp)
[1996] [CONN] vdadd[4].OUT => ihill_rep[10].S (clp)
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1731] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1724] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[2010] [CONN] input.I[2].O => ihill_rep[7].Vmax (0.4995)
[2027] [CONN] vdadd[6].OUT => output.V[0].X (LacLp)
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> Current Goal: [2027] [CONN] vdadd[6].OUT => output.V[0].X (LacLp)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>ihill_rep.REP->vdadd.A
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->itov.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>ihill_rep.REP->vdadd.A
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vgain.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->itov.K
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->itov.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->itov.K
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 3
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=63

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] [TERMINATE] found 0 / 1
[eqn] [TERMINATE] could not find another node
[multi]   >> Found # Global Solutions: 1/1
[multi] >>>SOLUTION IS UNFINISHED <<<
[multi]  > Added Local Solution
[multi]  > Finding Global Solution
[multi] found # steps: 43
[multi] found # steps: 32
[multi] found # steps: 43
[multi] found # steps: 43
[multi] found # steps: 30
[multi] found # steps: 32
[multi] found # steps: 30
[multi] found # steps: 30
[multi] # partial ids = 8
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1913] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   remove-goal [1154] [EXPR]vdadd[4].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1451] [EXPR]vdadd[6].A<V>=(3.01029995664*LacLm)
   remove-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [1730] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] vgain[0] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[0] cfg-in Z=TetRm
   [comp] vgain[0] cfg-in X=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] vdadd[2] cfg-in OUT_0=0.5
   [comp] vdadd[2] cfg-in OUT=LacLm
   [comp] vdadd[2] cfg-param BSW=1
   [comp] vdadd[2] cfg-param DSW=1
   [comp] vdadd[2] cfg-in B=0.0005
   [comp] vdadd[2] cfg-in D=0.15051499783
   [comp] vdadd[2] cfg-in A=TRLacL
   [comp] itov[3] cfg-in Y=(3.01029995664*clm)
   [comp] itov[3] cfg-in K=clm
   [comp] itov[3] cfg-in X=3.01029995664
   [comp] vdadd[4] cfg-in OUT_0=20
   [comp] vdadd[4] cfg-in OUT=clp
   [comp] vdadd[4] cfg-param BSW=1
   [comp] vdadd[4] cfg-param DSW=1
   [comp] vdadd[4] cfg-in D=0.03010299956
   [comp] vdadd[4] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[4] cfg-in B=0
   [comp] itov[5] cfg-in Y=(3.01029995664*LacLm)
   [comp] itov[5] cfg-in K=LacLm
   [comp] itov[5] cfg-in X=3.01029995664
   [comp] vdadd[6] cfg-in OUT_0=60
   [comp] vdadd[6] cfg-in OUT=LacLp
   [comp] vdadd[6] cfg-param BSW=1
   [comp] vdadd[6] cfg-param DSW=1
   [comp] vdadd[6] cfg-in D=0.03010299956
   [comp] vdadd[6] cfg-in A=(3.01029995664*LacLm)
   [comp] vdadd[6] cfg-in B=0
   [comp] ihill_rep[7] cfg-in REP=TRTetR
   [comp] ihill_rep[7] cfg-in n=2
   [comp] ihill_rep[7] cfg-in S=LacLp
   [comp] ihill_rep[7] cfg-in Vmax=0.4995
   [comp] ihill_rep[7] cfg-in Km=40
   [comp] vdadd[8] cfg-in OUT_0=0.25
   [comp] vdadd[8] cfg-in OUT=clm
   [comp] vdadd[8] cfg-param BSW=1
   [comp] vdadd[8] cfg-param DSW=1
   [comp] vdadd[8] cfg-in B=0.0005
   [comp] vdadd[8] cfg-in D=0.15051499783
   [comp] vdadd[8] cfg-in A=TRclp
   [comp] ihill_rep[9] cfg-in REP=TRclp
   [comp] ihill_rep[9] cfg-in n=2
   [comp] ihill_rep[9] cfg-in S=TetRp
   [comp] ihill_rep[9] cfg-in Vmax=0.4995
   [comp] ihill_rep[9] cfg-in Km=40
   [comp] ihill_rep[10] cfg-in REP=TRLacL
   [comp] ihill_rep[10] cfg-in n=2
   [comp] ihill_rep[10] cfg-in S=clp
   [comp] ihill_rep[10] cfg-in Vmax=0.4995
   [comp] ihill_rep[10] cfg-in Km=40
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[0]
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] conn vgain[0].P->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate vdadd[2].OUT = LacLm
   [sln] add-comp vdadd[2]
   [sln] generate itov[3].Y = (3.01029995664*clm)
   [sln] add-comp itov[3]
   [sln] generate itov[3].Y = (3.01029995664*clm)
   [sln] conn itov[3].Y->vdadd[4].A
   [sln] generate vdadd[4].OUT = clp
   [sln] add-comp vdadd[4]
   [sln] generate itov[5].Y = (3.01029995664*LacLm)
   [sln] add-comp itov[5]
   [sln] generate itov[5].Y = (3.01029995664*LacLm)
   [sln] conn itov[5].Y->vdadd[6].A
   [sln] generate vdadd[6].OUT = LacLp
   [sln] add-comp vdadd[6]
   [sln] generate ihill_rep[7].REP = TRTetR
   [sln] add-comp ihill_rep[7]
   [sln] generate vdadd[8].OUT = clm
   [sln] add-comp vdadd[8]
   [sln] generate ihill_rep[9].REP = TRclp
   [sln] add-comp ihill_rep[9]
   [sln] generate ihill_rep[10].REP = TRLacL
   [sln] add-comp ihill_rep[10]
   [sln] route vgain[0].Z = TetRm
   [sln] route vgain[0].X = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route vdadd[2].OUT_0 = 0.5
   [sln] route vdadd[2].B = 0.0005
   [sln] route vdadd[2].D = 0.15051499783
   [sln] route vdadd[2].A = TRLacL
   [sln] route itov[3].K = clm
   [sln] route itov[3].X = 3.01029995664
   [sln] route vdadd[4].OUT_0 = 20
   [sln] route vdadd[4].D = 0.03010299956
   [sln] route vdadd[4].B = 0
   [sln] route itov[5].K = LacLm
   [sln] route itov[5].X = 3.01029995664
   [sln] route vdadd[6].OUT_0 = 60
   [sln] route vdadd[6].D = 0.03010299956
   [sln] route vdadd[6].B = 0
   [sln] route ihill_rep[7].n = 2
   [sln] route ihill_rep[7].S = LacLp
   [sln] route ihill_rep[7].Vmax = 0.4995
   [sln] route ihill_rep[7].Km = 40
   [sln] route vdadd[8].OUT_0 = 0.25
   [sln] route vdadd[8].B = 0.0005
   [sln] route vdadd[8].D = 0.15051499783
   [sln] route vdadd[8].A = TRclp
   [sln] route ihill_rep[9].n = 2
   [sln] route ihill_rep[9].S = TetRp
   [sln] route ihill_rep[9].Vmax = 0.4995
   [sln] route ihill_rep[9].Km = 40
   [sln] route ihill_rep[10].n = 2
   [sln] route ihill_rep[10].S = clp
   [sln] route ihill_rep[10].Vmax = 0.4995
   [sln] route ihill_rep[10].Km = 40
   [comp] make-comp vgain0
   [comp] make-comp vdadd1
   [comp] make-comp vdadd2
   [comp] make-comp itov3
   [comp] make-comp vdadd4
   [comp] make-comp itov5
   [comp] make-comp vdadd6
   [comp] make-comp ihill_rep7
   [comp] make-comp vdadd8
   [comp] make-comp ihill_rep9
   [comp] make-comp ihill_rep10
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 1908 to disabled
   change-goal-status 1909 to disabled
   change-goal-status 1910 to disabled
   change-goal-status 1911 to disabled
   change-goal-status 1912 to disabled
   change-goal-status 1914 to disabled
   change-goal-status 1915 to disabled
   change-goal-status 1916 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 1391 to disabled
   change-goal-status 1392 to disabled
   change-goal-status 1393 to disabled
   change-goal-status 1394 to disabled
   change-goal-status 1396 to disabled
   change-goal-status 1397 to disabled
   change-goal-status 1398 to disabled
   change-goal-status 1399 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 1724 to disabled
   change-goal-status 1725 to disabled
   change-goal-status 1726 to disabled
   change-goal-status 1727 to disabled
   change-goal-status 1728 to disabled
   change-goal-status 1729 to disabled
   change-goal-status 1731 to disabled
   change-goal-status 1732 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [1908] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1909] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1910] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1911] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1912] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1913] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1914] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1915] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1916] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[4].A<V>=(3.01029995664*clm)
   add-goal [1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1451] [EXPR]vdadd[6].A<V>=(3.01029995664*LacLm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1724] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1725] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1726] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1727] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1728] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1729] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1730] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1731] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1732] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ==== ROUTES =====
[multi] > vgain[0].Z = TetRm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[7].S = LacLp
[multi]    - connecting generates to routes.
[multi] > itov[5].K = LacLm
[multi]    - connecting generates to routes.
[multi] > itov[3].K = clm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[10].S = clp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[9].S = TetRp
[multi]    - connecting generates to routes.
[multi] > vdadd[2].A = TRLacL
[multi]    - connecting generates to routes.
[multi] > vdadd[8].A = TRclp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[7].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[10].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[9].n = 2
[multi]    - making an input block.
[multi] > vdadd[6].OUT_0 = 60
[multi]    - making an input block.
[multi] > vdadd[1].B = 0
[multi]    - making an input block.
[multi] > vdadd[6].B = 0
[multi]    - making an input block.
[multi] > vdadd[4].B = 0
[multi]    - making an input block.
[multi] > vdadd[2].OUT_0 = 0.5
[multi]    - making an input block.
[multi] > vdadd[8].D = 0.15051499783
[multi]    - making an input block.
[multi] > vdadd[2].D = 0.15051499783
[multi]    - making an input block.
[multi] > ihill_rep[7].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[10].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[9].Vmax = 0.4995
[multi]    - making an input block.
[multi] > vdadd[8].B = 0.0005
[multi]    - making an input block.
[multi] > vdadd[2].B = 0.0005
[multi]    - making an input block.
[multi] > vdadd[1].OUT_0 = 40
[multi]    - making an input block.
[multi] > ihill_rep[7].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[10].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[9].Km = 40
[multi]    - making an input block.
[multi] > vgain[0].X = 3.01029995664
[multi]    - making an input block.
[multi] > itov[5].X = 3.01029995664
[multi]    - making an input block.
[multi] > itov[3].X = 3.01029995664
[multi]    - making an input block.
[multi] > vdadd[8].OUT_0 = 0.25
[multi]    - making an input block.
[multi] > vdadd[4].OUT_0 = 20
[multi]    - making an input block.
[multi] > vdadd[1].D = 0.03010299956
[multi]    - making an input block.
[multi] > vdadd[6].D = 0.03010299956
[multi]    - making an input block.
[multi] > vdadd[4].D = 0.03010299956
[multi]    - making an input block.
[multi] ==== GENERATES =====
[multi] > vdadd[6].OUT = LacLp
[multi]    - making an output block.
[multi] > vdadd[2].OUT = LacLm
[multi]    - making an output block.
[multi] > vdadd[8].OUT = clm
[multi]    - making an output block.
[multi] > vdadd[4].OUT = clp
[multi]    - making an output block.
[multi] > vdadd[1].OUT = TetRp
[multi]    - making an output block.
[multi] > ihill_rep[7].REP = TRTetR
[multi] > ihill_rep[10].REP = TRLacL
[multi] > ihill_rep[9].REP = TRclp
[multi] > itov[3].Y = (3.01029995664*clm)
[multi] > itov[3].Y = (3.01029995664*clm)
[multi] > itov[5].Y = (3.01029995664*LacLm)
[multi] > itov[5].Y = (3.01029995664*LacLm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] --> Number of options 39
[multi] --> Number of nodes 1
[multi] ======= Partial (Root) Steps 283 =======
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1913] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   remove-goal [1154] [EXPR]vdadd[4].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1451] [EXPR]vdadd[6].A<V>=(3.01029995664*LacLm)
   remove-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [1730] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] vgain[0] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[0] cfg-in Z=TetRm
   [comp] vgain[0] cfg-in X=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] vdadd[2] cfg-in OUT_0=0.5
   [comp] vdadd[2] cfg-in OUT=LacLm
   [comp] vdadd[2] cfg-param BSW=1
   [comp] vdadd[2] cfg-param DSW=1
   [comp] vdadd[2] cfg-in B=0.0005
   [comp] vdadd[2] cfg-in D=0.15051499783
   [comp] vdadd[2] cfg-in A=TRLacL
   [comp] itov[3] cfg-in Y=(3.01029995664*clm)
   [comp] itov[3] cfg-in K=clm
   [comp] itov[3] cfg-in X=3.01029995664
   [comp] vdadd[4] cfg-in OUT_0=20
   [comp] vdadd[4] cfg-in OUT=clp
   [comp] vdadd[4] cfg-param BSW=1
   [comp] vdadd[4] cfg-param DSW=1
   [comp] vdadd[4] cfg-in D=0.03010299956
   [comp] vdadd[4] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[4] cfg-in B=0
   [comp] itov[5] cfg-in Y=(3.01029995664*LacLm)
   [comp] itov[5] cfg-in K=LacLm
   [comp] itov[5] cfg-in X=3.01029995664
   [comp] vdadd[6] cfg-in OUT_0=60
   [comp] vdadd[6] cfg-in OUT=LacLp
   [comp] vdadd[6] cfg-param BSW=1
   [comp] vdadd[6] cfg-param DSW=1
   [comp] vdadd[6] cfg-in D=0.03010299956
   [comp] vdadd[6] cfg-in A=(3.01029995664*LacLm)
   [comp] vdadd[6] cfg-in B=0
   [comp] ihill_rep[7] cfg-in REP=TRTetR
   [comp] ihill_rep[7] cfg-in n=2
   [comp] ihill_rep[7] cfg-in S=LacLp
   [comp] ihill_rep[7] cfg-in Vmax=0.4995
   [comp] ihill_rep[7] cfg-in Km=40
   [comp] vdadd[8] cfg-in OUT_0=0.25
   [comp] vdadd[8] cfg-in OUT=clm
   [comp] vdadd[8] cfg-param BSW=1
   [comp] vdadd[8] cfg-param DSW=1
   [comp] vdadd[8] cfg-in B=0.0005
   [comp] vdadd[8] cfg-in D=0.15051499783
   [comp] vdadd[8] cfg-in A=TRclp
   [comp] ihill_rep[9] cfg-in REP=TRclp
   [comp] ihill_rep[9] cfg-in n=2
   [comp] ihill_rep[9] cfg-in S=TetRp
   [comp] ihill_rep[9] cfg-in Vmax=0.4995
   [comp] ihill_rep[9] cfg-in Km=40
   [comp] ihill_rep[10] cfg-in REP=TRLacL
   [comp] ihill_rep[10] cfg-in n=2
   [comp] ihill_rep[10] cfg-in S=clp
   [comp] ihill_rep[10] cfg-in Vmax=0.4995
   [comp] ihill_rep[10] cfg-in Km=40
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[0]
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] conn vgain[0].P->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate vdadd[2].OUT = LacLm
   [sln] add-comp vdadd[2]
   [sln] generate itov[3].Y = (3.01029995664*clm)
   [sln] add-comp itov[3]
   [sln] generate itov[3].Y = (3.01029995664*clm)
   [sln] conn itov[3].Y->vdadd[4].A
   [sln] generate vdadd[4].OUT = clp
   [sln] add-comp vdadd[4]
   [sln] generate itov[5].Y = (3.01029995664*LacLm)
   [sln] add-comp itov[5]
   [sln] generate itov[5].Y = (3.01029995664*LacLm)
   [sln] conn itov[5].Y->vdadd[6].A
   [sln] generate vdadd[6].OUT = LacLp
   [sln] add-comp vdadd[6]
   [sln] generate ihill_rep[7].REP = TRTetR
   [sln] add-comp ihill_rep[7]
   [sln] generate vdadd[8].OUT = clm
   [sln] add-comp vdadd[8]
   [sln] generate ihill_rep[9].REP = TRclp
   [sln] add-comp ihill_rep[9]
   [sln] generate ihill_rep[10].REP = TRLacL
   [sln] add-comp ihill_rep[10]
   [sln] route vgain[0].Z = TetRm
   [sln] route vgain[0].X = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route vdadd[2].OUT_0 = 0.5
   [sln] route vdadd[2].B = 0.0005
   [sln] route vdadd[2].D = 0.15051499783
   [sln] route vdadd[2].A = TRLacL
   [sln] route itov[3].K = clm
   [sln] route itov[3].X = 3.01029995664
   [sln] route vdadd[4].OUT_0 = 20
   [sln] route vdadd[4].D = 0.03010299956
   [sln] route vdadd[4].B = 0
   [sln] route itov[5].K = LacLm
   [sln] route itov[5].X = 3.01029995664
   [sln] route vdadd[6].OUT_0 = 60
   [sln] route vdadd[6].D = 0.03010299956
   [sln] route vdadd[6].B = 0
   [sln] route ihill_rep[7].n = 2
   [sln] route ihill_rep[7].S = LacLp
   [sln] route ihill_rep[7].Vmax = 0.4995
   [sln] route ihill_rep[7].Km = 40
   [sln] route vdadd[8].OUT_0 = 0.25
   [sln] route vdadd[8].B = 0.0005
   [sln] route vdadd[8].D = 0.15051499783
   [sln] route vdadd[8].A = TRclp
   [sln] route ihill_rep[9].n = 2
   [sln] route ihill_rep[9].S = TetRp
   [sln] route ihill_rep[9].Vmax = 0.4995
   [sln] route ihill_rep[9].Km = 40
   [sln] route ihill_rep[10].n = 2
   [sln] route ihill_rep[10].S = clp
   [sln] route ihill_rep[10].Vmax = 0.4995
   [sln] route ihill_rep[10].Km = 40
   [comp] make-comp vgain0
   [comp] make-comp vdadd1
   [comp] make-comp vdadd2
   [comp] make-comp itov3
   [comp] make-comp vdadd4
   [comp] make-comp itov5
   [comp] make-comp vdadd6
   [comp] make-comp ihill_rep7
   [comp] make-comp vdadd8
   [comp] make-comp ihill_rep9
   [comp] make-comp ihill_rep10
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 1908 to disabled
   change-goal-status 1909 to disabled
   change-goal-status 1910 to disabled
   change-goal-status 1911 to disabled
   change-goal-status 1912 to disabled
   change-goal-status 1914 to disabled
   change-goal-status 1915 to disabled
   change-goal-status 1916 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 1391 to disabled
   change-goal-status 1392 to disabled
   change-goal-status 1393 to disabled
   change-goal-status 1394 to disabled
   change-goal-status 1396 to disabled
   change-goal-status 1397 to disabled
   change-goal-status 1398 to disabled
   change-goal-status 1399 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 1724 to disabled
   change-goal-status 1725 to disabled
   change-goal-status 1726 to disabled
   change-goal-status 1727 to disabled
   change-goal-status 1728 to disabled
   change-goal-status 1729 to disabled
   change-goal-status 1731 to disabled
   change-goal-status 1732 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [1908] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1909] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1910] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1911] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1912] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1913] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1914] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1915] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1916] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[4].A<V>=(3.01029995664*clm)
   add-goal [1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1451] [EXPR]vdadd[6].A<V>=(3.01029995664*LacLm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1724] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1725] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1726] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1727] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1728] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1729] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1730] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1731] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1732] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ============================
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.V[0] cfg-in X=2
     [comp] input.V[0] cfg-out O=2
     [comp] input.V[1] cfg-in X=2
     [comp] input.V[1] cfg-out O=2
     [comp] input.V[2] cfg-in X=2
     [comp] input.V[2] cfg-out O=2
     [comp] input.V[3] cfg-in X=60
     [comp] input.V[3] cfg-out O=60
     [comp] input.V[4] cfg-in X=0
     [comp] input.V[4] cfg-out O=0
     [comp] input.V[5] cfg-in X=0
     [comp] input.V[5] cfg-out O=0
     [comp] input.V[6] cfg-in X=0
     [comp] input.V[6] cfg-out O=0
     [comp] input.V[7] cfg-in X=0.5
     [comp] input.V[7] cfg-out O=0.5
     [comp] input.I[0] cfg-in X=0.15051499783
     [comp] input.I[0] cfg-out O=0.15051499783
     [comp] input.I[1] cfg-in X=0.15051499783
     [comp] input.I[1] cfg-out O=0.15051499783
     [comp] input.I[2] cfg-in X=0.4995
     [comp] input.I[2] cfg-out O=0.4995
     [comp] input.I[3] cfg-in X=0.4995
     [comp] input.I[3] cfg-out O=0.4995
     [comp] input.I[4] cfg-in X=0.4995
     [comp] input.I[4] cfg-out O=0.4995
     [comp] input.V[8] cfg-in X=0.0005
     [comp] input.V[8] cfg-out O=0.0005
     [comp] input.V[9] cfg-in X=0.0005
     [comp] input.V[9] cfg-out O=0.0005
     [comp] input.V[10] cfg-in X=40
     [comp] input.V[10] cfg-out O=40
     [comp] input.I[5] cfg-in X=40
     [comp] input.I[5] cfg-out O=40
     [comp] input.I[6] cfg-in X=40
     [comp] input.I[6] cfg-out O=40
     [comp] input.I[7] cfg-in X=40
     [comp] input.I[7] cfg-out O=40
     [comp] input.V[11] cfg-in X=3.01029995664
     [comp] input.V[11] cfg-out O=3.01029995664
     [comp] input.I[8] cfg-in X=3.01029995664
     [comp] input.I[8] cfg-out O=3.01029995664
     [comp] input.I[9] cfg-in X=3.01029995664
     [comp] input.I[9] cfg-out O=3.01029995664
     [comp] input.V[12] cfg-in X=0.25
     [comp] input.V[12] cfg-out O=0.25
     [comp] input.V[13] cfg-in X=20
     [comp] input.V[13] cfg-out O=20
     [comp] input.I[10] cfg-in X=0.03010299956
     [comp] input.I[10] cfg-out O=0.03010299956
     [comp] input.I[11] cfg-in X=0.03010299956
     [comp] input.I[11] cfg-out O=0.03010299956
     [comp] input.I[12] cfg-in X=0.03010299956
     [comp] input.I[12] cfg-out O=0.03010299956
     [comp] output.V[0] cfg-in X=LacLp
     [comp] output.V[0] cfg-out O=LacLp
     [comp] output.V[1] cfg-in X=LacLm
     [comp] output.V[1] cfg-out O=LacLm
     [comp] output.V[2] cfg-in X=clm
     [comp] output.V[2] cfg-out O=clm
     [comp] output.V[3] cfg-in X=clp
     [comp] output.V[3] cfg-out O=clp
     [comp] output.V[4] cfg-in X=TetRp
     [comp] output.V[4] cfg-out O=TetRp
     [sln] rm-route ihill_rep[7].S = LacLp
     [sln] rm-route itov[5].K = LacLm
     [sln] rm-route itov[3].K = clm
     [sln] rm-route ihill_rep[10].S = clp
     [sln] rm-route ihill_rep[9].S = TetRp
     [sln] rm-route vdadd[2].A = TRLacL
     [sln] rm-route vdadd[8].A = TRclp
     [sln] rm-route ihill_rep[7].n = 2
     [sln] add-comp input.V[0]
     [sln] generate input.V[0].O = 2
     [sln] rm-route ihill_rep[10].n = 2
     [sln] add-comp input.V[1]
     [sln] generate input.V[1].O = 2
     [sln] rm-route ihill_rep[9].n = 2
     [sln] add-comp input.V[2]
     [sln] generate input.V[2].O = 2
     [sln] rm-route vdadd[6].OUT_0 = 60
     [sln] add-comp input.V[3]
     [sln] generate input.V[3].O = 60
     [sln] rm-route vdadd[1].B = 0
     [sln] add-comp input.V[4]
     [sln] generate input.V[4].O = 0
     [sln] rm-route vdadd[6].B = 0
     [sln] add-comp input.V[5]
     [sln] generate input.V[5].O = 0
     [sln] rm-route vdadd[4].B = 0
     [sln] add-comp input.V[6]
     [sln] generate input.V[6].O = 0
     [sln] rm-route vdadd[2].OUT_0 = 0.5
     [sln] add-comp input.V[7]
     [sln] generate input.V[7].O = 0.5
     [sln] rm-route vdadd[8].D = 0.15051499783
     [sln] add-comp input.I[0]
     [sln] generate input.I[0].O = 0.15051499783
     [sln] rm-route vdadd[2].D = 0.15051499783
     [sln] add-comp input.I[1]
     [sln] generate input.I[1].O = 0.15051499783
     [sln] rm-route ihill_rep[7].Vmax = 0.4995
     [sln] add-comp input.I[2]
     [sln] generate input.I[2].O = 0.4995
     [sln] rm-route ihill_rep[10].Vmax = 0.4995
     [sln] add-comp input.I[3]
     [sln] generate input.I[3].O = 0.4995
     [sln] rm-route ihill_rep[9].Vmax = 0.4995
     [sln] add-comp input.I[4]
     [sln] generate input.I[4].O = 0.4995
     [sln] rm-route vdadd[8].B = 0.0005
     [sln] add-comp input.V[8]
     [sln] generate input.V[8].O = 0.0005
     [sln] rm-route vdadd[2].B = 0.0005
     [sln] add-comp input.V[9]
     [sln] generate input.V[9].O = 0.0005
     [sln] rm-route vdadd[1].OUT_0 = 40
     [sln] add-comp input.V[10]
     [sln] generate input.V[10].O = 40
     [sln] rm-route ihill_rep[7].Km = 40
     [sln] add-comp input.I[5]
     [sln] generate input.I[5].O = 40
     [sln] rm-route ihill_rep[10].Km = 40
     [sln] add-comp input.I[6]
     [sln] generate input.I[6].O = 40
     [sln] rm-route ihill_rep[9].Km = 40
     [sln] add-comp input.I[7]
     [sln] generate input.I[7].O = 40
     [sln] rm-route vgain[0].X = 3.01029995664
     [sln] add-comp input.V[11]
     [sln] generate input.V[11].O = 3.01029995664
     [sln] rm-route itov[5].X = 3.01029995664
     [sln] add-comp input.I[8]
     [sln] generate input.I[8].O = 3.01029995664
     [sln] rm-route itov[3].X = 3.01029995664
     [sln] add-comp input.I[9]
     [sln] generate input.I[9].O = 3.01029995664
     [sln] rm-route vdadd[8].OUT_0 = 0.25
     [sln] add-comp input.V[12]
     [sln] generate input.V[12].O = 0.25
     [sln] rm-route vdadd[4].OUT_0 = 20
     [sln] add-comp input.V[13]
     [sln] generate input.V[13].O = 20
     [sln] rm-route vdadd[1].D = 0.03010299956
     [sln] add-comp input.I[10]
     [sln] generate input.I[10].O = 0.03010299956
     [sln] rm-route vdadd[6].D = 0.03010299956
     [sln] add-comp input.I[11]
     [sln] generate input.I[11].O = 0.03010299956
     [sln] rm-route vdadd[4].D = 0.03010299956
     [sln] add-comp input.I[12]
     [sln] generate input.I[12].O = 0.03010299956
     [sln] add-comp output.V[0]
     [sln] generate output.V[0].O = LacLp
     [sln] add-comp output.V[1]
     [sln] generate output.V[1].O = LacLm
     [sln] add-comp output.V[2]
     [sln] generate output.V[2].O = clm
     [sln] add-comp output.V[3]
     [sln] generate output.V[3].O = clp
     [sln] add-comp output.V[4]
     [sln] generate output.V[4].O = TetRp
     [sln] route input.V[0].X = 2
     [sln] route input.V[1].X = 2
     [sln] route input.V[2].X = 2
     [sln] route input.V[3].X = 60
     [sln] route input.V[4].X = 0
     [sln] route input.V[5].X = 0
     [sln] route input.V[6].X = 0
     [sln] route input.V[7].X = 0.5
     [sln] route input.I[0].X = 0.15051499783
     [sln] route input.I[1].X = 0.15051499783
     [sln] route input.I[2].X = 0.4995
     [sln] route input.I[3].X = 0.4995
     [sln] route input.I[4].X = 0.4995
     [sln] route input.V[8].X = 0.0005
     [sln] route input.V[9].X = 0.0005
     [sln] route input.V[10].X = 40
     [sln] route input.I[5].X = 40
     [sln] route input.I[6].X = 40
     [sln] route input.I[7].X = 40
     [sln] route input.V[11].X = 3.01029995664
     [sln] route input.I[8].X = 3.01029995664
     [sln] route input.I[9].X = 3.01029995664
     [sln] route input.V[12].X = 0.25
     [sln] route input.V[13].X = 20
     [sln] route input.I[10].X = 0.03010299956
     [sln] route input.I[11].X = 0.03010299956
     [sln] route input.I[12].X = 0.03010299956
     [comp] make-comp input.V0
     [comp] make-comp input.V1
     [comp] make-comp input.V2
     [comp] make-comp input.V3
     [comp] make-comp input.V4
     [comp] make-comp input.V5
     [comp] make-comp input.V6
     [comp] make-comp input.V7
     [comp] make-comp input.I0
     [comp] make-comp input.I1
     [comp] make-comp input.I2
     [comp] make-comp input.I3
     [comp] make-comp input.I4
     [comp] make-comp input.V8
     [comp] make-comp input.V9
     [comp] make-comp input.V10
     [comp] make-comp input.I5
     [comp] make-comp input.I6
     [comp] make-comp input.I7
     [comp] make-comp input.V11
     [comp] make-comp input.I8
     [comp] make-comp input.I9
     [comp] make-comp input.V12
     [comp] make-comp input.V13
     [comp] make-comp input.I10
     [comp] make-comp input.I11
     [comp] make-comp input.I12
     [comp] make-comp output.V0
     [comp] make-comp output.V1
     [comp] make-comp output.V2
     [comp] make-comp output.V3
     [comp] make-comp output.V4
     add-goal [2032] [CONN] vdadd[6].OUT => ihill_rep[7].S (LacLp)
     add-goal [2033] [CONN] vdadd[2].OUT => itov[5].K (LacLm)
     add-goal [2034] [CONN] vdadd[8].OUT => itov[3].K (clm)
     add-goal [2035] [CONN] vdadd[4].OUT => ihill_rep[10].S (clp)
     add-goal [2036] [CONN] vdadd[1].OUT => ihill_rep[9].S (TetRp)
     add-goal [2037] [CONN] ihill_rep[10].REP => vdadd[2].A (TRLacL)
     add-goal [2038] [CONN] ihill_rep[9].REP => vdadd[8].A (TRclp)
     add-goal [2039] [CONN] input.V[0].O => ihill_rep[7].n (2)
     add-goal [2040] [CONN] input.V[1].O => ihill_rep[10].n (2)
     add-goal [2041] [CONN] input.V[2].O => ihill_rep[9].n (2)
     add-goal [2042] [CONN] input.V[3].O => vdadd[6].OUT_0 (60)
     add-goal [2043] [CONN] input.V[4].O => vdadd[1].B (0)
     add-goal [2044] [CONN] input.V[5].O => vdadd[6].B (0)
     add-goal [2045] [CONN] input.V[6].O => vdadd[4].B (0)
     add-goal [2046] [CONN] input.V[7].O => vdadd[2].OUT_0 (0.5)
     add-goal [2047] [CONN] input.I[0].O => vdadd[8].D (0.15051499783)
     add-goal [2048] [CONN] input.I[1].O => vdadd[2].D (0.15051499783)
     add-goal [2049] [CONN] input.I[2].O => ihill_rep[7].Vmax (0.4995)
     add-goal [2050] [CONN] input.I[3].O => ihill_rep[10].Vmax (0.4995)
     add-goal [2051] [CONN] input.I[4].O => ihill_rep[9].Vmax (0.4995)
     add-goal [2052] [CONN] input.V[8].O => vdadd[8].B (0.0005)
     add-goal [2053] [CONN] input.V[9].O => vdadd[2].B (0.0005)
     add-goal [2054] [CONN] input.V[10].O => vdadd[1].OUT_0 (40)
     add-goal [2055] [CONN] input.I[5].O => ihill_rep[7].Km (40)
     add-goal [2056] [CONN] input.I[6].O => ihill_rep[10].Km (40)
     add-goal [2057] [CONN] input.I[7].O => ihill_rep[9].Km (40)
     add-goal [2058] [CONN] input.V[11].O => vgain[0].X (3.01029995664)
     add-goal [2059] [CONN] input.I[8].O => itov[5].X (3.01029995664)
     add-goal [2060] [CONN] input.I[9].O => itov[3].X (3.01029995664)
     add-goal [2061] [CONN] input.V[12].O => vdadd[8].OUT_0 (0.25)
     add-goal [2062] [CONN] input.V[13].O => vdadd[4].OUT_0 (20)
     add-goal [2063] [CONN] input.I[10].O => vdadd[1].D (0.03010299956)
     add-goal [2064] [CONN] input.I[11].O => vdadd[6].D (0.03010299956)
     add-goal [2065] [CONN] input.I[12].O => vdadd[4].D (0.03010299956)
     add-goal [2066] [CONN] vdadd[6].OUT => output.V[0].X (LacLp)
     add-goal [2067] [CONN] vdadd[2].OUT => output.V[1].X (LacLm)
     add-goal [2068] [CONN] vdadd[8].OUT => output.V[2].X (clm)
     add-goal [2069] [CONN] vdadd[4].OUT => output.V[3].X (clp)
     add-goal [2070] [CONN] vdadd[1].OUT => output.V[4].X (TetRp)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1732] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1915] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1908] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1909] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1910] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1726] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1911] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1729] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1916] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1727] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1914] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1912] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1725] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1728] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1731] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1724] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[2065] [CONN] input.I[12].O => vdadd[4].D (0.03010299956)
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2059] [CONN] input.I[8].O => itov[5].X (3.01029995664)
[2041] [CONN] input.V[2].O => ihill_rep[9].n (2)
[2070] [CONN] vdadd[1].OUT => output.V[4].X (TetRp)
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2063] [CONN] input.I[10].O => vdadd[1].D (0.03010299956)
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[2056] [CONN] input.I[6].O => ihill_rep[10].Km (40)
[2052] [CONN] input.V[8].O => vdadd[8].B (0.0005)
[1732] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[2034] [CONN] vdadd[8].OUT => itov[3].K (clm)
[1915] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1908] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1909] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1910] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[2061] [CONN] input.V[12].O => vdadd[8].OUT_0 (0.25)
[2040] [CONN] input.V[1].O => ihill_rep[10].n (2)
[2055] [CONN] input.I[5].O => ihill_rep[7].Km (40)
[2064] [CONN] input.I[11].O => vdadd[6].D (0.03010299956)
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2062] [CONN] input.V[13].O => vdadd[4].OUT_0 (20)
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2042] [CONN] input.V[3].O => vdadd[6].OUT_0 (60)
[2049] [CONN] input.I[2].O => ihill_rep[7].Vmax (0.4995)
[2053] [CONN] input.V[9].O => vdadd[2].B (0.0005)
[2060] [CONN] input.I[9].O => itov[3].X (3.01029995664)
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1726] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2067] [CONN] vdadd[2].OUT => output.V[1].X (LacLm)
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2066] [CONN] vdadd[6].OUT => output.V[0].X (LacLp)
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2046] [CONN] input.V[7].O => vdadd[2].OUT_0 (0.5)
[2057] [CONN] input.I[7].O => ihill_rep[9].Km (40)
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1911] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1729] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2054] [CONN] input.V[10].O => vdadd[1].OUT_0 (40)
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2039] [CONN] input.V[0].O => ihill_rep[7].n (2)
[2045] [CONN] input.V[6].O => vdadd[4].B (0)
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1916] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1727] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[2047] [CONN] input.I[0].O => vdadd[8].D (0.15051499783)
[2050] [CONN] input.I[3].O => ihill_rep[10].Vmax (0.4995)
[2051] [CONN] input.I[4].O => ihill_rep[9].Vmax (0.4995)
[2043] [CONN] input.V[4].O => vdadd[1].B (0)
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[2035] [CONN] vdadd[4].OUT => ihill_rep[10].S (clp)
[2048] [CONN] input.I[1].O => vdadd[2].D (0.15051499783)
[2032] [CONN] vdadd[6].OUT => ihill_rep[7].S (LacLp)
[2038] [CONN] ihill_rep[9].REP => vdadd[8].A (TRclp)
[1914] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1912] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2044] [CONN] input.V[5].O => vdadd[6].B (0)
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2037] [CONN] ihill_rep[10].REP => vdadd[2].A (TRLacL)
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2068] [CONN] vdadd[8].OUT => output.V[2].X (clm)
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1725] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2033] [CONN] vdadd[2].OUT => itov[5].K (LacLm)
[2036] [CONN] vdadd[1].OUT => ihill_rep[9].S (TetRp)
[2058] [CONN] input.V[11].O => vgain[0].X (3.01029995664)
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1728] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2069] [CONN] vdadd[4].OUT => output.V[3].X (clp)
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1731] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1724] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> Current Goal: [2069] [CONN] vdadd[4].OUT => output.V[3].X (clp)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vgain.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->itov.K
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>ihill_rep.REP->vdadd.A
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>ihill_rep.REP->vdadd.A
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->itov.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->itov.K
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->itov.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 3
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=64

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] [TERMINATE] found 0 / 1
[eqn] [TERMINATE] could not find another node
[multi]   >> Found # Global Solutions: 1/1
[multi] >>>SOLUTION IS UNFINISHED <<<
[multi]  > Added Local Solution
[multi]  > Finding Global Solution
[multi] found # steps: 43
[multi] found # steps: 43
[multi] found # steps: 43
[multi] found # steps: 30
[multi] found # steps: 32
[multi] found # steps: 32
[multi] found # steps: 30
[multi] found # steps: 30
[multi] # partial ids = 8
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1451] [EXPR]vdadd[5].A<V>=(3.01029995664*LacLm)
   remove-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [1913] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   remove-goal [1730] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] vgain[0] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[0] cfg-in Z=TetRm
   [comp] vgain[0] cfg-in X=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] itov[2] cfg-in Y=(3.01029995664*clm)
   [comp] itov[2] cfg-in K=clm
   [comp] itov[2] cfg-in X=3.01029995664
   [comp] vdadd[3] cfg-in OUT_0=20
   [comp] vdadd[3] cfg-in OUT=clp
   [comp] vdadd[3] cfg-param BSW=1
   [comp] vdadd[3] cfg-param DSW=1
   [comp] vdadd[3] cfg-in D=0.03010299956
   [comp] vdadd[3] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[3] cfg-in B=0
   [comp] itov[4] cfg-in Y=(3.01029995664*LacLm)
   [comp] itov[4] cfg-in K=LacLm
   [comp] itov[4] cfg-in X=3.01029995664
   [comp] vdadd[5] cfg-in OUT_0=60
   [comp] vdadd[5] cfg-in OUT=LacLp
   [comp] vdadd[5] cfg-param BSW=1
   [comp] vdadd[5] cfg-param DSW=1
   [comp] vdadd[5] cfg-in D=0.03010299956
   [comp] vdadd[5] cfg-in A=(3.01029995664*LacLm)
   [comp] vdadd[5] cfg-in B=0
   [comp] ihill_rep[6] cfg-in REP=TRTetR
   [comp] ihill_rep[6] cfg-in n=2
   [comp] ihill_rep[6] cfg-in S=LacLp
   [comp] ihill_rep[6] cfg-in Vmax=0.4995
   [comp] ihill_rep[6] cfg-in Km=40
   [comp] vdadd[7] cfg-in OUT_0=0.5
   [comp] vdadd[7] cfg-in OUT=LacLm
   [comp] vdadd[7] cfg-param BSW=1
   [comp] vdadd[7] cfg-param DSW=1
   [comp] vdadd[7] cfg-in B=TRLacL
   [comp] vdadd[7] cfg-in D=0.15051499783
   [comp] vdadd[7] cfg-in A=0.0005
   [comp] vdadd[8] cfg-in OUT_0=0.25
   [comp] vdadd[8] cfg-in OUT=clm
   [comp] vdadd[8] cfg-param BSW=1
   [comp] vdadd[8] cfg-param DSW=1
   [comp] vdadd[8] cfg-in B=0.0005
   [comp] vdadd[8] cfg-in D=0.15051499783
   [comp] vdadd[8] cfg-in A=TRclp
   [comp] ihill_rep[9] cfg-in REP=TRclp
   [comp] ihill_rep[9] cfg-in n=2
   [comp] ihill_rep[9] cfg-in S=TetRp
   [comp] ihill_rep[9] cfg-in Vmax=0.4995
   [comp] ihill_rep[9] cfg-in Km=40
   [comp] ihill_rep[10] cfg-in REP=TRLacL
   [comp] ihill_rep[10] cfg-in n=2
   [comp] ihill_rep[10] cfg-in S=clp
   [comp] ihill_rep[10] cfg-in Vmax=0.4995
   [comp] ihill_rep[10] cfg-in Km=40
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[0]
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] conn vgain[0].P->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] add-comp itov[2]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] conn itov[2].Y->vdadd[3].A
   [sln] generate vdadd[3].OUT = clp
   [sln] add-comp vdadd[3]
   [sln] generate itov[4].Y = (3.01029995664*LacLm)
   [sln] add-comp itov[4]
   [sln] generate itov[4].Y = (3.01029995664*LacLm)
   [sln] conn itov[4].Y->vdadd[5].A
   [sln] generate vdadd[5].OUT = LacLp
   [sln] add-comp vdadd[5]
   [sln] generate ihill_rep[6].REP = TRTetR
   [sln] add-comp ihill_rep[6]
   [sln] generate vdadd[7].OUT = LacLm
   [sln] add-comp vdadd[7]
   [sln] generate vdadd[8].OUT = clm
   [sln] add-comp vdadd[8]
   [sln] generate ihill_rep[9].REP = TRclp
   [sln] add-comp ihill_rep[9]
   [sln] generate ihill_rep[10].REP = TRLacL
   [sln] add-comp ihill_rep[10]
   [sln] route vgain[0].Z = TetRm
   [sln] route vgain[0].X = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route itov[2].K = clm
   [sln] route itov[2].X = 3.01029995664
   [sln] route vdadd[3].OUT_0 = 20
   [sln] route vdadd[3].D = 0.03010299956
   [sln] route vdadd[3].B = 0
   [sln] route itov[4].K = LacLm
   [sln] route itov[4].X = 3.01029995664
   [sln] route vdadd[5].OUT_0 = 60
   [sln] route vdadd[5].D = 0.03010299956
   [sln] route vdadd[5].B = 0
   [sln] route ihill_rep[6].n = 2
   [sln] route ihill_rep[6].S = LacLp
   [sln] route ihill_rep[6].Vmax = 0.4995
   [sln] route ihill_rep[6].Km = 40
   [sln] route vdadd[7].OUT_0 = 0.5
   [sln] route vdadd[7].B = TRLacL
   [sln] route vdadd[7].D = 0.15051499783
   [sln] route vdadd[7].A = 0.0005
   [sln] route vdadd[8].OUT_0 = 0.25
   [sln] route vdadd[8].B = 0.0005
   [sln] route vdadd[8].D = 0.15051499783
   [sln] route vdadd[8].A = TRclp
   [sln] route ihill_rep[9].n = 2
   [sln] route ihill_rep[9].S = TetRp
   [sln] route ihill_rep[9].Vmax = 0.4995
   [sln] route ihill_rep[9].Km = 40
   [sln] route ihill_rep[10].n = 2
   [sln] route ihill_rep[10].S = clp
   [sln] route ihill_rep[10].Vmax = 0.4995
   [sln] route ihill_rep[10].Km = 40
   [comp] make-comp vgain0
   [comp] make-comp vdadd1
   [comp] make-comp itov2
   [comp] make-comp vdadd3
   [comp] make-comp itov4
   [comp] make-comp vdadd5
   [comp] make-comp ihill_rep6
   [comp] make-comp vdadd7
   [comp] make-comp vdadd8
   [comp] make-comp ihill_rep9
   [comp] make-comp ihill_rep10
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 1391 to disabled
   change-goal-status 1392 to disabled
   change-goal-status 1393 to disabled
   change-goal-status 1394 to disabled
   change-goal-status 1396 to disabled
   change-goal-status 1397 to disabled
   change-goal-status 1398 to disabled
   change-goal-status 1399 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 1908 to disabled
   change-goal-status 1909 to disabled
   change-goal-status 1910 to disabled
   change-goal-status 1911 to disabled
   change-goal-status 1912 to disabled
   change-goal-status 1914 to disabled
   change-goal-status 1915 to disabled
   change-goal-status 1916 to disabled
   change-goal-status 1724 to disabled
   change-goal-status 1725 to disabled
   change-goal-status 1726 to disabled
   change-goal-status 1727 to disabled
   change-goal-status 1728 to disabled
   change-goal-status 1729 to disabled
   change-goal-status 1731 to disabled
   change-goal-status 1732 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   add-goal [1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1451] [EXPR]vdadd[5].A<V>=(3.01029995664*LacLm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1908] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1909] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1910] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1911] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1912] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1913] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1914] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1915] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1916] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1724] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1725] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1726] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1727] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1728] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1729] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1730] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1731] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1732] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ==== ROUTES =====
[multi] > vgain[0].Z = TetRm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[6].S = LacLp
[multi]    - connecting generates to routes.
[multi] > itov[4].K = LacLm
[multi]    - connecting generates to routes.
[multi] > itov[2].K = clm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[10].S = clp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[9].S = TetRp
[multi]    - connecting generates to routes.
[multi] > vdadd[7].B = TRLacL
[multi]    - connecting generates to routes.
[multi] > vdadd[8].A = TRclp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[6].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[10].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[9].n = 2
[multi]    - making an input block.
[multi] > vdadd[5].OUT_0 = 60
[multi]    - making an input block.
[multi] > vdadd[1].B = 0
[multi]    - making an input block.
[multi] > vdadd[5].B = 0
[multi]    - making an input block.
[multi] > vdadd[3].B = 0
[multi]    - making an input block.
[multi] > vdadd[7].OUT_0 = 0.5
[multi]    - making an input block.
[multi] > vdadd[8].D = 0.15051499783
[multi]    - making an input block.
[multi] > vdadd[7].D = 0.15051499783
[multi]    - making an input block.
[multi] > ihill_rep[6].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[10].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[9].Vmax = 0.4995
[multi]    - making an input block.
[multi] > vdadd[8].B = 0.0005
[multi]    - making an input block.
[multi] > vdadd[7].A = 0.0005
[multi]    - making an input block.
[multi] > vdadd[1].OUT_0 = 40
[multi]    - making an input block.
[multi] > ihill_rep[6].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[10].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[9].Km = 40
[multi]    - making an input block.
[multi] > vgain[0].X = 3.01029995664
[multi]    - making an input block.
[multi] > itov[4].X = 3.01029995664
[multi]    - making an input block.
[multi] > itov[2].X = 3.01029995664
[multi]    - making an input block.
[multi] > vdadd[8].OUT_0 = 0.25
[multi]    - making an input block.
[multi] > vdadd[3].OUT_0 = 20
[multi]    - making an input block.
[multi] > vdadd[1].D = 0.03010299956
[multi]    - making an input block.
[multi] > vdadd[5].D = 0.03010299956
[multi]    - making an input block.
[multi] > vdadd[3].D = 0.03010299956
[multi]    - making an input block.
[multi] ==== GENERATES =====
[multi] > vdadd[5].OUT = LacLp
[multi]    - making an output block.
[multi] > vdadd[7].OUT = LacLm
[multi]    - making an output block.
[multi] > vdadd[8].OUT = clm
[multi]    - making an output block.
[multi] > vdadd[3].OUT = clp
[multi]    - making an output block.
[multi] > vdadd[1].OUT = TetRp
[multi]    - making an output block.
[multi] > ihill_rep[6].REP = TRTetR
[multi] > ihill_rep[10].REP = TRLacL
[multi] > ihill_rep[9].REP = TRclp
[multi] > itov[2].Y = (3.01029995664*clm)
[multi] > itov[2].Y = (3.01029995664*clm)
[multi] > itov[4].Y = (3.01029995664*LacLm)
[multi] > itov[4].Y = (3.01029995664*LacLm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] --> Number of options 39
[multi] --> Number of nodes 1
[multi] ======= Partial (Root) Steps 283 =======
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1451] [EXPR]vdadd[5].A<V>=(3.01029995664*LacLm)
   remove-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [1913] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   remove-goal [1730] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] vgain[0] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[0] cfg-in Z=TetRm
   [comp] vgain[0] cfg-in X=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] itov[2] cfg-in Y=(3.01029995664*clm)
   [comp] itov[2] cfg-in K=clm
   [comp] itov[2] cfg-in X=3.01029995664
   [comp] vdadd[3] cfg-in OUT_0=20
   [comp] vdadd[3] cfg-in OUT=clp
   [comp] vdadd[3] cfg-param BSW=1
   [comp] vdadd[3] cfg-param DSW=1
   [comp] vdadd[3] cfg-in D=0.03010299956
   [comp] vdadd[3] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[3] cfg-in B=0
   [comp] itov[4] cfg-in Y=(3.01029995664*LacLm)
   [comp] itov[4] cfg-in K=LacLm
   [comp] itov[4] cfg-in X=3.01029995664
   [comp] vdadd[5] cfg-in OUT_0=60
   [comp] vdadd[5] cfg-in OUT=LacLp
   [comp] vdadd[5] cfg-param BSW=1
   [comp] vdadd[5] cfg-param DSW=1
   [comp] vdadd[5] cfg-in D=0.03010299956
   [comp] vdadd[5] cfg-in A=(3.01029995664*LacLm)
   [comp] vdadd[5] cfg-in B=0
   [comp] ihill_rep[6] cfg-in REP=TRTetR
   [comp] ihill_rep[6] cfg-in n=2
   [comp] ihill_rep[6] cfg-in S=LacLp
   [comp] ihill_rep[6] cfg-in Vmax=0.4995
   [comp] ihill_rep[6] cfg-in Km=40
   [comp] vdadd[7] cfg-in OUT_0=0.5
   [comp] vdadd[7] cfg-in OUT=LacLm
   [comp] vdadd[7] cfg-param BSW=1
   [comp] vdadd[7] cfg-param DSW=1
   [comp] vdadd[7] cfg-in B=TRLacL
   [comp] vdadd[7] cfg-in D=0.15051499783
   [comp] vdadd[7] cfg-in A=0.0005
   [comp] vdadd[8] cfg-in OUT_0=0.25
   [comp] vdadd[8] cfg-in OUT=clm
   [comp] vdadd[8] cfg-param BSW=1
   [comp] vdadd[8] cfg-param DSW=1
   [comp] vdadd[8] cfg-in B=0.0005
   [comp] vdadd[8] cfg-in D=0.15051499783
   [comp] vdadd[8] cfg-in A=TRclp
   [comp] ihill_rep[9] cfg-in REP=TRclp
   [comp] ihill_rep[9] cfg-in n=2
   [comp] ihill_rep[9] cfg-in S=TetRp
   [comp] ihill_rep[9] cfg-in Vmax=0.4995
   [comp] ihill_rep[9] cfg-in Km=40
   [comp] ihill_rep[10] cfg-in REP=TRLacL
   [comp] ihill_rep[10] cfg-in n=2
   [comp] ihill_rep[10] cfg-in S=clp
   [comp] ihill_rep[10] cfg-in Vmax=0.4995
   [comp] ihill_rep[10] cfg-in Km=40
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[0]
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] conn vgain[0].P->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] add-comp itov[2]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] conn itov[2].Y->vdadd[3].A
   [sln] generate vdadd[3].OUT = clp
   [sln] add-comp vdadd[3]
   [sln] generate itov[4].Y = (3.01029995664*LacLm)
   [sln] add-comp itov[4]
   [sln] generate itov[4].Y = (3.01029995664*LacLm)
   [sln] conn itov[4].Y->vdadd[5].A
   [sln] generate vdadd[5].OUT = LacLp
   [sln] add-comp vdadd[5]
   [sln] generate ihill_rep[6].REP = TRTetR
   [sln] add-comp ihill_rep[6]
   [sln] generate vdadd[7].OUT = LacLm
   [sln] add-comp vdadd[7]
   [sln] generate vdadd[8].OUT = clm
   [sln] add-comp vdadd[8]
   [sln] generate ihill_rep[9].REP = TRclp
   [sln] add-comp ihill_rep[9]
   [sln] generate ihill_rep[10].REP = TRLacL
   [sln] add-comp ihill_rep[10]
   [sln] route vgain[0].Z = TetRm
   [sln] route vgain[0].X = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route itov[2].K = clm
   [sln] route itov[2].X = 3.01029995664
   [sln] route vdadd[3].OUT_0 = 20
   [sln] route vdadd[3].D = 0.03010299956
   [sln] route vdadd[3].B = 0
   [sln] route itov[4].K = LacLm
   [sln] route itov[4].X = 3.01029995664
   [sln] route vdadd[5].OUT_0 = 60
   [sln] route vdadd[5].D = 0.03010299956
   [sln] route vdadd[5].B = 0
   [sln] route ihill_rep[6].n = 2
   [sln] route ihill_rep[6].S = LacLp
   [sln] route ihill_rep[6].Vmax = 0.4995
   [sln] route ihill_rep[6].Km = 40
   [sln] route vdadd[7].OUT_0 = 0.5
   [sln] route vdadd[7].B = TRLacL
   [sln] route vdadd[7].D = 0.15051499783
   [sln] route vdadd[7].A = 0.0005
   [sln] route vdadd[8].OUT_0 = 0.25
   [sln] route vdadd[8].B = 0.0005
   [sln] route vdadd[8].D = 0.15051499783
   [sln] route vdadd[8].A = TRclp
   [sln] route ihill_rep[9].n = 2
   [sln] route ihill_rep[9].S = TetRp
   [sln] route ihill_rep[9].Vmax = 0.4995
   [sln] route ihill_rep[9].Km = 40
   [sln] route ihill_rep[10].n = 2
   [sln] route ihill_rep[10].S = clp
   [sln] route ihill_rep[10].Vmax = 0.4995
   [sln] route ihill_rep[10].Km = 40
   [comp] make-comp vgain0
   [comp] make-comp vdadd1
   [comp] make-comp itov2
   [comp] make-comp vdadd3
   [comp] make-comp itov4
   [comp] make-comp vdadd5
   [comp] make-comp ihill_rep6
   [comp] make-comp vdadd7
   [comp] make-comp vdadd8
   [comp] make-comp ihill_rep9
   [comp] make-comp ihill_rep10
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 1391 to disabled
   change-goal-status 1392 to disabled
   change-goal-status 1393 to disabled
   change-goal-status 1394 to disabled
   change-goal-status 1396 to disabled
   change-goal-status 1397 to disabled
   change-goal-status 1398 to disabled
   change-goal-status 1399 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 1908 to disabled
   change-goal-status 1909 to disabled
   change-goal-status 1910 to disabled
   change-goal-status 1911 to disabled
   change-goal-status 1912 to disabled
   change-goal-status 1914 to disabled
   change-goal-status 1915 to disabled
   change-goal-status 1916 to disabled
   change-goal-status 1724 to disabled
   change-goal-status 1725 to disabled
   change-goal-status 1726 to disabled
   change-goal-status 1727 to disabled
   change-goal-status 1728 to disabled
   change-goal-status 1729 to disabled
   change-goal-status 1731 to disabled
   change-goal-status 1732 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   add-goal [1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1451] [EXPR]vdadd[5].A<V>=(3.01029995664*LacLm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1908] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1909] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1910] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1911] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1912] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1913] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1914] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1915] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1916] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1724] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1725] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1726] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1727] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1728] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1729] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1730] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1731] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1732] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ============================
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.V[0] cfg-in X=2
     [comp] input.V[0] cfg-out O=2
     [comp] input.V[1] cfg-in X=2
     [comp] input.V[1] cfg-out O=2
     [comp] input.V[2] cfg-in X=2
     [comp] input.V[2] cfg-out O=2
     [comp] input.V[3] cfg-in X=60
     [comp] input.V[3] cfg-out O=60
     [comp] input.V[4] cfg-in X=0
     [comp] input.V[4] cfg-out O=0
     [comp] input.V[5] cfg-in X=0
     [comp] input.V[5] cfg-out O=0
     [comp] input.V[6] cfg-in X=0
     [comp] input.V[6] cfg-out O=0
     [comp] input.V[7] cfg-in X=0.5
     [comp] input.V[7] cfg-out O=0.5
     [comp] input.I[0] cfg-in X=0.15051499783
     [comp] input.I[0] cfg-out O=0.15051499783
     [comp] input.I[1] cfg-in X=0.15051499783
     [comp] input.I[1] cfg-out O=0.15051499783
     [comp] input.I[2] cfg-in X=0.4995
     [comp] input.I[2] cfg-out O=0.4995
     [comp] input.I[3] cfg-in X=0.4995
     [comp] input.I[3] cfg-out O=0.4995
     [comp] input.I[4] cfg-in X=0.4995
     [comp] input.I[4] cfg-out O=0.4995
     [comp] input.V[8] cfg-in X=0.0005
     [comp] input.V[8] cfg-out O=0.0005
     [comp] input.V[9] cfg-in X=0.0005
     [comp] input.V[9] cfg-out O=0.0005
     [comp] input.V[10] cfg-in X=40
     [comp] input.V[10] cfg-out O=40
     [comp] input.I[5] cfg-in X=40
     [comp] input.I[5] cfg-out O=40
     [comp] input.I[6] cfg-in X=40
     [comp] input.I[6] cfg-out O=40
     [comp] input.I[7] cfg-in X=40
     [comp] input.I[7] cfg-out O=40
     [comp] input.V[11] cfg-in X=3.01029995664
     [comp] input.V[11] cfg-out O=3.01029995664
     [comp] input.I[8] cfg-in X=3.01029995664
     [comp] input.I[8] cfg-out O=3.01029995664
     [comp] input.I[9] cfg-in X=3.01029995664
     [comp] input.I[9] cfg-out O=3.01029995664
     [comp] input.V[12] cfg-in X=0.25
     [comp] input.V[12] cfg-out O=0.25
     [comp] input.V[13] cfg-in X=20
     [comp] input.V[13] cfg-out O=20
     [comp] input.I[10] cfg-in X=0.03010299956
     [comp] input.I[10] cfg-out O=0.03010299956
     [comp] input.I[11] cfg-in X=0.03010299956
     [comp] input.I[11] cfg-out O=0.03010299956
     [comp] input.I[12] cfg-in X=0.03010299956
     [comp] input.I[12] cfg-out O=0.03010299956
     [comp] output.V[0] cfg-in X=LacLp
     [comp] output.V[0] cfg-out O=LacLp
     [comp] output.V[1] cfg-in X=LacLm
     [comp] output.V[1] cfg-out O=LacLm
     [comp] output.V[2] cfg-in X=clm
     [comp] output.V[2] cfg-out O=clm
     [comp] output.V[3] cfg-in X=clp
     [comp] output.V[3] cfg-out O=clp
     [comp] output.V[4] cfg-in X=TetRp
     [comp] output.V[4] cfg-out O=TetRp
     [sln] rm-route ihill_rep[6].S = LacLp
     [sln] rm-route itov[4].K = LacLm
     [sln] rm-route itov[2].K = clm
     [sln] rm-route ihill_rep[10].S = clp
     [sln] rm-route ihill_rep[9].S = TetRp
     [sln] rm-route vdadd[7].B = TRLacL
     [sln] rm-route vdadd[8].A = TRclp
     [sln] rm-route ihill_rep[6].n = 2
     [sln] add-comp input.V[0]
     [sln] generate input.V[0].O = 2
     [sln] rm-route ihill_rep[10].n = 2
     [sln] add-comp input.V[1]
     [sln] generate input.V[1].O = 2
     [sln] rm-route ihill_rep[9].n = 2
     [sln] add-comp input.V[2]
     [sln] generate input.V[2].O = 2
     [sln] rm-route vdadd[5].OUT_0 = 60
     [sln] add-comp input.V[3]
     [sln] generate input.V[3].O = 60
     [sln] rm-route vdadd[1].B = 0
     [sln] add-comp input.V[4]
     [sln] generate input.V[4].O = 0
     [sln] rm-route vdadd[5].B = 0
     [sln] add-comp input.V[5]
     [sln] generate input.V[5].O = 0
     [sln] rm-route vdadd[3].B = 0
     [sln] add-comp input.V[6]
     [sln] generate input.V[6].O = 0
     [sln] rm-route vdadd[7].OUT_0 = 0.5
     [sln] add-comp input.V[7]
     [sln] generate input.V[7].O = 0.5
     [sln] rm-route vdadd[8].D = 0.15051499783
     [sln] add-comp input.I[0]
     [sln] generate input.I[0].O = 0.15051499783
     [sln] rm-route vdadd[7].D = 0.15051499783
     [sln] add-comp input.I[1]
     [sln] generate input.I[1].O = 0.15051499783
     [sln] rm-route ihill_rep[6].Vmax = 0.4995
     [sln] add-comp input.I[2]
     [sln] generate input.I[2].O = 0.4995
     [sln] rm-route ihill_rep[10].Vmax = 0.4995
     [sln] add-comp input.I[3]
     [sln] generate input.I[3].O = 0.4995
     [sln] rm-route ihill_rep[9].Vmax = 0.4995
     [sln] add-comp input.I[4]
     [sln] generate input.I[4].O = 0.4995
     [sln] rm-route vdadd[8].B = 0.0005
     [sln] add-comp input.V[8]
     [sln] generate input.V[8].O = 0.0005
     [sln] rm-route vdadd[7].A = 0.0005
     [sln] add-comp input.V[9]
     [sln] generate input.V[9].O = 0.0005
     [sln] rm-route vdadd[1].OUT_0 = 40
     [sln] add-comp input.V[10]
     [sln] generate input.V[10].O = 40
     [sln] rm-route ihill_rep[6].Km = 40
     [sln] add-comp input.I[5]
     [sln] generate input.I[5].O = 40
     [sln] rm-route ihill_rep[10].Km = 40
     [sln] add-comp input.I[6]
     [sln] generate input.I[6].O = 40
     [sln] rm-route ihill_rep[9].Km = 40
     [sln] add-comp input.I[7]
     [sln] generate input.I[7].O = 40
     [sln] rm-route vgain[0].X = 3.01029995664
     [sln] add-comp input.V[11]
     [sln] generate input.V[11].O = 3.01029995664
     [sln] rm-route itov[4].X = 3.01029995664
     [sln] add-comp input.I[8]
     [sln] generate input.I[8].O = 3.01029995664
     [sln] rm-route itov[2].X = 3.01029995664
     [sln] add-comp input.I[9]
     [sln] generate input.I[9].O = 3.01029995664
     [sln] rm-route vdadd[8].OUT_0 = 0.25
     [sln] add-comp input.V[12]
     [sln] generate input.V[12].O = 0.25
     [sln] rm-route vdadd[3].OUT_0 = 20
     [sln] add-comp input.V[13]
     [sln] generate input.V[13].O = 20
     [sln] rm-route vdadd[1].D = 0.03010299956
     [sln] add-comp input.I[10]
     [sln] generate input.I[10].O = 0.03010299956
     [sln] rm-route vdadd[5].D = 0.03010299956
     [sln] add-comp input.I[11]
     [sln] generate input.I[11].O = 0.03010299956
     [sln] rm-route vdadd[3].D = 0.03010299956
     [sln] add-comp input.I[12]
     [sln] generate input.I[12].O = 0.03010299956
     [sln] add-comp output.V[0]
     [sln] generate output.V[0].O = LacLp
     [sln] add-comp output.V[1]
     [sln] generate output.V[1].O = LacLm
     [sln] add-comp output.V[2]
     [sln] generate output.V[2].O = clm
     [sln] add-comp output.V[3]
     [sln] generate output.V[3].O = clp
     [sln] add-comp output.V[4]
     [sln] generate output.V[4].O = TetRp
     [sln] route input.V[0].X = 2
     [sln] route input.V[1].X = 2
     [sln] route input.V[2].X = 2
     [sln] route input.V[3].X = 60
     [sln] route input.V[4].X = 0
     [sln] route input.V[5].X = 0
     [sln] route input.V[6].X = 0
     [sln] route input.V[7].X = 0.5
     [sln] route input.I[0].X = 0.15051499783
     [sln] route input.I[1].X = 0.15051499783
     [sln] route input.I[2].X = 0.4995
     [sln] route input.I[3].X = 0.4995
     [sln] route input.I[4].X = 0.4995
     [sln] route input.V[8].X = 0.0005
     [sln] route input.V[9].X = 0.0005
     [sln] route input.V[10].X = 40
     [sln] route input.I[5].X = 40
     [sln] route input.I[6].X = 40
     [sln] route input.I[7].X = 40
     [sln] route input.V[11].X = 3.01029995664
     [sln] route input.I[8].X = 3.01029995664
     [sln] route input.I[9].X = 3.01029995664
     [sln] route input.V[12].X = 0.25
     [sln] route input.V[13].X = 20
     [sln] route input.I[10].X = 0.03010299956
     [sln] route input.I[11].X = 0.03010299956
     [sln] route input.I[12].X = 0.03010299956
     [comp] make-comp input.V0
     [comp] make-comp input.V1
     [comp] make-comp input.V2
     [comp] make-comp input.V3
     [comp] make-comp input.V4
     [comp] make-comp input.V5
     [comp] make-comp input.V6
     [comp] make-comp input.V7
     [comp] make-comp input.I0
     [comp] make-comp input.I1
     [comp] make-comp input.I2
     [comp] make-comp input.I3
     [comp] make-comp input.I4
     [comp] make-comp input.V8
     [comp] make-comp input.V9
     [comp] make-comp input.V10
     [comp] make-comp input.I5
     [comp] make-comp input.I6
     [comp] make-comp input.I7
     [comp] make-comp input.V11
     [comp] make-comp input.I8
     [comp] make-comp input.I9
     [comp] make-comp input.V12
     [comp] make-comp input.V13
     [comp] make-comp input.I10
     [comp] make-comp input.I11
     [comp] make-comp input.I12
     [comp] make-comp output.V0
     [comp] make-comp output.V1
     [comp] make-comp output.V2
     [comp] make-comp output.V3
     [comp] make-comp output.V4
     add-goal [2071] [CONN] vdadd[5].OUT => ihill_rep[6].S (LacLp)
     add-goal [2072] [CONN] vdadd[7].OUT => itov[4].K (LacLm)
     add-goal [2073] [CONN] vdadd[8].OUT => itov[2].K (clm)
     add-goal [2074] [CONN] vdadd[3].OUT => ihill_rep[10].S (clp)
     add-goal [2075] [CONN] vdadd[1].OUT => ihill_rep[9].S (TetRp)
     add-goal [2076] [CONN] ihill_rep[10].REP => vdadd[7].B (TRLacL)
     add-goal [2077] [CONN] ihill_rep[9].REP => vdadd[8].A (TRclp)
     add-goal [2078] [CONN] input.V[0].O => ihill_rep[6].n (2)
     add-goal [2079] [CONN] input.V[1].O => ihill_rep[10].n (2)
     add-goal [2080] [CONN] input.V[2].O => ihill_rep[9].n (2)
     add-goal [2081] [CONN] input.V[3].O => vdadd[5].OUT_0 (60)
     add-goal [2082] [CONN] input.V[4].O => vdadd[1].B (0)
     add-goal [2083] [CONN] input.V[5].O => vdadd[5].B (0)
     add-goal [2084] [CONN] input.V[6].O => vdadd[3].B (0)
     add-goal [2085] [CONN] input.V[7].O => vdadd[7].OUT_0 (0.5)
     add-goal [2086] [CONN] input.I[0].O => vdadd[8].D (0.15051499783)
     add-goal [2087] [CONN] input.I[1].O => vdadd[7].D (0.15051499783)
     add-goal [2088] [CONN] input.I[2].O => ihill_rep[6].Vmax (0.4995)
     add-goal [2089] [CONN] input.I[3].O => ihill_rep[10].Vmax (0.4995)
     add-goal [2090] [CONN] input.I[4].O => ihill_rep[9].Vmax (0.4995)
     add-goal [2091] [CONN] input.V[8].O => vdadd[8].B (0.0005)
     add-goal [2092] [CONN] input.V[9].O => vdadd[7].A (0.0005)
     add-goal [2093] [CONN] input.V[10].O => vdadd[1].OUT_0 (40)
     add-goal [2094] [CONN] input.I[5].O => ihill_rep[6].Km (40)
     add-goal [2095] [CONN] input.I[6].O => ihill_rep[10].Km (40)
     add-goal [2096] [CONN] input.I[7].O => ihill_rep[9].Km (40)
     add-goal [2097] [CONN] input.V[11].O => vgain[0].X (3.01029995664)
     add-goal [2098] [CONN] input.I[8].O => itov[4].X (3.01029995664)
     add-goal [2099] [CONN] input.I[9].O => itov[2].X (3.01029995664)
     add-goal [2100] [CONN] input.V[12].O => vdadd[8].OUT_0 (0.25)
     add-goal [2101] [CONN] input.V[13].O => vdadd[3].OUT_0 (20)
     add-goal [2102] [CONN] input.I[10].O => vdadd[1].D (0.03010299956)
     add-goal [2103] [CONN] input.I[11].O => vdadd[5].D (0.03010299956)
     add-goal [2104] [CONN] input.I[12].O => vdadd[3].D (0.03010299956)
     add-goal [2105] [CONN] vdadd[5].OUT => output.V[0].X (LacLp)
     add-goal [2106] [CONN] vdadd[7].OUT => output.V[1].X (LacLm)
     add-goal [2107] [CONN] vdadd[8].OUT => output.V[2].X (clm)
     add-goal [2108] [CONN] vdadd[3].OUT => output.V[3].X (clp)
     add-goal [2109] [CONN] vdadd[1].OUT => output.V[4].X (TetRp)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1732] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1915] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1908] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1909] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1910] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1726] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1911] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1729] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1916] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1727] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1914] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1912] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1725] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1728] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1731] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1724] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2089] [CONN] input.I[3].O => ihill_rep[10].Vmax (0.4995)
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2107] [CONN] vdadd[8].OUT => output.V[2].X (clm)
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[2080] [CONN] input.V[2].O => ihill_rep[9].n (2)
[1732] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[2074] [CONN] vdadd[3].OUT => ihill_rep[10].S (clp)
[2096] [CONN] input.I[7].O => ihill_rep[9].Km (40)
[2101] [CONN] input.V[13].O => vdadd[3].OUT_0 (20)
[1915] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2076] [CONN] ihill_rep[10].REP => vdadd[7].B (TRLacL)
[2087] [CONN] input.I[1].O => vdadd[7].D (0.15051499783)
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1908] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1909] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1910] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[2077] [CONN] ihill_rep[9].REP => vdadd[8].A (TRclp)
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2099] [CONN] input.I[9].O => itov[2].X (3.01029995664)
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2079] [CONN] input.V[1].O => ihill_rep[10].n (2)
[2083] [CONN] input.V[5].O => vdadd[5].B (0)
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2109] [CONN] vdadd[1].OUT => output.V[4].X (TetRp)
[2085] [CONN] input.V[7].O => vdadd[7].OUT_0 (0.5)
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1726] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2106] [CONN] vdadd[7].OUT => output.V[1].X (LacLm)
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1911] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1729] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2093] [CONN] input.V[10].O => vdadd[1].OUT_0 (40)
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2082] [CONN] input.V[4].O => vdadd[1].B (0)
[2100] [CONN] input.V[12].O => vdadd[8].OUT_0 (0.25)
[2103] [CONN] input.I[11].O => vdadd[5].D (0.03010299956)
[2090] [CONN] input.I[4].O => ihill_rep[9].Vmax (0.4995)
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2108] [CONN] vdadd[3].OUT => output.V[3].X (clp)
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1916] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1727] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[2072] [CONN] vdadd[7].OUT => itov[4].K (LacLm)
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[2102] [CONN] input.I[10].O => vdadd[1].D (0.03010299956)
[2088] [CONN] input.I[2].O => ihill_rep[6].Vmax (0.4995)
[1914] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2075] [CONN] vdadd[1].OUT => ihill_rep[9].S (TetRp)
[1912] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2078] [CONN] input.V[0].O => ihill_rep[6].n (2)
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2092] [CONN] input.V[9].O => vdadd[7].A (0.0005)
[2081] [CONN] input.V[3].O => vdadd[5].OUT_0 (60)
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2073] [CONN] vdadd[8].OUT => itov[2].K (clm)
[2084] [CONN] input.V[6].O => vdadd[3].B (0)
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1725] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2086] [CONN] input.I[0].O => vdadd[8].D (0.15051499783)
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2095] [CONN] input.I[6].O => ihill_rep[10].Km (40)
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1728] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2097] [CONN] input.V[11].O => vgain[0].X (3.01029995664)
[2098] [CONN] input.I[8].O => itov[4].X (3.01029995664)
[2105] [CONN] vdadd[5].OUT => output.V[0].X (LacLp)
[2071] [CONN] vdadd[5].OUT => ihill_rep[6].S (LacLp)
[2104] [CONN] input.I[12].O => vdadd[3].D (0.03010299956)
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1731] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2094] [CONN] input.I[5].O => ihill_rep[6].Km (40)
[1724] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[2091] [CONN] input.V[8].O => vdadd[8].B (0.0005)
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> Current Goal: [2091] [CONN] input.V[8].O => vdadd[8].B (0.0005)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->itov.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vgain.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->itov.K
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.A
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->itov.K
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->itov.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>ihill_rep.REP->vdadd.A
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>ihill_rep.REP->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 3
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=65

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] [TERMINATE] found 0 / 1
[eqn] [TERMINATE] could not find another node
[multi]   >> Found # Global Solutions: 1/1
[multi] >>>SOLUTION IS UNFINISHED <<<
[multi] # Found 0, Required: 1
[multi] solving target: TetRm
[multi] search tree is not exhausted. adding existing:TetRm
[multi] finding new partial solution
[multi] made a partial tree with 9 goals
[multi] find a partial solution
[multi] == Finding Local Solution ==
[multi] == Current # Solutions: 0
[multi] == # New Solutions To Find: 1
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[2111] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2115] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2112] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2116] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2117] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2118] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2113] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[2114] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2110] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[2111] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2115] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2112] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2116] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2117] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2118] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2113] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[2114] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2110] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}

============
>> Current Goal: [2111] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
vdadd.OUT -> true
mm.XY -> true
[eqn] >>> NUMBER OF COMPATIBLE COMPONENTS  2 <<<
[eqn] new: [0] <vdadd> output OUT.V
<analog-st> ((vdadd.V{A}:+(vdadd.BSW*vdadd.V{B}:))-(vdadd.DSW*vdadd.I{D}:*vdadd.V{OUT}:)) ic=OUT_0.V / std=none 0
<analog-st> [ddt v]=?? {ddt v}->[ddt v]=@
<analog-st> [v]=[0.,12000.] {v}->[v]=@ {v}->*[v]=@


checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 11 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[0].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 11 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 15 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
checking reachability of vdadd[1].OUT to output block.
number reachable output blocks 1/26
[eqn]     -> converted to 13 ssteps
[eqn] new: [0] <mm> output XY.V
<analog-st> ((mm.I{kf}:*mm.V{X}:*mm.V{Y}:)-(mm.I{kr}:*mm.V{XY}:)) ic=XY0.V / std=gauss ((0.001*mm.V{XY}:)+0.1)
<analog-st> [ddt v]=?? {ddt v}->[ddt v]=@
<analog-st> [v]=[0.,3200.] {v}->[v]=@ {v}->*[v]=@


[eqn] [FOUND-SOLS] ===> Found <23> solutions
[slvrsearch] > weight--: <mvar-goal>TetRm
[eqn] -> [valid?] testing node 40
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=66

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 37
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=67

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 35
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=68

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] -> [valid?] testing node 17
[eqn] <<< SAT => VALID >>
[eqn] [search_tree] Found enough solutions
[multi] === returned from partial search ===
[multi] >>> Partial Results Found <<<
[multi] done with search
[multi] found some partial solutions. Will add partial solution node and global
[multi] == Adding Local Solution : 40 ==
[multi] == Adding Local Solution : 37 ==
[multi] == Adding Local Solution : 35 ==
[multi]  > Added Local Solution
[multi]  > Finding Global Solution
[multi] found # steps: 43
[multi] found # steps: 43
[multi] found # steps: 43
[multi] found # steps: 30
[multi] found # steps: 32
[multi] found # steps: 32
[multi] found # steps: 32
[multi] found # steps: 30
[multi] found # steps: 30
[multi] # partial ids = 9
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1451] [EXPR]vdadd[5].A<V>=(3.01029995664*LacLm)
   remove-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [1913] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   remove-goal [2111] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   remove-goal [1730] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] vgain[0] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[0] cfg-in Z=TetRm
   [comp] vgain[0] cfg-in X=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] itov[2] cfg-in Y=(3.01029995664*clm)
   [comp] itov[2] cfg-in K=clm
   [comp] itov[2] cfg-in X=3.01029995664
   [comp] vdadd[3] cfg-in OUT_0=20
   [comp] vdadd[3] cfg-in OUT=clp
   [comp] vdadd[3] cfg-param BSW=1
   [comp] vdadd[3] cfg-param DSW=1
   [comp] vdadd[3] cfg-in D=0.03010299956
   [comp] vdadd[3] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[3] cfg-in B=0
   [comp] itov[4] cfg-in Y=(3.01029995664*LacLm)
   [comp] itov[4] cfg-in K=LacLm
   [comp] itov[4] cfg-in X=3.01029995664
   [comp] vdadd[5] cfg-in OUT_0=60
   [comp] vdadd[5] cfg-in OUT=LacLp
   [comp] vdadd[5] cfg-param BSW=1
   [comp] vdadd[5] cfg-param DSW=1
   [comp] vdadd[5] cfg-in D=0.03010299956
   [comp] vdadd[5] cfg-in A=(3.01029995664*LacLm)
   [comp] vdadd[5] cfg-in B=0
   [comp] ihill_rep[6] cfg-in REP=TRTetR
   [comp] ihill_rep[6] cfg-in n=2
   [comp] ihill_rep[6] cfg-in S=LacLp
   [comp] ihill_rep[6] cfg-in Vmax=0.4995
   [comp] ihill_rep[6] cfg-in Km=40
   [comp] vdadd[7] cfg-in OUT_0=0.5
   [comp] vdadd[7] cfg-in OUT=LacLm
   [comp] vdadd[7] cfg-param BSW=1
   [comp] vdadd[7] cfg-param DSW=1
   [comp] vdadd[7] cfg-in B=TRLacL
   [comp] vdadd[7] cfg-in D=0.15051499783
   [comp] vdadd[7] cfg-in A=0.0005
   [comp] vdadd[8] cfg-in OUT_0=0.12
   [comp] vdadd[8] cfg-in OUT=TetRm
   [comp] vdadd[8] cfg-param BSW=1
   [comp] vdadd[8] cfg-param DSW=1
   [comp] vdadd[8] cfg-in B=0.0005
   [comp] vdadd[8] cfg-in D=0.15051499783
   [comp] vdadd[8] cfg-in A=TRTetR
   [comp] vdadd[9] cfg-in OUT_0=0.25
   [comp] vdadd[9] cfg-in OUT=clm
   [comp] vdadd[9] cfg-param BSW=1
   [comp] vdadd[9] cfg-param DSW=1
   [comp] vdadd[9] cfg-in B=0.0005
   [comp] vdadd[9] cfg-in D=0.15051499783
   [comp] vdadd[9] cfg-in A=TRclp
   [comp] ihill_rep[10] cfg-in REP=TRclp
   [comp] ihill_rep[10] cfg-in n=2
   [comp] ihill_rep[10] cfg-in S=TetRp
   [comp] ihill_rep[10] cfg-in Vmax=0.4995
   [comp] ihill_rep[10] cfg-in Km=40
   [comp] ihill_rep[11] cfg-in REP=TRLacL
   [comp] ihill_rep[11] cfg-in n=2
   [comp] ihill_rep[11] cfg-in S=clp
   [comp] ihill_rep[11] cfg-in Vmax=0.4995
   [comp] ihill_rep[11] cfg-in Km=40
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[0]
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] conn vgain[0].P->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] add-comp itov[2]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] conn itov[2].Y->vdadd[3].A
   [sln] generate vdadd[3].OUT = clp
   [sln] add-comp vdadd[3]
   [sln] generate itov[4].Y = (3.01029995664*LacLm)
   [sln] add-comp itov[4]
   [sln] generate itov[4].Y = (3.01029995664*LacLm)
   [sln] conn itov[4].Y->vdadd[5].A
   [sln] generate vdadd[5].OUT = LacLp
   [sln] add-comp vdadd[5]
   [sln] generate ihill_rep[6].REP = TRTetR
   [sln] add-comp ihill_rep[6]
   [sln] generate vdadd[7].OUT = LacLm
   [sln] add-comp vdadd[7]
   [sln] generate vdadd[8].OUT = TetRm
   [sln] add-comp vdadd[8]
   [sln] generate vdadd[9].OUT = clm
   [sln] add-comp vdadd[9]
   [sln] generate ihill_rep[10].REP = TRclp
   [sln] add-comp ihill_rep[10]
   [sln] generate ihill_rep[11].REP = TRLacL
   [sln] add-comp ihill_rep[11]
   [sln] route vgain[0].Z = TetRm
   [sln] route vgain[0].X = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route itov[2].K = clm
   [sln] route itov[2].X = 3.01029995664
   [sln] route vdadd[3].OUT_0 = 20
   [sln] route vdadd[3].D = 0.03010299956
   [sln] route vdadd[3].B = 0
   [sln] route itov[4].K = LacLm
   [sln] route itov[4].X = 3.01029995664
   [sln] route vdadd[5].OUT_0 = 60
   [sln] route vdadd[5].D = 0.03010299956
   [sln] route vdadd[5].B = 0
   [sln] route ihill_rep[6].n = 2
   [sln] route ihill_rep[6].S = LacLp
   [sln] route ihill_rep[6].Vmax = 0.4995
   [sln] route ihill_rep[6].Km = 40
   [sln] route vdadd[7].OUT_0 = 0.5
   [sln] route vdadd[7].B = TRLacL
   [sln] route vdadd[7].D = 0.15051499783
   [sln] route vdadd[7].A = 0.0005
   [sln] route vdadd[8].OUT_0 = 0.12
   [sln] route vdadd[8].B = 0.0005
   [sln] route vdadd[8].D = 0.15051499783
   [sln] route vdadd[8].A = TRTetR
   [sln] route vdadd[9].OUT_0 = 0.25
   [sln] route vdadd[9].B = 0.0005
   [sln] route vdadd[9].D = 0.15051499783
   [sln] route vdadd[9].A = TRclp
   [sln] route ihill_rep[10].n = 2
   [sln] route ihill_rep[10].S = TetRp
   [sln] route ihill_rep[10].Vmax = 0.4995
   [sln] route ihill_rep[10].Km = 40
   [sln] route ihill_rep[11].n = 2
   [sln] route ihill_rep[11].S = clp
   [sln] route ihill_rep[11].Vmax = 0.4995
   [sln] route ihill_rep[11].Km = 40
   [comp] make-comp vgain0
   [comp] make-comp vdadd1
   [comp] make-comp itov2
   [comp] make-comp vdadd3
   [comp] make-comp itov4
   [comp] make-comp vdadd5
   [comp] make-comp ihill_rep6
   [comp] make-comp vdadd7
   [comp] make-comp vdadd8
   [comp] make-comp vdadd9
   [comp] make-comp ihill_rep10
   [comp] make-comp ihill_rep11
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 1391 to disabled
   change-goal-status 1392 to disabled
   change-goal-status 1393 to disabled
   change-goal-status 1394 to disabled
   change-goal-status 1396 to disabled
   change-goal-status 1397 to disabled
   change-goal-status 1398 to disabled
   change-goal-status 1399 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 1908 to disabled
   change-goal-status 1909 to disabled
   change-goal-status 1910 to disabled
   change-goal-status 1911 to disabled
   change-goal-status 1912 to disabled
   change-goal-status 1914 to disabled
   change-goal-status 1915 to disabled
   change-goal-status 1916 to disabled
   change-goal-status 2110 to disabled
   change-goal-status 2112 to disabled
   change-goal-status 2113 to disabled
   change-goal-status 2114 to disabled
   change-goal-status 2115 to disabled
   change-goal-status 2116 to disabled
   change-goal-status 2117 to disabled
   change-goal-status 2118 to disabled
   change-goal-status 1724 to disabled
   change-goal-status 1725 to disabled
   change-goal-status 1726 to disabled
   change-goal-status 1727 to disabled
   change-goal-status 1728 to disabled
   change-goal-status 1729 to disabled
   change-goal-status 1731 to disabled
   change-goal-status 1732 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   add-goal [1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1451] [EXPR]vdadd[5].A<V>=(3.01029995664*LacLm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1908] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1909] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1910] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1911] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1912] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1913] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1914] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1915] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1916] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [2110] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [2111] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2112] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [2113] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [2114] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [2115] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2116] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2117] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [2118] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1724] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1725] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1726] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1727] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1728] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1729] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1730] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1731] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1732] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ==== ROUTES =====
[multi] > vgain[0].Z = TetRm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[6].S = LacLp
[multi]    - connecting generates to routes.
[multi] > itov[4].K = LacLm
[multi]    - connecting generates to routes.
[multi] > itov[2].K = clm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[11].S = clp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[10].S = TetRp
[multi]    - connecting generates to routes.
[multi] > vdadd[8].A = TRTetR
[multi]    - connecting generates to routes.
[multi] > vdadd[7].B = TRLacL
[multi]    - connecting generates to routes.
[multi] > vdadd[9].A = TRclp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[6].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[11].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[10].n = 2
[multi]    - making an input block.
[multi] > vdadd[5].OUT_0 = 60
[multi]    - making an input block.
[multi] > vdadd[1].B = 0
[multi]    - making an input block.
[multi] > vdadd[5].B = 0
[multi]    - making an input block.
[multi] > vdadd[3].B = 0
[multi]    - making an input block.
[multi] > vdadd[8].OUT_0 = 0.12
[multi]    - making an input block.
[multi] > vdadd[7].OUT_0 = 0.5
[multi]    - making an input block.
[multi] > vdadd[7].D = 0.15051499783
[multi]    - making an input block.
[multi] > vdadd[9].D = 0.15051499783
[multi]    - making an input block.
[multi] > vdadd[8].D = 0.15051499783
[multi]    - making an input block.
[multi] > ihill_rep[6].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[11].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[10].Vmax = 0.4995
[multi]    - making an input block.
[multi] > vdadd[7].A = 0.0005
[multi]    - making an input block.
[multi] > vdadd[9].B = 0.0005
[multi]    - making an input block.
[multi] > vdadd[8].B = 0.0005
[multi]    - making an input block.
[multi] > vdadd[1].OUT_0 = 40
[multi]    - making an input block.
[multi] > ihill_rep[6].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[11].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[10].Km = 40
[multi]    - making an input block.
[multi] > vgain[0].X = 3.01029995664
[multi]    - making an input block.
[multi] > itov[4].X = 3.01029995664
[multi]    - making an input block.
[multi] > itov[2].X = 3.01029995664
[multi]    - making an input block.
[multi] > vdadd[9].OUT_0 = 0.25
[multi]    - making an input block.
[multi] > vdadd[3].OUT_0 = 20
[multi]    - making an input block.
[multi] > vdadd[1].D = 0.03010299956
[multi]    - making an input block.
[multi] > vdadd[5].D = 0.03010299956
[multi]    - making an input block.
[multi] > vdadd[3].D = 0.03010299956
[multi]    - making an input block.
[multi] ==== GENERATES =====
[multi] > vdadd[8].OUT = TetRm
[multi]    - making an output block.
[multi] > vdadd[5].OUT = LacLp
[multi]    - making an output block.
[multi] > vdadd[7].OUT = LacLm
[multi]    - making an output block.
[multi] > vdadd[9].OUT = clm
[multi]    - making an output block.
[multi] > vdadd[3].OUT = clp
[multi]    - making an output block.
[multi] > vdadd[1].OUT = TetRp
[multi]    - making an output block.
[multi] > ihill_rep[6].REP = TRTetR
[multi] > ihill_rep[11].REP = TRLacL
[multi] > ihill_rep[10].REP = TRclp
[multi] > itov[2].Y = (3.01029995664*clm)
[multi] > itov[2].Y = (3.01029995664*clm)
[multi] > itov[4].Y = (3.01029995664*LacLm)
[multi] > itov[4].Y = (3.01029995664*LacLm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] --> Number of options 45
[multi] --> Number of nodes 1
[multi] ======= Partial (Root) Steps 315 =======
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1451] [EXPR]vdadd[5].A<V>=(3.01029995664*LacLm)
   remove-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [1913] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   remove-goal [2111] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   remove-goal [1730] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] vgain[0] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[0] cfg-in Z=TetRm
   [comp] vgain[0] cfg-in X=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] itov[2] cfg-in Y=(3.01029995664*clm)
   [comp] itov[2] cfg-in K=clm
   [comp] itov[2] cfg-in X=3.01029995664
   [comp] vdadd[3] cfg-in OUT_0=20
   [comp] vdadd[3] cfg-in OUT=clp
   [comp] vdadd[3] cfg-param BSW=1
   [comp] vdadd[3] cfg-param DSW=1
   [comp] vdadd[3] cfg-in D=0.03010299956
   [comp] vdadd[3] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[3] cfg-in B=0
   [comp] itov[4] cfg-in Y=(3.01029995664*LacLm)
   [comp] itov[4] cfg-in K=LacLm
   [comp] itov[4] cfg-in X=3.01029995664
   [comp] vdadd[5] cfg-in OUT_0=60
   [comp] vdadd[5] cfg-in OUT=LacLp
   [comp] vdadd[5] cfg-param BSW=1
   [comp] vdadd[5] cfg-param DSW=1
   [comp] vdadd[5] cfg-in D=0.03010299956
   [comp] vdadd[5] cfg-in A=(3.01029995664*LacLm)
   [comp] vdadd[5] cfg-in B=0
   [comp] ihill_rep[6] cfg-in REP=TRTetR
   [comp] ihill_rep[6] cfg-in n=2
   [comp] ihill_rep[6] cfg-in S=LacLp
   [comp] ihill_rep[6] cfg-in Vmax=0.4995
   [comp] ihill_rep[6] cfg-in Km=40
   [comp] vdadd[7] cfg-in OUT_0=0.5
   [comp] vdadd[7] cfg-in OUT=LacLm
   [comp] vdadd[7] cfg-param BSW=1
   [comp] vdadd[7] cfg-param DSW=1
   [comp] vdadd[7] cfg-in B=TRLacL
   [comp] vdadd[7] cfg-in D=0.15051499783
   [comp] vdadd[7] cfg-in A=0.0005
   [comp] vdadd[8] cfg-in OUT_0=0.12
   [comp] vdadd[8] cfg-in OUT=TetRm
   [comp] vdadd[8] cfg-param BSW=1
   [comp] vdadd[8] cfg-param DSW=1
   [comp] vdadd[8] cfg-in B=0.0005
   [comp] vdadd[8] cfg-in D=0.15051499783
   [comp] vdadd[8] cfg-in A=TRTetR
   [comp] vdadd[9] cfg-in OUT_0=0.25
   [comp] vdadd[9] cfg-in OUT=clm
   [comp] vdadd[9] cfg-param BSW=1
   [comp] vdadd[9] cfg-param DSW=1
   [comp] vdadd[9] cfg-in B=0.0005
   [comp] vdadd[9] cfg-in D=0.15051499783
   [comp] vdadd[9] cfg-in A=TRclp
   [comp] ihill_rep[10] cfg-in REP=TRclp
   [comp] ihill_rep[10] cfg-in n=2
   [comp] ihill_rep[10] cfg-in S=TetRp
   [comp] ihill_rep[10] cfg-in Vmax=0.4995
   [comp] ihill_rep[10] cfg-in Km=40
   [comp] ihill_rep[11] cfg-in REP=TRLacL
   [comp] ihill_rep[11] cfg-in n=2
   [comp] ihill_rep[11] cfg-in S=clp
   [comp] ihill_rep[11] cfg-in Vmax=0.4995
   [comp] ihill_rep[11] cfg-in Km=40
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[0]
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] conn vgain[0].P->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] add-comp itov[2]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] conn itov[2].Y->vdadd[3].A
   [sln] generate vdadd[3].OUT = clp
   [sln] add-comp vdadd[3]
   [sln] generate itov[4].Y = (3.01029995664*LacLm)
   [sln] add-comp itov[4]
   [sln] generate itov[4].Y = (3.01029995664*LacLm)
   [sln] conn itov[4].Y->vdadd[5].A
   [sln] generate vdadd[5].OUT = LacLp
   [sln] add-comp vdadd[5]
   [sln] generate ihill_rep[6].REP = TRTetR
   [sln] add-comp ihill_rep[6]
   [sln] generate vdadd[7].OUT = LacLm
   [sln] add-comp vdadd[7]
   [sln] generate vdadd[8].OUT = TetRm
   [sln] add-comp vdadd[8]
   [sln] generate vdadd[9].OUT = clm
   [sln] add-comp vdadd[9]
   [sln] generate ihill_rep[10].REP = TRclp
   [sln] add-comp ihill_rep[10]
   [sln] generate ihill_rep[11].REP = TRLacL
   [sln] add-comp ihill_rep[11]
   [sln] route vgain[0].Z = TetRm
   [sln] route vgain[0].X = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route itov[2].K = clm
   [sln] route itov[2].X = 3.01029995664
   [sln] route vdadd[3].OUT_0 = 20
   [sln] route vdadd[3].D = 0.03010299956
   [sln] route vdadd[3].B = 0
   [sln] route itov[4].K = LacLm
   [sln] route itov[4].X = 3.01029995664
   [sln] route vdadd[5].OUT_0 = 60
   [sln] route vdadd[5].D = 0.03010299956
   [sln] route vdadd[5].B = 0
   [sln] route ihill_rep[6].n = 2
   [sln] route ihill_rep[6].S = LacLp
   [sln] route ihill_rep[6].Vmax = 0.4995
   [sln] route ihill_rep[6].Km = 40
   [sln] route vdadd[7].OUT_0 = 0.5
   [sln] route vdadd[7].B = TRLacL
   [sln] route vdadd[7].D = 0.15051499783
   [sln] route vdadd[7].A = 0.0005
   [sln] route vdadd[8].OUT_0 = 0.12
   [sln] route vdadd[8].B = 0.0005
   [sln] route vdadd[8].D = 0.15051499783
   [sln] route vdadd[8].A = TRTetR
   [sln] route vdadd[9].OUT_0 = 0.25
   [sln] route vdadd[9].B = 0.0005
   [sln] route vdadd[9].D = 0.15051499783
   [sln] route vdadd[9].A = TRclp
   [sln] route ihill_rep[10].n = 2
   [sln] route ihill_rep[10].S = TetRp
   [sln] route ihill_rep[10].Vmax = 0.4995
   [sln] route ihill_rep[10].Km = 40
   [sln] route ihill_rep[11].n = 2
   [sln] route ihill_rep[11].S = clp
   [sln] route ihill_rep[11].Vmax = 0.4995
   [sln] route ihill_rep[11].Km = 40
   [comp] make-comp vgain0
   [comp] make-comp vdadd1
   [comp] make-comp itov2
   [comp] make-comp vdadd3
   [comp] make-comp itov4
   [comp] make-comp vdadd5
   [comp] make-comp ihill_rep6
   [comp] make-comp vdadd7
   [comp] make-comp vdadd8
   [comp] make-comp vdadd9
   [comp] make-comp ihill_rep10
   [comp] make-comp ihill_rep11
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 1391 to disabled
   change-goal-status 1392 to disabled
   change-goal-status 1393 to disabled
   change-goal-status 1394 to disabled
   change-goal-status 1396 to disabled
   change-goal-status 1397 to disabled
   change-goal-status 1398 to disabled
   change-goal-status 1399 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 1908 to disabled
   change-goal-status 1909 to disabled
   change-goal-status 1910 to disabled
   change-goal-status 1911 to disabled
   change-goal-status 1912 to disabled
   change-goal-status 1914 to disabled
   change-goal-status 1915 to disabled
   change-goal-status 1916 to disabled
   change-goal-status 2110 to disabled
   change-goal-status 2112 to disabled
   change-goal-status 2113 to disabled
   change-goal-status 2114 to disabled
   change-goal-status 2115 to disabled
   change-goal-status 2116 to disabled
   change-goal-status 2117 to disabled
   change-goal-status 2118 to disabled
   change-goal-status 1724 to disabled
   change-goal-status 1725 to disabled
   change-goal-status 1726 to disabled
   change-goal-status 1727 to disabled
   change-goal-status 1728 to disabled
   change-goal-status 1729 to disabled
   change-goal-status 1731 to disabled
   change-goal-status 1732 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   add-goal [1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1451] [EXPR]vdadd[5].A<V>=(3.01029995664*LacLm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1908] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1909] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1910] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1911] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1912] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1913] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1914] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1915] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1916] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [2110] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [2111] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2112] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [2113] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [2114] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [2115] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2116] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2117] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [2118] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1724] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1725] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1726] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1727] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1728] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1729] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1730] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1731] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1732] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ============================
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.V[0] cfg-in X=2
     [comp] input.V[0] cfg-out O=2
     [comp] input.V[1] cfg-in X=2
     [comp] input.V[1] cfg-out O=2
     [comp] input.V[2] cfg-in X=2
     [comp] input.V[2] cfg-out O=2
     [comp] input.V[3] cfg-in X=60
     [comp] input.V[3] cfg-out O=60
     [comp] input.V[4] cfg-in X=0
     [comp] input.V[4] cfg-out O=0
     [comp] input.V[5] cfg-in X=0
     [comp] input.V[5] cfg-out O=0
     [comp] input.V[6] cfg-in X=0
     [comp] input.V[6] cfg-out O=0
     [comp] input.V[7] cfg-in X=0.12
     [comp] input.V[7] cfg-out O=0.12
     [comp] input.V[8] cfg-in X=0.5
     [comp] input.V[8] cfg-out O=0.5
     [comp] input.I[0] cfg-in X=0.15051499783
     [comp] input.I[0] cfg-out O=0.15051499783
     [comp] input.I[1] cfg-in X=0.15051499783
     [comp] input.I[1] cfg-out O=0.15051499783
     [comp] input.I[2] cfg-in X=0.15051499783
     [comp] input.I[2] cfg-out O=0.15051499783
     [comp] input.I[3] cfg-in X=0.4995
     [comp] input.I[3] cfg-out O=0.4995
     [comp] input.I[4] cfg-in X=0.4995
     [comp] input.I[4] cfg-out O=0.4995
     [comp] input.I[5] cfg-in X=0.4995
     [comp] input.I[5] cfg-out O=0.4995
     [comp] input.V[9] cfg-in X=0.0005
     [comp] input.V[9] cfg-out O=0.0005
     [comp] input.V[10] cfg-in X=0.0005
     [comp] input.V[10] cfg-out O=0.0005
     [comp] input.V[11] cfg-in X=0.0005
     [comp] input.V[11] cfg-out O=0.0005
     [comp] input.V[12] cfg-in X=40
     [comp] input.V[12] cfg-out O=40
     [comp] input.I[6] cfg-in X=40
     [comp] input.I[6] cfg-out O=40
     [comp] input.I[7] cfg-in X=40
     [comp] input.I[7] cfg-out O=40
     [comp] input.I[8] cfg-in X=40
     [comp] input.I[8] cfg-out O=40
     [comp] input.V[13] cfg-in X=3.01029995664
     [comp] input.V[13] cfg-out O=3.01029995664
     [comp] input.I[9] cfg-in X=3.01029995664
     [comp] input.I[9] cfg-out O=3.01029995664
     [comp] input.I[10] cfg-in X=3.01029995664
     [comp] input.I[10] cfg-out O=3.01029995664
     [comp] input.V[14] cfg-in X=0.25
     [comp] input.V[14] cfg-out O=0.25
     [comp] input.V[15] cfg-in X=20
     [comp] input.V[15] cfg-out O=20
     [comp] input.I[11] cfg-in X=0.03010299956
     [comp] input.I[11] cfg-out O=0.03010299956
     [comp] input.I[12] cfg-in X=0.03010299956
     [comp] input.I[12] cfg-out O=0.03010299956
     [comp] input.I[13] cfg-in X=0.03010299956
     [comp] input.I[13] cfg-out O=0.03010299956
     [comp] output.V[0] cfg-in X=TetRm
     [comp] output.V[0] cfg-out O=TetRm
     [comp] output.V[1] cfg-in X=LacLp
     [comp] output.V[1] cfg-out O=LacLp
     [comp] output.V[2] cfg-in X=LacLm
     [comp] output.V[2] cfg-out O=LacLm
     [comp] output.V[3] cfg-in X=clm
     [comp] output.V[3] cfg-out O=clm
     [comp] output.V[4] cfg-in X=clp
     [comp] output.V[4] cfg-out O=clp
     [comp] output.V[5] cfg-in X=TetRp
     [comp] output.V[5] cfg-out O=TetRp
     [sln] rm-route vgain[0].Z = TetRm
     [sln] rm-route ihill_rep[6].S = LacLp
     [sln] rm-route itov[4].K = LacLm
     [sln] rm-route itov[2].K = clm
     [sln] rm-route ihill_rep[11].S = clp
     [sln] rm-route ihill_rep[10].S = TetRp
     [sln] rm-route vdadd[8].A = TRTetR
     [sln] rm-route vdadd[7].B = TRLacL
     [sln] rm-route vdadd[9].A = TRclp
     [sln] rm-route ihill_rep[6].n = 2
     [sln] add-comp input.V[0]
     [sln] generate input.V[0].O = 2
     [sln] rm-route ihill_rep[11].n = 2
     [sln] add-comp input.V[1]
     [sln] generate input.V[1].O = 2
     [sln] rm-route ihill_rep[10].n = 2
     [sln] add-comp input.V[2]
     [sln] generate input.V[2].O = 2
     [sln] rm-route vdadd[5].OUT_0 = 60
     [sln] add-comp input.V[3]
     [sln] generate input.V[3].O = 60
     [sln] rm-route vdadd[1].B = 0
     [sln] add-comp input.V[4]
     [sln] generate input.V[4].O = 0
     [sln] rm-route vdadd[5].B = 0
     [sln] add-comp input.V[5]
     [sln] generate input.V[5].O = 0
     [sln] rm-route vdadd[3].B = 0
     [sln] add-comp input.V[6]
     [sln] generate input.V[6].O = 0
     [sln] rm-route vdadd[8].OUT_0 = 0.12
     [sln] add-comp input.V[7]
     [sln] generate input.V[7].O = 0.12
     [sln] rm-route vdadd[7].OUT_0 = 0.5
     [sln] add-comp input.V[8]
     [sln] generate input.V[8].O = 0.5
     [sln] rm-route vdadd[7].D = 0.15051499783
     [sln] add-comp input.I[0]
     [sln] generate input.I[0].O = 0.15051499783
     [sln] rm-route vdadd[9].D = 0.15051499783
     [sln] add-comp input.I[1]
     [sln] generate input.I[1].O = 0.15051499783
     [sln] rm-route vdadd[8].D = 0.15051499783
     [sln] add-comp input.I[2]
     [sln] generate input.I[2].O = 0.15051499783
     [sln] rm-route ihill_rep[6].Vmax = 0.4995
     [sln] add-comp input.I[3]
     [sln] generate input.I[3].O = 0.4995
     [sln] rm-route ihill_rep[11].Vmax = 0.4995
     [sln] add-comp input.I[4]
     [sln] generate input.I[4].O = 0.4995
     [sln] rm-route ihill_rep[10].Vmax = 0.4995
     [sln] add-comp input.I[5]
     [sln] generate input.I[5].O = 0.4995
     [sln] rm-route vdadd[7].A = 0.0005
     [sln] add-comp input.V[9]
     [sln] generate input.V[9].O = 0.0005
     [sln] rm-route vdadd[9].B = 0.0005
     [sln] add-comp input.V[10]
     [sln] generate input.V[10].O = 0.0005
     [sln] rm-route vdadd[8].B = 0.0005
     [sln] add-comp input.V[11]
     [sln] generate input.V[11].O = 0.0005
     [sln] rm-route vdadd[1].OUT_0 = 40
     [sln] add-comp input.V[12]
     [sln] generate input.V[12].O = 40
     [sln] rm-route ihill_rep[6].Km = 40
     [sln] add-comp input.I[6]
     [sln] generate input.I[6].O = 40
     [sln] rm-route ihill_rep[11].Km = 40
     [sln] add-comp input.I[7]
     [sln] generate input.I[7].O = 40
     [sln] rm-route ihill_rep[10].Km = 40
     [sln] add-comp input.I[8]
     [sln] generate input.I[8].O = 40
     [sln] rm-route vgain[0].X = 3.01029995664
     [sln] add-comp input.V[13]
     [sln] generate input.V[13].O = 3.01029995664
     [sln] rm-route itov[4].X = 3.01029995664
     [sln] add-comp input.I[9]
     [sln] generate input.I[9].O = 3.01029995664
     [sln] rm-route itov[2].X = 3.01029995664
     [sln] add-comp input.I[10]
     [sln] generate input.I[10].O = 3.01029995664
     [sln] rm-route vdadd[9].OUT_0 = 0.25
     [sln] add-comp input.V[14]
     [sln] generate input.V[14].O = 0.25
     [sln] rm-route vdadd[3].OUT_0 = 20
     [sln] add-comp input.V[15]
     [sln] generate input.V[15].O = 20
     [sln] rm-route vdadd[1].D = 0.03010299956
     [sln] add-comp input.I[11]
     [sln] generate input.I[11].O = 0.03010299956
     [sln] rm-route vdadd[5].D = 0.03010299956
     [sln] add-comp input.I[12]
     [sln] generate input.I[12].O = 0.03010299956
     [sln] rm-route vdadd[3].D = 0.03010299956
     [sln] add-comp input.I[13]
     [sln] generate input.I[13].O = 0.03010299956
     [sln] add-comp output.V[0]
     [sln] generate output.V[0].O = TetRm
     [sln] add-comp output.V[1]
     [sln] generate output.V[1].O = LacLp
     [sln] add-comp output.V[2]
     [sln] generate output.V[2].O = LacLm
     [sln] add-comp output.V[3]
     [sln] generate output.V[3].O = clm
     [sln] add-comp output.V[4]
     [sln] generate output.V[4].O = clp
     [sln] add-comp output.V[5]
     [sln] generate output.V[5].O = TetRp
     [sln] route input.V[0].X = 2
     [sln] route input.V[1].X = 2
     [sln] route input.V[2].X = 2
     [sln] route input.V[3].X = 60
     [sln] route input.V[4].X = 0
     [sln] route input.V[5].X = 0
     [sln] route input.V[6].X = 0
     [sln] route input.V[7].X = 0.12
     [sln] route input.V[8].X = 0.5
     [sln] route input.I[0].X = 0.15051499783
     [sln] route input.I[1].X = 0.15051499783
     [sln] route input.I[2].X = 0.15051499783
     [sln] route input.I[3].X = 0.4995
     [sln] route input.I[4].X = 0.4995
     [sln] route input.I[5].X = 0.4995
     [sln] route input.V[9].X = 0.0005
     [sln] route input.V[10].X = 0.0005
     [sln] route input.V[11].X = 0.0005
     [sln] route input.V[12].X = 40
     [sln] route input.I[6].X = 40
     [sln] route input.I[7].X = 40
     [sln] route input.I[8].X = 40
     [sln] route input.V[13].X = 3.01029995664
     [sln] route input.I[9].X = 3.01029995664
     [sln] route input.I[10].X = 3.01029995664
     [sln] route input.V[14].X = 0.25
     [sln] route input.V[15].X = 20
     [sln] route input.I[11].X = 0.03010299956
     [sln] route input.I[12].X = 0.03010299956
     [sln] route input.I[13].X = 0.03010299956
     [comp] make-comp input.V0
     [comp] make-comp input.V1
     [comp] make-comp input.V2
     [comp] make-comp input.V3
     [comp] make-comp input.V4
     [comp] make-comp input.V5
     [comp] make-comp input.V6
     [comp] make-comp input.V7
     [comp] make-comp input.V8
     [comp] make-comp input.I0
     [comp] make-comp input.I1
     [comp] make-comp input.I2
     [comp] make-comp input.I3
     [comp] make-comp input.I4
     [comp] make-comp input.I5
     [comp] make-comp input.V9
     [comp] make-comp input.V10
     [comp] make-comp input.V11
     [comp] make-comp input.V12
     [comp] make-comp input.I6
     [comp] make-comp input.I7
     [comp] make-comp input.I8
     [comp] make-comp input.V13
     [comp] make-comp input.I9
     [comp] make-comp input.I10
     [comp] make-comp input.V14
     [comp] make-comp input.V15
     [comp] make-comp input.I11
     [comp] make-comp input.I12
     [comp] make-comp input.I13
     [comp] make-comp output.V0
     [comp] make-comp output.V1
     [comp] make-comp output.V2
     [comp] make-comp output.V3
     [comp] make-comp output.V4
     [comp] make-comp output.V5
     add-goal [2195] [CONN] vdadd[8].OUT => vgain[0].Z (TetRm)
     add-goal [2196] [CONN] vdadd[5].OUT => ihill_rep[6].S (LacLp)
     add-goal [2197] [CONN] vdadd[7].OUT => itov[4].K (LacLm)
     add-goal [2198] [CONN] vdadd[9].OUT => itov[2].K (clm)
     add-goal [2199] [CONN] vdadd[3].OUT => ihill_rep[11].S (clp)
     add-goal [2200] [CONN] vdadd[1].OUT => ihill_rep[10].S (TetRp)
     add-goal [2201] [CONN] ihill_rep[6].REP => vdadd[8].A (TRTetR)
     add-goal [2202] [CONN] ihill_rep[11].REP => vdadd[7].B (TRLacL)
     add-goal [2203] [CONN] ihill_rep[10].REP => vdadd[9].A (TRclp)
     add-goal [2204] [CONN] input.V[0].O => ihill_rep[6].n (2)
     add-goal [2205] [CONN] input.V[1].O => ihill_rep[11].n (2)
     add-goal [2206] [CONN] input.V[2].O => ihill_rep[10].n (2)
     add-goal [2207] [CONN] input.V[3].O => vdadd[5].OUT_0 (60)
     add-goal [2208] [CONN] input.V[4].O => vdadd[1].B (0)
     add-goal [2209] [CONN] input.V[5].O => vdadd[5].B (0)
     add-goal [2210] [CONN] input.V[6].O => vdadd[3].B (0)
     add-goal [2211] [CONN] input.V[7].O => vdadd[8].OUT_0 (0.12)
     add-goal [2212] [CONN] input.V[8].O => vdadd[7].OUT_0 (0.5)
     add-goal [2213] [CONN] input.I[0].O => vdadd[7].D (0.15051499783)
     add-goal [2214] [CONN] input.I[1].O => vdadd[9].D (0.15051499783)
     add-goal [2215] [CONN] input.I[2].O => vdadd[8].D (0.15051499783)
     add-goal [2216] [CONN] input.I[3].O => ihill_rep[6].Vmax (0.4995)
     add-goal [2217] [CONN] input.I[4].O => ihill_rep[11].Vmax (0.4995)
     add-goal [2218] [CONN] input.I[5].O => ihill_rep[10].Vmax (0.4995)
     add-goal [2219] [CONN] input.V[9].O => vdadd[7].A (0.0005)
     add-goal [2220] [CONN] input.V[10].O => vdadd[9].B (0.0005)
     add-goal [2221] [CONN] input.V[11].O => vdadd[8].B (0.0005)
     add-goal [2222] [CONN] input.V[12].O => vdadd[1].OUT_0 (40)
     add-goal [2223] [CONN] input.I[6].O => ihill_rep[6].Km (40)
     add-goal [2224] [CONN] input.I[7].O => ihill_rep[11].Km (40)
     add-goal [2225] [CONN] input.I[8].O => ihill_rep[10].Km (40)
     add-goal [2226] [CONN] input.V[13].O => vgain[0].X (3.01029995664)
     add-goal [2227] [CONN] input.I[9].O => itov[4].X (3.01029995664)
     add-goal [2228] [CONN] input.I[10].O => itov[2].X (3.01029995664)
     add-goal [2229] [CONN] input.V[14].O => vdadd[9].OUT_0 (0.25)
     add-goal [2230] [CONN] input.V[15].O => vdadd[3].OUT_0 (20)
     add-goal [2231] [CONN] input.I[11].O => vdadd[1].D (0.03010299956)
     add-goal [2232] [CONN] input.I[12].O => vdadd[5].D (0.03010299956)
     add-goal [2233] [CONN] input.I[13].O => vdadd[3].D (0.03010299956)
     add-goal [2234] [CONN] vdadd[8].OUT => output.V[0].X (TetRm)
     add-goal [2235] [CONN] vdadd[5].OUT => output.V[1].X (LacLp)
     add-goal [2236] [CONN] vdadd[7].OUT => output.V[2].X (LacLm)
     add-goal [2237] [CONN] vdadd[9].OUT => output.V[3].X (clm)
     add-goal [2238] [CONN] vdadd[3].OUT => output.V[4].X (clp)
     add-goal [2239] [CONN] vdadd[1].OUT => output.V[5].X (TetRp)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2115] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2112] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1732] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1915] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2118] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1908] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1909] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1910] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[2114] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1726] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1911] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1729] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2116] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1916] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1727] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[2117] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1914] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1912] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2113] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1725] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2110] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1728] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1731] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1724] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[2237] [CONN] vdadd[9].OUT => output.V[3].X (clm)
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2195] [CONN] vdadd[8].OUT => vgain[0].Z (TetRm)
[2207] [CONN] input.V[3].O => vdadd[5].OUT_0 (60)
[2211] [CONN] input.V[7].O => vdadd[8].OUT_0 (0.12)
[2227] [CONN] input.I[9].O => itov[4].X (3.01029995664)
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2198] [CONN] vdadd[9].OUT => itov[2].K (clm)
[2206] [CONN] input.V[2].O => ihill_rep[10].n (2)
[2208] [CONN] input.V[4].O => vdadd[1].B (0)
[2218] [CONN] input.I[5].O => ihill_rep[10].Vmax (0.4995)
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2115] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2112] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2223] [CONN] input.I[6].O => ihill_rep[6].Km (40)
[2231] [CONN] input.I[11].O => vdadd[1].D (0.03010299956)
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1732] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[2225] [CONN] input.I[8].O => ihill_rep[10].Km (40)
[1915] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2118] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2204] [CONN] input.V[0].O => ihill_rep[6].n (2)
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1908] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1909] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1910] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[2196] [CONN] vdadd[5].OUT => ihill_rep[6].S (LacLp)
[2239] [CONN] vdadd[1].OUT => output.V[5].X (TetRp)
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[2238] [CONN] vdadd[3].OUT => output.V[4].X (clp)
[2114] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2221] [CONN] input.V[11].O => vdadd[8].B (0.0005)
[2236] [CONN] vdadd[7].OUT => output.V[2].X (LacLm)
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2214] [CONN] input.I[1].O => vdadd[9].D (0.15051499783)
[2216] [CONN] input.I[3].O => ihill_rep[6].Vmax (0.4995)
[2220] [CONN] input.V[10].O => vdadd[9].B (0.0005)
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2217] [CONN] input.I[4].O => ihill_rep[11].Vmax (0.4995)
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2226] [CONN] input.V[13].O => vgain[0].X (3.01029995664)
[2229] [CONN] input.V[14].O => vdadd[9].OUT_0 (0.25)
[2233] [CONN] input.I[13].O => vdadd[3].D (0.03010299956)
[2205] [CONN] input.V[1].O => ihill_rep[11].n (2)
[2234] [CONN] vdadd[8].OUT => output.V[0].X (TetRm)
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1726] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2209] [CONN] input.V[5].O => vdadd[5].B (0)
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1911] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1729] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2213] [CONN] input.I[0].O => vdadd[7].D (0.15051499783)
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2222] [CONN] input.V[12].O => vdadd[1].OUT_0 (40)
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2224] [CONN] input.I[7].O => ihill_rep[11].Km (40)
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2116] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2202] [CONN] ihill_rep[11].REP => vdadd[7].B (TRLacL)
[2215] [CONN] input.I[2].O => vdadd[8].D (0.15051499783)
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2232] [CONN] input.I[12].O => vdadd[5].D (0.03010299956)
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1916] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1727] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[2201] [CONN] ihill_rep[6].REP => vdadd[8].A (TRTetR)
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[2117] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1914] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1912] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2228] [CONN] input.I[10].O => itov[2].X (3.01029995664)
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2113] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2212] [CONN] input.V[8].O => vdadd[7].OUT_0 (0.5)
[2219] [CONN] input.V[9].O => vdadd[7].A (0.0005)
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2203] [CONN] ihill_rep[10].REP => vdadd[9].A (TRclp)
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1725] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2200] [CONN] vdadd[1].OUT => ihill_rep[10].S (TetRp)
[2110] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1728] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2210] [CONN] input.V[6].O => vdadd[3].B (0)
[2230] [CONN] input.V[15].O => vdadd[3].OUT_0 (20)
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2235] [CONN] vdadd[5].OUT => output.V[1].X (LacLp)
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1731] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2199] [CONN] vdadd[3].OUT => ihill_rep[11].S (clp)
[1724] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[2197] [CONN] vdadd[7].OUT => itov[4].K (LacLm)
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> Current Goal: [2197] [CONN] vdadd[7].OUT => itov[4].K (LacLm)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->itov.K
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>ihill_rep.REP->vdadd.A
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.A
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->itov.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>ihill_rep.REP->vdadd.A
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>ihill_rep.REP->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vgain.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->itov.K
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->itov.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->vgain.Z
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 3
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=69

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] [TERMINATE] found 0 / 1
[eqn] [TERMINATE] could not find another node
[multi]   >> Found # Global Solutions: 1/1
[multi] => Global Solution: LacLm~35LacLp~117TRLacL~83TRTetR~83TRclp~83TetRm~40TetRp~51clm~40clp~117 :: 3
[multi] Number of Solutions: 0
[multi] >>>NEW SOLUTION!<<<
[multi] => Global Solution: LacLm~35LacLp~117TRLacL~83TRTetR~83TRclp~83TetRm~40TetRp~51clm~40clp~117 :: 3
[[Z3]] ---> Executing SMT Solver prob=70

[rslvr] z32cstr.wire: vdadd[1].A
[rslvr] z32cstr.wire: input.I[6].O
[rslvr] z32cstr.wire: vdadd[5].D
[rslvr] z32cstr.wire: input.V[8].O
[rslvr] z32cstr.wire: vdadd[1].OUT_0
[rslvr] z32cstr.wire: input.V[12].O
[rslvr] z32cstr.wire: input.V[0].O
[rslvr] z32cstr.wire: vdadd[8].D
[rslvr] z32cstr.wire: vdadd[1].OUT
[rslvr] z32cstr.wire: vdadd[5].B
[rslvr] z32cstr.wire: input.I[12].O
[rslvr] z32cstr.wire: vdadd[8].B
[rslvr] z32cstr.wire: vdadd[3].D
[rslvr] z32cstr.wire: ihill_rep[11].S
[rslvr] z32cstr.wire: input.V[14].O
[rslvr] z32cstr.wire: itov[2].K
[rslvr] z32cstr.wire: vdadd[8].OUT
[rslvr] z32cstr.wire: vdadd[9].OUT
[rslvr] z32cstr.wire: output.V[1].X
[rslvr] z32cstr.wire: vdadd[3].B
[rslvr] z32cstr.wire: input.I[11].O
[rslvr] z32cstr.wire: output.V[2].X
[rslvr] z32cstr.wire: vdadd[7].D
[rslvr] z32cstr.wire: ihill_rep[11].n
[rslvr] z32cstr.wire: itov[4].K
[rslvr] z32cstr.wire: vdadd[7].OUT_0
[rslvr] z32cstr.wire: ihill_rep[10].REP
[rslvr] z32cstr.wire: input.V[4].O
[rslvr] z32cstr.wire: input.I[9].O
[rslvr] z32cstr.wire: vdadd[5].OUT
[rslvr] z32cstr.wire: input.V[6].O
[rslvr] z32cstr.wire: vdadd[7].OUT
[rslvr] z32cstr.wire: vdadd[3].A
[rslvr] z32cstr.wire: input.V[10].O
[rslvr] z32cstr.wire: itov[4].X
[rslvr] z32cstr.wire: input.V[11].O
[rslvr] z32cstr.wire: input.V[3].O
[rslvr] z32cstr.wire: input.I[10].O
[rslvr] z32cstr.wire: itov[2].Y
[rslvr] z32cstr.wire: ihill_rep[6].n
[rslvr] z32cstr.wire: output.V[3].X
[rslvr] z32cstr.wire: ihill_rep[6].Vmax
[rslvr] z32cstr.wire: vdadd[8].OUT_0
[rslvr] z32cstr.wire: input.V[9].O
[rslvr] z32cstr.wire: vdadd[1].B
[rslvr] z32cstr.wire: ihill_rep[11].Km
[rslvr] z32cstr.wire: vdadd[9].D
[rslvr] z32cstr.wire: input.I[4].O
[rslvr] z32cstr.wire: output.V[4].X
[rslvr] z32cstr.wire: input.I[8].O
[rslvr] z32cstr.wire: input.V[1].O
[rslvr] z32cstr.wire: ihill_rep[10].Km
[rslvr] z32cstr.wire: input.I[13].O
[rslvr] z32cstr.wire: input.I[2].O
[rslvr] z32cstr.wire: vdadd[3].OUT
[rslvr] z32cstr.wire: vdadd[9].OUT_0
[rslvr] z32cstr.wire: input.V[7].O
[rslvr] z32cstr.wire: input.I[1].O
[rslvr] z32cstr.wire: itov[4].Y
[rslvr] z32cstr.wire: input.V[15].O
[rslvr] z32cstr.wire: input.I[7].O
[rslvr] z32cstr.wire: input.I[3].O
[rslvr] z32cstr.wire: vdadd[3].OUT_0
[rslvr] z32cstr.wire: vdadd[9].A
[rslvr] z32cstr.wire: vdadd[1].D
[rslvr] z32cstr.wire: ihill_rep[11].Vmax
[rslvr] z32cstr.wire: vgain[0].Z
[rslvr] z32cstr.wire: ihill_rep[10].Vmax
[rslvr] z32cstr.wire: output.V[0].X
[rslvr] z32cstr.wire: ihill_rep[6].S
[rslvr] z32cstr.wire: input.V[13].O
[rslvr] z32cstr.wire: output.V[5].X
[rslvr] z32cstr.wire: vgain[0].X
[rslvr] z32cstr.wire: input.I[0].O
[rslvr] z32cstr.wire: ihill_rep[11].REP
[rslvr] z32cstr.wire: ihill_rep[10].n
[rslvr] z32cstr.wire: vdadd[7].A
[rslvr] z32cstr.wire: ihill_rep[10].S
[rslvr] z32cstr.wire: vgain[0].P
[rslvr] z32cstr.wire: itov[2].X
[rslvr] z32cstr.wire: vdadd[5].OUT_0
[rslvr] z32cstr.wire: vdadd[7].B
[rslvr] z32cstr.wire: vdadd[5].A
[rslvr] z32cstr.wire: ihill_rep[6].REP
[rslvr] z32cstr.wire: input.I[5].O
[rslvr] z32cstr.wire: ihill_rep[6].Km
[rslvr] z32cstr.wire: vdadd[8].A
[rslvr] z32cstr.wire: input.V[5].O
[rslvr] z32cstr.wire: input.V[2].O
[rslvr] z32cstr.wire: vdadd[9].B
[dbg] === Emitting Library ===
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
===> Emitting Simulation to ckt_repri_0_sdeIdeal.m
[dbg] === Emitting Library ===
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
===> Emitting Simulation to ckt_repri_0_odeIdeal.m
[dbg] === Emitting Library ===
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
===> Emitting Simulation to ckt_repri_0_sdeCirc.m
[dbg] === Emitting Library ===
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
===> Emitting Simulation to ckt_repri_0_odeCirc.m
===== Solution Found ======
[[Z3]] ---> Executing SMT Solver prob=71

[rslvr] z32cstr.wire: vdadd[1].A
[rslvr] z32cstr.wire: input.I[6].O
[rslvr] z32cstr.wire: vdadd[5].D
[rslvr] z32cstr.wire: input.V[8].O
[rslvr] z32cstr.wire: vdadd[1].OUT_0
[rslvr] z32cstr.wire: input.V[12].O
[rslvr] z32cstr.wire: input.V[0].O
[rslvr] z32cstr.wire: vdadd[8].D
[rslvr] z32cstr.wire: vdadd[1].OUT
[rslvr] z32cstr.wire: vdadd[5].B
[rslvr] z32cstr.wire: input.I[12].O
[rslvr] z32cstr.wire: vdadd[8].B
[rslvr] z32cstr.wire: vdadd[3].D
[rslvr] z32cstr.wire: ihill_rep[11].S
[rslvr] z32cstr.wire: input.V[14].O
[rslvr] z32cstr.wire: itov[2].K
[rslvr] z32cstr.wire: vdadd[8].OUT
[rslvr] z32cstr.wire: vdadd[9].OUT
[rslvr] z32cstr.wire: output.V[1].X
[rslvr] z32cstr.wire: vdadd[3].B
[rslvr] z32cstr.wire: input.I[11].O
[rslvr] z32cstr.wire: output.V[2].X
[rslvr] z32cstr.wire: vdadd[7].D
[rslvr] z32cstr.wire: ihill_rep[11].n
[rslvr] z32cstr.wire: itov[4].K
[rslvr] z32cstr.wire: vdadd[7].OUT_0
[rslvr] z32cstr.wire: ihill_rep[10].REP
[rslvr] z32cstr.wire: input.V[4].O
[rslvr] z32cstr.wire: input.I[9].O
[rslvr] z32cstr.wire: vdadd[5].OUT
[rslvr] z32cstr.wire: input.V[6].O
[rslvr] z32cstr.wire: vdadd[7].OUT
[rslvr] z32cstr.wire: vdadd[3].A
[rslvr] z32cstr.wire: input.V[10].O
[rslvr] z32cstr.wire: itov[4].X
[rslvr] z32cstr.wire: input.V[11].O
[rslvr] z32cstr.wire: input.V[3].O
[rslvr] z32cstr.wire: input.I[10].O
[rslvr] z32cstr.wire: itov[2].Y
[rslvr] z32cstr.wire: ihill_rep[6].n
[rslvr] z32cstr.wire: output.V[3].X
[rslvr] z32cstr.wire: ihill_rep[6].Vmax
[rslvr] z32cstr.wire: vdadd[8].OUT_0
[rslvr] z32cstr.wire: input.V[9].O
[rslvr] z32cstr.wire: vdadd[1].B
[rslvr] z32cstr.wire: ihill_rep[11].Km
[rslvr] z32cstr.wire: vdadd[9].D
[rslvr] z32cstr.wire: input.I[4].O
[rslvr] z32cstr.wire: output.V[4].X
[rslvr] z32cstr.wire: input.I[8].O
[rslvr] z32cstr.wire: input.V[1].O
[rslvr] z32cstr.wire: ihill_rep[10].Km
[rslvr] z32cstr.wire: input.I[13].O
[rslvr] z32cstr.wire: input.I[2].O
[rslvr] z32cstr.wire: vdadd[3].OUT
[rslvr] z32cstr.wire: vdadd[9].OUT_0
[rslvr] z32cstr.wire: input.V[7].O
[rslvr] z32cstr.wire: input.I[1].O
[rslvr] z32cstr.wire: itov[4].Y
[rslvr] z32cstr.wire: input.V[15].O
[rslvr] z32cstr.wire: input.I[7].O
[rslvr] z32cstr.wire: input.I[3].O
[rslvr] z32cstr.wire: vdadd[3].OUT_0
[rslvr] z32cstr.wire: vdadd[9].A
[rslvr] z32cstr.wire: vdadd[1].D
[rslvr] z32cstr.wire: ihill_rep[11].Vmax
[rslvr] z32cstr.wire: vgain[0].Z
[rslvr] z32cstr.wire: ihill_rep[10].Vmax
[rslvr] z32cstr.wire: output.V[0].X
[rslvr] z32cstr.wire: ihill_rep[6].S
[rslvr] z32cstr.wire: input.V[13].O
[rslvr] z32cstr.wire: output.V[5].X
[rslvr] z32cstr.wire: vgain[0].X
[rslvr] z32cstr.wire: input.I[0].O
[rslvr] z32cstr.wire: ihill_rep[11].REP
[rslvr] z32cstr.wire: ihill_rep[10].n
[rslvr] z32cstr.wire: vdadd[7].A
[rslvr] z32cstr.wire: ihill_rep[10].S
[rslvr] z32cstr.wire: vgain[0].P
[rslvr] z32cstr.wire: itov[2].X
[rslvr] z32cstr.wire: vdadd[5].OUT_0
[rslvr] z32cstr.wire: vdadd[7].B
[rslvr] z32cstr.wire: vdadd[5].A
[rslvr] z32cstr.wire: ihill_rep[6].REP
[rslvr] z32cstr.wire: input.I[5].O
[rslvr] z32cstr.wire: ihill_rep[6].Km
[rslvr] z32cstr.wire: vdadd[8].A
[rslvr] z32cstr.wire: input.V[5].O
[rslvr] z32cstr.wire: input.V[2].O
[rslvr] z32cstr.wire: vdadd[9].B
->input.I[3]
->input.I[4]
->itov[4]
->vdadd[9]
->input.I[8]
->output.V[3]
->input.V[4]
->input.I[5]
->input.V[10]
->ihill_rep[11]
->input.V[6]
->input.V[15]
->ihill_rep[6]
->vdadd[8]
->input.I[1]
->vdadd[5]
->vdadd[1]
->input.I[2]
->input.I[7]
->input.V[2]
->vdadd[7]
->output.V[0]
->output.V[5]
->vdadd[3]
->input.I[12]
->vgain[0]
->output.V[4]
->input.V[1]
->input.I[10]
->input.I[9]
->input.V[5]
->input.V[12]
->input.V[9]
->output.V[1]
->input.V[3]
->input.V[8]
->input.I[6]
->input.V[13]
->input.I[11]
->input.V[7]
->itov[2]
->input.I[0]
->input.V[14]
->output.V[2]
->input.I[13]
->input.V[0]
->input.V[11]
->ihill_rep[10]
=== Proc Insts ===
=== Construct Initial Mappings from Partition ===
-> setting deriv
-> setting deriv
===Constructing Abs Var Contraints (102) ===
=== Constructing Global Constraints ===
== Adding Global Variables ==[!] << SOLVER # VARS = 5
[[Z3]] ---> Executing SMT Solver prob=72

[WARN][to_mat_file] cannot generate mapped simulink file
[WARN][to_mat_file] cannot emit code
[WARN][to_mat_file] cannot generate mapped simulink file
[WARN][to_mat_file] cannot emit code
===== Mapping Step Finished ======
[multi]  > Added Local Solution
[multi]  > Finding Global Solution
[multi] found # steps: 32
[multi] found # steps: 43
[multi] found # steps: 43
[multi] found # steps: 43
[multi] found # steps: 30
[multi] found # steps: 32
[multi] found # steps: 32
[multi] found # steps: 30
[multi] found # steps: 30
[multi] # partial ids = 9
[multi]    remove-goal [2111] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   remove-goal [893] [EXPR]vdadd[2].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1154] [EXPR]vdadd[4].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1451] [EXPR]vdadd[6].A<V>=(3.01029995664*LacLm)
   remove-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [1913] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   remove-goal [1730] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] vdadd[0] cfg-in OUT_0=0.12
   [comp] vdadd[0] cfg-in OUT=TetRm
   [comp] vdadd[0] cfg-param BSW=1
   [comp] vdadd[0] cfg-param DSW=1
   [comp] vdadd[0] cfg-in B=0.0005
   [comp] vdadd[0] cfg-in D=0.15051499783
   [comp] vdadd[0] cfg-in A=TRTetR
   [comp] vgain[1] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[1] cfg-in Z=TetRm
   [comp] vgain[1] cfg-in X=3.01029995664
   [comp] vdadd[2] cfg-in OUT_0=40
   [comp] vdadd[2] cfg-in OUT=TetRp
   [comp] vdadd[2] cfg-param BSW=1
   [comp] vdadd[2] cfg-param DSW=1
   [comp] vdadd[2] cfg-in B=0
   [comp] vdadd[2] cfg-in D=0.03010299956
   [comp] vdadd[2] cfg-in A=(3.01029995664*TetRm)
   [comp] itov[3] cfg-in Y=(3.01029995664*clm)
   [comp] itov[3] cfg-in K=clm
   [comp] itov[3] cfg-in X=3.01029995664
   [comp] vdadd[4] cfg-in OUT_0=20
   [comp] vdadd[4] cfg-in OUT=clp
   [comp] vdadd[4] cfg-param BSW=1
   [comp] vdadd[4] cfg-param DSW=1
   [comp] vdadd[4] cfg-in D=0.03010299956
   [comp] vdadd[4] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[4] cfg-in B=0
   [comp] itov[5] cfg-in Y=(3.01029995664*LacLm)
   [comp] itov[5] cfg-in K=LacLm
   [comp] itov[5] cfg-in X=3.01029995664
   [comp] vdadd[6] cfg-in OUT_0=60
   [comp] vdadd[6] cfg-in OUT=LacLp
   [comp] vdadd[6] cfg-param BSW=1
   [comp] vdadd[6] cfg-param DSW=1
   [comp] vdadd[6] cfg-in D=0.03010299956
   [comp] vdadd[6] cfg-in A=(3.01029995664*LacLm)
   [comp] vdadd[6] cfg-in B=0
   [comp] ihill_rep[7] cfg-in REP=TRTetR
   [comp] ihill_rep[7] cfg-in n=2
   [comp] ihill_rep[7] cfg-in S=LacLp
   [comp] ihill_rep[7] cfg-in Vmax=0.4995
   [comp] ihill_rep[7] cfg-in Km=40
   [comp] vdadd[8] cfg-in OUT_0=0.5
   [comp] vdadd[8] cfg-in OUT=LacLm
   [comp] vdadd[8] cfg-param BSW=1
   [comp] vdadd[8] cfg-param DSW=1
   [comp] vdadd[8] cfg-in B=TRLacL
   [comp] vdadd[8] cfg-in D=0.15051499783
   [comp] vdadd[8] cfg-in A=0.0005
   [comp] vdadd[9] cfg-in OUT_0=0.25
   [comp] vdadd[9] cfg-in OUT=clm
   [comp] vdadd[9] cfg-param BSW=1
   [comp] vdadd[9] cfg-param DSW=1
   [comp] vdadd[9] cfg-in B=0.0005
   [comp] vdadd[9] cfg-in D=0.15051499783
   [comp] vdadd[9] cfg-in A=TRclp
   [comp] ihill_rep[10] cfg-in REP=TRclp
   [comp] ihill_rep[10] cfg-in n=2
   [comp] ihill_rep[10] cfg-in S=TetRp
   [comp] ihill_rep[10] cfg-in Vmax=0.4995
   [comp] ihill_rep[10] cfg-in Km=40
   [comp] ihill_rep[11] cfg-in REP=TRLacL
   [comp] ihill_rep[11] cfg-in n=2
   [comp] ihill_rep[11] cfg-in S=clp
   [comp] ihill_rep[11] cfg-in Vmax=0.4995
   [comp] ihill_rep[11] cfg-in Km=40
   [sln] generate vdadd[0].OUT = TetRm
   [sln] add-comp vdadd[0]
   [sln] generate vgain[1].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[1]
   [sln] generate vgain[1].P = (3.01029995664*TetRm)
   [sln] conn vgain[1].P->vdadd[2].A
   [sln] generate vdadd[2].OUT = TetRp
   [sln] add-comp vdadd[2]
   [sln] generate itov[3].Y = (3.01029995664*clm)
   [sln] add-comp itov[3]
   [sln] generate itov[3].Y = (3.01029995664*clm)
   [sln] conn itov[3].Y->vdadd[4].A
   [sln] generate vdadd[4].OUT = clp
   [sln] add-comp vdadd[4]
   [sln] generate itov[5].Y = (3.01029995664*LacLm)
   [sln] add-comp itov[5]
   [sln] generate itov[5].Y = (3.01029995664*LacLm)
   [sln] conn itov[5].Y->vdadd[6].A
   [sln] generate vdadd[6].OUT = LacLp
   [sln] add-comp vdadd[6]
   [sln] generate ihill_rep[7].REP = TRTetR
   [sln] add-comp ihill_rep[7]
   [sln] generate vdadd[8].OUT = LacLm
   [sln] add-comp vdadd[8]
   [sln] generate vdadd[9].OUT = clm
   [sln] add-comp vdadd[9]
   [sln] generate ihill_rep[10].REP = TRclp
   [sln] add-comp ihill_rep[10]
   [sln] generate ihill_rep[11].REP = TRLacL
   [sln] add-comp ihill_rep[11]
   [sln] route vdadd[0].OUT_0 = 0.12
   [sln] route vdadd[0].B = 0.0005
   [sln] route vdadd[0].D = 0.15051499783
   [sln] route vdadd[0].A = TRTetR
   [sln] route vgain[1].Z = TetRm
   [sln] route vgain[1].X = 3.01029995664
   [sln] route vdadd[2].OUT_0 = 40
   [sln] route vdadd[2].B = 0
   [sln] route vdadd[2].D = 0.03010299956
   [sln] route itov[3].K = clm
   [sln] route itov[3].X = 3.01029995664
   [sln] route vdadd[4].OUT_0 = 20
   [sln] route vdadd[4].D = 0.03010299956
   [sln] route vdadd[4].B = 0
   [sln] route itov[5].K = LacLm
   [sln] route itov[5].X = 3.01029995664
   [sln] route vdadd[6].OUT_0 = 60
   [sln] route vdadd[6].D = 0.03010299956
   [sln] route vdadd[6].B = 0
   [sln] route ihill_rep[7].n = 2
   [sln] route ihill_rep[7].S = LacLp
   [sln] route ihill_rep[7].Vmax = 0.4995
   [sln] route ihill_rep[7].Km = 40
   [sln] route vdadd[8].OUT_0 = 0.5
   [sln] route vdadd[8].B = TRLacL
   [sln] route vdadd[8].D = 0.15051499783
   [sln] route vdadd[8].A = 0.0005
   [sln] route vdadd[9].OUT_0 = 0.25
   [sln] route vdadd[9].B = 0.0005
   [sln] route vdadd[9].D = 0.15051499783
   [sln] route vdadd[9].A = TRclp
   [sln] route ihill_rep[10].n = 2
   [sln] route ihill_rep[10].S = TetRp
   [sln] route ihill_rep[10].Vmax = 0.4995
   [sln] route ihill_rep[10].Km = 40
   [sln] route ihill_rep[11].n = 2
   [sln] route ihill_rep[11].S = clp
   [sln] route ihill_rep[11].Vmax = 0.4995
   [sln] route ihill_rep[11].Km = 40
   [comp] make-comp vdadd0
   [comp] make-comp vgain1
   [comp] make-comp vdadd2
   [comp] make-comp itov3
   [comp] make-comp vdadd4
   [comp] make-comp itov5
   [comp] make-comp vdadd6
   [comp] make-comp ihill_rep7
   [comp] make-comp vdadd8
   [comp] make-comp vdadd9
   [comp] make-comp ihill_rep10
   [comp] make-comp ihill_rep11
   change-goal-status 2110 to disabled
   change-goal-status 2112 to disabled
   change-goal-status 2113 to disabled
   change-goal-status 2114 to disabled
   change-goal-status 2115 to disabled
   change-goal-status 2116 to disabled
   change-goal-status 2117 to disabled
   change-goal-status 2118 to disabled
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 1391 to disabled
   change-goal-status 1392 to disabled
   change-goal-status 1393 to disabled
   change-goal-status 1394 to disabled
   change-goal-status 1396 to disabled
   change-goal-status 1397 to disabled
   change-goal-status 1398 to disabled
   change-goal-status 1399 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 1908 to disabled
   change-goal-status 1909 to disabled
   change-goal-status 1910 to disabled
   change-goal-status 1911 to disabled
   change-goal-status 1912 to disabled
   change-goal-status 1914 to disabled
   change-goal-status 1915 to disabled
   change-goal-status 1916 to disabled
   change-goal-status 1724 to disabled
   change-goal-status 1725 to disabled
   change-goal-status 1726 to disabled
   change-goal-status 1727 to disabled
   change-goal-status 1728 to disabled
   change-goal-status 1729 to disabled
   change-goal-status 1731 to disabled
   change-goal-status 1732 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [2110] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [2111] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2112] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [2113] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [2114] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [2115] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2116] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2117] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [2118] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[2].A<V>=(3.01029995664*TetRm)
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[4].A<V>=(3.01029995664*clm)
   add-goal [1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1451] [EXPR]vdadd[6].A<V>=(3.01029995664*LacLm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1908] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1909] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1910] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1911] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1912] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1913] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1914] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1915] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1916] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1724] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1725] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1726] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1727] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1728] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1729] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1730] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1731] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1732] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ==== ROUTES =====
[multi] > vgain[1].Z = TetRm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[7].S = LacLp
[multi]    - connecting generates to routes.
[multi] > itov[5].K = LacLm
[multi]    - connecting generates to routes.
[multi] > itov[3].K = clm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[11].S = clp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[10].S = TetRp
[multi]    - connecting generates to routes.
[multi] > vdadd[0].A = TRTetR
[multi]    - connecting generates to routes.
[multi] > vdadd[8].B = TRLacL
[multi]    - connecting generates to routes.
[multi] > vdadd[9].A = TRclp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[7].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[11].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[10].n = 2
[multi]    - making an input block.
[multi] > vdadd[6].OUT_0 = 60
[multi]    - making an input block.
[multi] > vdadd[2].B = 0
[multi]    - making an input block.
[multi] > vdadd[6].B = 0
[multi]    - making an input block.
[multi] > vdadd[4].B = 0
[multi]    - making an input block.
[multi] > vdadd[0].OUT_0 = 0.12
[multi]    - making an input block.
[multi] > vdadd[8].OUT_0 = 0.5
[multi]    - making an input block.
[multi] > vdadd[0].D = 0.15051499783
[multi]    - making an input block.
[multi] > vdadd[9].D = 0.15051499783
[multi]    - making an input block.
[multi] > vdadd[8].D = 0.15051499783
[multi]    - making an input block.
[multi] > ihill_rep[7].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[11].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[10].Vmax = 0.4995
[multi]    - making an input block.
[multi] > vdadd[0].B = 0.0005
[multi]    - making an input block.
[multi] > vdadd[9].B = 0.0005
[multi]    - making an input block.
[multi] > vdadd[8].A = 0.0005
[multi]    - making an input block.
[multi] > vdadd[2].OUT_0 = 40
[multi]    - making an input block.
[multi] > ihill_rep[7].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[11].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[10].Km = 40
[multi]    - making an input block.
[multi] > vgain[1].X = 3.01029995664
[multi]    - making an input block.
[multi] > itov[5].X = 3.01029995664
[multi]    - making an input block.
[multi] > itov[3].X = 3.01029995664
[multi]    - making an input block.
[multi] > vdadd[9].OUT_0 = 0.25
[multi]    - making an input block.
[multi] > vdadd[4].OUT_0 = 20
[multi]    - making an input block.
[multi] > vdadd[2].D = 0.03010299956
[multi]    - making an input block.
[multi] > vdadd[6].D = 0.03010299956
[multi]    - making an input block.
[multi] > vdadd[4].D = 0.03010299956
[multi]    - making an input block.
[multi] ==== GENERATES =====
[multi] > vdadd[0].OUT = TetRm
[multi]    - making an output block.
[multi] > vdadd[6].OUT = LacLp
[multi]    - making an output block.
[multi] > vdadd[8].OUT = LacLm
[multi]    - making an output block.
[multi] > vdadd[9].OUT = clm
[multi]    - making an output block.
[multi] > vdadd[4].OUT = clp
[multi]    - making an output block.
[multi] > vdadd[2].OUT = TetRp
[multi]    - making an output block.
[multi] > ihill_rep[7].REP = TRTetR
[multi] > ihill_rep[11].REP = TRLacL
[multi] > ihill_rep[10].REP = TRclp
[multi] > itov[3].Y = (3.01029995664*clm)
[multi] > itov[3].Y = (3.01029995664*clm)
[multi] > itov[5].Y = (3.01029995664*LacLm)
[multi] > itov[5].Y = (3.01029995664*LacLm)
[multi] > vgain[1].P = (3.01029995664*TetRm)
[multi] > vgain[1].P = (3.01029995664*TetRm)
[multi] --> Number of options 45
[multi] --> Number of nodes 1
[multi] ======= Partial (Root) Steps 315 =======
[multi]    remove-goal [2111] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   remove-goal [893] [EXPR]vdadd[2].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1154] [EXPR]vdadd[4].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1451] [EXPR]vdadd[6].A<V>=(3.01029995664*LacLm)
   remove-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [1913] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   remove-goal [1730] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] vdadd[0] cfg-in OUT_0=0.12
   [comp] vdadd[0] cfg-in OUT=TetRm
   [comp] vdadd[0] cfg-param BSW=1
   [comp] vdadd[0] cfg-param DSW=1
   [comp] vdadd[0] cfg-in B=0.0005
   [comp] vdadd[0] cfg-in D=0.15051499783
   [comp] vdadd[0] cfg-in A=TRTetR
   [comp] vgain[1] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[1] cfg-in Z=TetRm
   [comp] vgain[1] cfg-in X=3.01029995664
   [comp] vdadd[2] cfg-in OUT_0=40
   [comp] vdadd[2] cfg-in OUT=TetRp
   [comp] vdadd[2] cfg-param BSW=1
   [comp] vdadd[2] cfg-param DSW=1
   [comp] vdadd[2] cfg-in B=0
   [comp] vdadd[2] cfg-in D=0.03010299956
   [comp] vdadd[2] cfg-in A=(3.01029995664*TetRm)
   [comp] itov[3] cfg-in Y=(3.01029995664*clm)
   [comp] itov[3] cfg-in K=clm
   [comp] itov[3] cfg-in X=3.01029995664
   [comp] vdadd[4] cfg-in OUT_0=20
   [comp] vdadd[4] cfg-in OUT=clp
   [comp] vdadd[4] cfg-param BSW=1
   [comp] vdadd[4] cfg-param DSW=1
   [comp] vdadd[4] cfg-in D=0.03010299956
   [comp] vdadd[4] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[4] cfg-in B=0
   [comp] itov[5] cfg-in Y=(3.01029995664*LacLm)
   [comp] itov[5] cfg-in K=LacLm
   [comp] itov[5] cfg-in X=3.01029995664
   [comp] vdadd[6] cfg-in OUT_0=60
   [comp] vdadd[6] cfg-in OUT=LacLp
   [comp] vdadd[6] cfg-param BSW=1
   [comp] vdadd[6] cfg-param DSW=1
   [comp] vdadd[6] cfg-in D=0.03010299956
   [comp] vdadd[6] cfg-in A=(3.01029995664*LacLm)
   [comp] vdadd[6] cfg-in B=0
   [comp] ihill_rep[7] cfg-in REP=TRTetR
   [comp] ihill_rep[7] cfg-in n=2
   [comp] ihill_rep[7] cfg-in S=LacLp
   [comp] ihill_rep[7] cfg-in Vmax=0.4995
   [comp] ihill_rep[7] cfg-in Km=40
   [comp] vdadd[8] cfg-in OUT_0=0.5
   [comp] vdadd[8] cfg-in OUT=LacLm
   [comp] vdadd[8] cfg-param BSW=1
   [comp] vdadd[8] cfg-param DSW=1
   [comp] vdadd[8] cfg-in B=TRLacL
   [comp] vdadd[8] cfg-in D=0.15051499783
   [comp] vdadd[8] cfg-in A=0.0005
   [comp] vdadd[9] cfg-in OUT_0=0.25
   [comp] vdadd[9] cfg-in OUT=clm
   [comp] vdadd[9] cfg-param BSW=1
   [comp] vdadd[9] cfg-param DSW=1
   [comp] vdadd[9] cfg-in B=0.0005
   [comp] vdadd[9] cfg-in D=0.15051499783
   [comp] vdadd[9] cfg-in A=TRclp
   [comp] ihill_rep[10] cfg-in REP=TRclp
   [comp] ihill_rep[10] cfg-in n=2
   [comp] ihill_rep[10] cfg-in S=TetRp
   [comp] ihill_rep[10] cfg-in Vmax=0.4995
   [comp] ihill_rep[10] cfg-in Km=40
   [comp] ihill_rep[11] cfg-in REP=TRLacL
   [comp] ihill_rep[11] cfg-in n=2
   [comp] ihill_rep[11] cfg-in S=clp
   [comp] ihill_rep[11] cfg-in Vmax=0.4995
   [comp] ihill_rep[11] cfg-in Km=40
   [sln] generate vdadd[0].OUT = TetRm
   [sln] add-comp vdadd[0]
   [sln] generate vgain[1].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[1]
   [sln] generate vgain[1].P = (3.01029995664*TetRm)
   [sln] conn vgain[1].P->vdadd[2].A
   [sln] generate vdadd[2].OUT = TetRp
   [sln] add-comp vdadd[2]
   [sln] generate itov[3].Y = (3.01029995664*clm)
   [sln] add-comp itov[3]
   [sln] generate itov[3].Y = (3.01029995664*clm)
   [sln] conn itov[3].Y->vdadd[4].A
   [sln] generate vdadd[4].OUT = clp
   [sln] add-comp vdadd[4]
   [sln] generate itov[5].Y = (3.01029995664*LacLm)
   [sln] add-comp itov[5]
   [sln] generate itov[5].Y = (3.01029995664*LacLm)
   [sln] conn itov[5].Y->vdadd[6].A
   [sln] generate vdadd[6].OUT = LacLp
   [sln] add-comp vdadd[6]
   [sln] generate ihill_rep[7].REP = TRTetR
   [sln] add-comp ihill_rep[7]
   [sln] generate vdadd[8].OUT = LacLm
   [sln] add-comp vdadd[8]
   [sln] generate vdadd[9].OUT = clm
   [sln] add-comp vdadd[9]
   [sln] generate ihill_rep[10].REP = TRclp
   [sln] add-comp ihill_rep[10]
   [sln] generate ihill_rep[11].REP = TRLacL
   [sln] add-comp ihill_rep[11]
   [sln] route vdadd[0].OUT_0 = 0.12
   [sln] route vdadd[0].B = 0.0005
   [sln] route vdadd[0].D = 0.15051499783
   [sln] route vdadd[0].A = TRTetR
   [sln] route vgain[1].Z = TetRm
   [sln] route vgain[1].X = 3.01029995664
   [sln] route vdadd[2].OUT_0 = 40
   [sln] route vdadd[2].B = 0
   [sln] route vdadd[2].D = 0.03010299956
   [sln] route itov[3].K = clm
   [sln] route itov[3].X = 3.01029995664
   [sln] route vdadd[4].OUT_0 = 20
   [sln] route vdadd[4].D = 0.03010299956
   [sln] route vdadd[4].B = 0
   [sln] route itov[5].K = LacLm
   [sln] route itov[5].X = 3.01029995664
   [sln] route vdadd[6].OUT_0 = 60
   [sln] route vdadd[6].D = 0.03010299956
   [sln] route vdadd[6].B = 0
   [sln] route ihill_rep[7].n = 2
   [sln] route ihill_rep[7].S = LacLp
   [sln] route ihill_rep[7].Vmax = 0.4995
   [sln] route ihill_rep[7].Km = 40
   [sln] route vdadd[8].OUT_0 = 0.5
   [sln] route vdadd[8].B = TRLacL
   [sln] route vdadd[8].D = 0.15051499783
   [sln] route vdadd[8].A = 0.0005
   [sln] route vdadd[9].OUT_0 = 0.25
   [sln] route vdadd[9].B = 0.0005
   [sln] route vdadd[9].D = 0.15051499783
   [sln] route vdadd[9].A = TRclp
   [sln] route ihill_rep[10].n = 2
   [sln] route ihill_rep[10].S = TetRp
   [sln] route ihill_rep[10].Vmax = 0.4995
   [sln] route ihill_rep[10].Km = 40
   [sln] route ihill_rep[11].n = 2
   [sln] route ihill_rep[11].S = clp
   [sln] route ihill_rep[11].Vmax = 0.4995
   [sln] route ihill_rep[11].Km = 40
   [comp] make-comp vdadd0
   [comp] make-comp vgain1
   [comp] make-comp vdadd2
   [comp] make-comp itov3
   [comp] make-comp vdadd4
   [comp] make-comp itov5
   [comp] make-comp vdadd6
   [comp] make-comp ihill_rep7
   [comp] make-comp vdadd8
   [comp] make-comp vdadd9
   [comp] make-comp ihill_rep10
   [comp] make-comp ihill_rep11
   change-goal-status 2110 to disabled
   change-goal-status 2112 to disabled
   change-goal-status 2113 to disabled
   change-goal-status 2114 to disabled
   change-goal-status 2115 to disabled
   change-goal-status 2116 to disabled
   change-goal-status 2117 to disabled
   change-goal-status 2118 to disabled
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 1391 to disabled
   change-goal-status 1392 to disabled
   change-goal-status 1393 to disabled
   change-goal-status 1394 to disabled
   change-goal-status 1396 to disabled
   change-goal-status 1397 to disabled
   change-goal-status 1398 to disabled
   change-goal-status 1399 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 1908 to disabled
   change-goal-status 1909 to disabled
   change-goal-status 1910 to disabled
   change-goal-status 1911 to disabled
   change-goal-status 1912 to disabled
   change-goal-status 1914 to disabled
   change-goal-status 1915 to disabled
   change-goal-status 1916 to disabled
   change-goal-status 1724 to disabled
   change-goal-status 1725 to disabled
   change-goal-status 1726 to disabled
   change-goal-status 1727 to disabled
   change-goal-status 1728 to disabled
   change-goal-status 1729 to disabled
   change-goal-status 1731 to disabled
   change-goal-status 1732 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [2110] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [2111] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2112] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [2113] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [2114] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [2115] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2116] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2117] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [2118] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[2].A<V>=(3.01029995664*TetRm)
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[4].A<V>=(3.01029995664*clm)
   add-goal [1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1451] [EXPR]vdadd[6].A<V>=(3.01029995664*LacLm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1908] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1909] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1910] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1911] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1912] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1913] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1914] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1915] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1916] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1724] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1725] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1726] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1727] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1728] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1729] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1730] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1731] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1732] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ============================
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.V[0] cfg-in X=2
     [comp] input.V[0] cfg-out O=2
     [comp] input.V[1] cfg-in X=2
     [comp] input.V[1] cfg-out O=2
     [comp] input.V[2] cfg-in X=2
     [comp] input.V[2] cfg-out O=2
     [comp] input.V[3] cfg-in X=60
     [comp] input.V[3] cfg-out O=60
     [comp] input.V[4] cfg-in X=0
     [comp] input.V[4] cfg-out O=0
     [comp] input.V[5] cfg-in X=0
     [comp] input.V[5] cfg-out O=0
     [comp] input.V[6] cfg-in X=0
     [comp] input.V[6] cfg-out O=0
     [comp] input.V[7] cfg-in X=0.12
     [comp] input.V[7] cfg-out O=0.12
     [comp] input.V[8] cfg-in X=0.5
     [comp] input.V[8] cfg-out O=0.5
     [comp] input.I[0] cfg-in X=0.15051499783
     [comp] input.I[0] cfg-out O=0.15051499783
     [comp] input.I[1] cfg-in X=0.15051499783
     [comp] input.I[1] cfg-out O=0.15051499783
     [comp] input.I[2] cfg-in X=0.15051499783
     [comp] input.I[2] cfg-out O=0.15051499783
     [comp] input.I[3] cfg-in X=0.4995
     [comp] input.I[3] cfg-out O=0.4995
     [comp] input.I[4] cfg-in X=0.4995
     [comp] input.I[4] cfg-out O=0.4995
     [comp] input.I[5] cfg-in X=0.4995
     [comp] input.I[5] cfg-out O=0.4995
     [comp] input.V[9] cfg-in X=0.0005
     [comp] input.V[9] cfg-out O=0.0005
     [comp] input.V[10] cfg-in X=0.0005
     [comp] input.V[10] cfg-out O=0.0005
     [comp] input.V[11] cfg-in X=0.0005
     [comp] input.V[11] cfg-out O=0.0005
     [comp] input.V[12] cfg-in X=40
     [comp] input.V[12] cfg-out O=40
     [comp] input.I[6] cfg-in X=40
     [comp] input.I[6] cfg-out O=40
     [comp] input.I[7] cfg-in X=40
     [comp] input.I[7] cfg-out O=40
     [comp] input.I[8] cfg-in X=40
     [comp] input.I[8] cfg-out O=40
     [comp] input.V[13] cfg-in X=3.01029995664
     [comp] input.V[13] cfg-out O=3.01029995664
     [comp] input.I[9] cfg-in X=3.01029995664
     [comp] input.I[9] cfg-out O=3.01029995664
     [comp] input.I[10] cfg-in X=3.01029995664
     [comp] input.I[10] cfg-out O=3.01029995664
     [comp] input.V[14] cfg-in X=0.25
     [comp] input.V[14] cfg-out O=0.25
     [comp] input.V[15] cfg-in X=20
     [comp] input.V[15] cfg-out O=20
     [comp] input.I[11] cfg-in X=0.03010299956
     [comp] input.I[11] cfg-out O=0.03010299956
     [comp] input.I[12] cfg-in X=0.03010299956
     [comp] input.I[12] cfg-out O=0.03010299956
     [comp] input.I[13] cfg-in X=0.03010299956
     [comp] input.I[13] cfg-out O=0.03010299956
     [comp] output.V[0] cfg-in X=TetRm
     [comp] output.V[0] cfg-out O=TetRm
     [comp] output.V[1] cfg-in X=LacLp
     [comp] output.V[1] cfg-out O=LacLp
     [comp] output.V[2] cfg-in X=LacLm
     [comp] output.V[2] cfg-out O=LacLm
     [comp] output.V[3] cfg-in X=clm
     [comp] output.V[3] cfg-out O=clm
     [comp] output.V[4] cfg-in X=clp
     [comp] output.V[4] cfg-out O=clp
     [comp] output.V[5] cfg-in X=TetRp
     [comp] output.V[5] cfg-out O=TetRp
     [sln] rm-route vgain[1].Z = TetRm
     [sln] rm-route ihill_rep[7].S = LacLp
     [sln] rm-route itov[5].K = LacLm
     [sln] rm-route itov[3].K = clm
     [sln] rm-route ihill_rep[11].S = clp
     [sln] rm-route ihill_rep[10].S = TetRp
     [sln] rm-route vdadd[0].A = TRTetR
     [sln] rm-route vdadd[8].B = TRLacL
     [sln] rm-route vdadd[9].A = TRclp
     [sln] rm-route ihill_rep[7].n = 2
     [sln] add-comp input.V[0]
     [sln] generate input.V[0].O = 2
     [sln] rm-route ihill_rep[11].n = 2
     [sln] add-comp input.V[1]
     [sln] generate input.V[1].O = 2
     [sln] rm-route ihill_rep[10].n = 2
     [sln] add-comp input.V[2]
     [sln] generate input.V[2].O = 2
     [sln] rm-route vdadd[6].OUT_0 = 60
     [sln] add-comp input.V[3]
     [sln] generate input.V[3].O = 60
     [sln] rm-route vdadd[2].B = 0
     [sln] add-comp input.V[4]
     [sln] generate input.V[4].O = 0
     [sln] rm-route vdadd[6].B = 0
     [sln] add-comp input.V[5]
     [sln] generate input.V[5].O = 0
     [sln] rm-route vdadd[4].B = 0
     [sln] add-comp input.V[6]
     [sln] generate input.V[6].O = 0
     [sln] rm-route vdadd[0].OUT_0 = 0.12
     [sln] add-comp input.V[7]
     [sln] generate input.V[7].O = 0.12
     [sln] rm-route vdadd[8].OUT_0 = 0.5
     [sln] add-comp input.V[8]
     [sln] generate input.V[8].O = 0.5
     [sln] rm-route vdadd[0].D = 0.15051499783
     [sln] add-comp input.I[0]
     [sln] generate input.I[0].O = 0.15051499783
     [sln] rm-route vdadd[9].D = 0.15051499783
     [sln] add-comp input.I[1]
     [sln] generate input.I[1].O = 0.15051499783
     [sln] rm-route vdadd[8].D = 0.15051499783
     [sln] add-comp input.I[2]
     [sln] generate input.I[2].O = 0.15051499783
     [sln] rm-route ihill_rep[7].Vmax = 0.4995
     [sln] add-comp input.I[3]
     [sln] generate input.I[3].O = 0.4995
     [sln] rm-route ihill_rep[11].Vmax = 0.4995
     [sln] add-comp input.I[4]
     [sln] generate input.I[4].O = 0.4995
     [sln] rm-route ihill_rep[10].Vmax = 0.4995
     [sln] add-comp input.I[5]
     [sln] generate input.I[5].O = 0.4995
     [sln] rm-route vdadd[0].B = 0.0005
     [sln] add-comp input.V[9]
     [sln] generate input.V[9].O = 0.0005
     [sln] rm-route vdadd[9].B = 0.0005
     [sln] add-comp input.V[10]
     [sln] generate input.V[10].O = 0.0005
     [sln] rm-route vdadd[8].A = 0.0005
     [sln] add-comp input.V[11]
     [sln] generate input.V[11].O = 0.0005
     [sln] rm-route vdadd[2].OUT_0 = 40
     [sln] add-comp input.V[12]
     [sln] generate input.V[12].O = 40
     [sln] rm-route ihill_rep[7].Km = 40
     [sln] add-comp input.I[6]
     [sln] generate input.I[6].O = 40
     [sln] rm-route ihill_rep[11].Km = 40
     [sln] add-comp input.I[7]
     [sln] generate input.I[7].O = 40
     [sln] rm-route ihill_rep[10].Km = 40
     [sln] add-comp input.I[8]
     [sln] generate input.I[8].O = 40
     [sln] rm-route vgain[1].X = 3.01029995664
     [sln] add-comp input.V[13]
     [sln] generate input.V[13].O = 3.01029995664
     [sln] rm-route itov[5].X = 3.01029995664
     [sln] add-comp input.I[9]
     [sln] generate input.I[9].O = 3.01029995664
     [sln] rm-route itov[3].X = 3.01029995664
     [sln] add-comp input.I[10]
     [sln] generate input.I[10].O = 3.01029995664
     [sln] rm-route vdadd[9].OUT_0 = 0.25
     [sln] add-comp input.V[14]
     [sln] generate input.V[14].O = 0.25
     [sln] rm-route vdadd[4].OUT_0 = 20
     [sln] add-comp input.V[15]
     [sln] generate input.V[15].O = 20
     [sln] rm-route vdadd[2].D = 0.03010299956
     [sln] add-comp input.I[11]
     [sln] generate input.I[11].O = 0.03010299956
     [sln] rm-route vdadd[6].D = 0.03010299956
     [sln] add-comp input.I[12]
     [sln] generate input.I[12].O = 0.03010299956
     [sln] rm-route vdadd[4].D = 0.03010299956
     [sln] add-comp input.I[13]
     [sln] generate input.I[13].O = 0.03010299956
     [sln] add-comp output.V[0]
     [sln] generate output.V[0].O = TetRm
     [sln] add-comp output.V[1]
     [sln] generate output.V[1].O = LacLp
     [sln] add-comp output.V[2]
     [sln] generate output.V[2].O = LacLm
     [sln] add-comp output.V[3]
     [sln] generate output.V[3].O = clm
     [sln] add-comp output.V[4]
     [sln] generate output.V[4].O = clp
     [sln] add-comp output.V[5]
     [sln] generate output.V[5].O = TetRp
     [sln] route input.V[0].X = 2
     [sln] route input.V[1].X = 2
     [sln] route input.V[2].X = 2
     [sln] route input.V[3].X = 60
     [sln] route input.V[4].X = 0
     [sln] route input.V[5].X = 0
     [sln] route input.V[6].X = 0
     [sln] route input.V[7].X = 0.12
     [sln] route input.V[8].X = 0.5
     [sln] route input.I[0].X = 0.15051499783
     [sln] route input.I[1].X = 0.15051499783
     [sln] route input.I[2].X = 0.15051499783
     [sln] route input.I[3].X = 0.4995
     [sln] route input.I[4].X = 0.4995
     [sln] route input.I[5].X = 0.4995
     [sln] route input.V[9].X = 0.0005
     [sln] route input.V[10].X = 0.0005
     [sln] route input.V[11].X = 0.0005
     [sln] route input.V[12].X = 40
     [sln] route input.I[6].X = 40
     [sln] route input.I[7].X = 40
     [sln] route input.I[8].X = 40
     [sln] route input.V[13].X = 3.01029995664
     [sln] route input.I[9].X = 3.01029995664
     [sln] route input.I[10].X = 3.01029995664
     [sln] route input.V[14].X = 0.25
     [sln] route input.V[15].X = 20
     [sln] route input.I[11].X = 0.03010299956
     [sln] route input.I[12].X = 0.03010299956
     [sln] route input.I[13].X = 0.03010299956
     [comp] make-comp input.V0
     [comp] make-comp input.V1
     [comp] make-comp input.V2
     [comp] make-comp input.V3
     [comp] make-comp input.V4
     [comp] make-comp input.V5
     [comp] make-comp input.V6
     [comp] make-comp input.V7
     [comp] make-comp input.V8
     [comp] make-comp input.I0
     [comp] make-comp input.I1
     [comp] make-comp input.I2
     [comp] make-comp input.I3
     [comp] make-comp input.I4
     [comp] make-comp input.I5
     [comp] make-comp input.V9
     [comp] make-comp input.V10
     [comp] make-comp input.V11
     [comp] make-comp input.V12
     [comp] make-comp input.I6
     [comp] make-comp input.I7
     [comp] make-comp input.I8
     [comp] make-comp input.V13
     [comp] make-comp input.I9
     [comp] make-comp input.I10
     [comp] make-comp input.V14
     [comp] make-comp input.V15
     [comp] make-comp input.I11
     [comp] make-comp input.I12
     [comp] make-comp input.I13
     [comp] make-comp output.V0
     [comp] make-comp output.V1
     [comp] make-comp output.V2
     [comp] make-comp output.V3
     [comp] make-comp output.V4
     [comp] make-comp output.V5
     add-goal [2240] [CONN] vdadd[0].OUT => vgain[1].Z (TetRm)
     add-goal [2241] [CONN] vdadd[6].OUT => ihill_rep[7].S (LacLp)
     add-goal [2242] [CONN] vdadd[8].OUT => itov[5].K (LacLm)
     add-goal [2243] [CONN] vdadd[9].OUT => itov[3].K (clm)
     add-goal [2244] [CONN] vdadd[4].OUT => ihill_rep[11].S (clp)
     add-goal [2245] [CONN] vdadd[2].OUT => ihill_rep[10].S (TetRp)
     add-goal [2246] [CONN] ihill_rep[7].REP => vdadd[0].A (TRTetR)
     add-goal [2247] [CONN] ihill_rep[11].REP => vdadd[8].B (TRLacL)
     add-goal [2248] [CONN] ihill_rep[10].REP => vdadd[9].A (TRclp)
     add-goal [2249] [CONN] input.V[0].O => ihill_rep[7].n (2)
     add-goal [2250] [CONN] input.V[1].O => ihill_rep[11].n (2)
     add-goal [2251] [CONN] input.V[2].O => ihill_rep[10].n (2)
     add-goal [2252] [CONN] input.V[3].O => vdadd[6].OUT_0 (60)
     add-goal [2253] [CONN] input.V[4].O => vdadd[2].B (0)
     add-goal [2254] [CONN] input.V[5].O => vdadd[6].B (0)
     add-goal [2255] [CONN] input.V[6].O => vdadd[4].B (0)
     add-goal [2256] [CONN] input.V[7].O => vdadd[0].OUT_0 (0.12)
     add-goal [2257] [CONN] input.V[8].O => vdadd[8].OUT_0 (0.5)
     add-goal [2258] [CONN] input.I[0].O => vdadd[0].D (0.15051499783)
     add-goal [2259] [CONN] input.I[1].O => vdadd[9].D (0.15051499783)
     add-goal [2260] [CONN] input.I[2].O => vdadd[8].D (0.15051499783)
     add-goal [2261] [CONN] input.I[3].O => ihill_rep[7].Vmax (0.4995)
     add-goal [2262] [CONN] input.I[4].O => ihill_rep[11].Vmax (0.4995)
     add-goal [2263] [CONN] input.I[5].O => ihill_rep[10].Vmax (0.4995)
     add-goal [2264] [CONN] input.V[9].O => vdadd[0].B (0.0005)
     add-goal [2265] [CONN] input.V[10].O => vdadd[9].B (0.0005)
     add-goal [2266] [CONN] input.V[11].O => vdadd[8].A (0.0005)
     add-goal [2267] [CONN] input.V[12].O => vdadd[2].OUT_0 (40)
     add-goal [2268] [CONN] input.I[6].O => ihill_rep[7].Km (40)
     add-goal [2269] [CONN] input.I[7].O => ihill_rep[11].Km (40)
     add-goal [2270] [CONN] input.I[8].O => ihill_rep[10].Km (40)
     add-goal [2271] [CONN] input.V[13].O => vgain[1].X (3.01029995664)
     add-goal [2272] [CONN] input.I[9].O => itov[5].X (3.01029995664)
     add-goal [2273] [CONN] input.I[10].O => itov[3].X (3.01029995664)
     add-goal [2274] [CONN] input.V[14].O => vdadd[9].OUT_0 (0.25)
     add-goal [2275] [CONN] input.V[15].O => vdadd[4].OUT_0 (20)
     add-goal [2276] [CONN] input.I[11].O => vdadd[2].D (0.03010299956)
     add-goal [2277] [CONN] input.I[12].O => vdadd[6].D (0.03010299956)
     add-goal [2278] [CONN] input.I[13].O => vdadd[4].D (0.03010299956)
     add-goal [2279] [CONN] vdadd[0].OUT => output.V[0].X (TetRm)
     add-goal [2280] [CONN] vdadd[6].OUT => output.V[1].X (LacLp)
     add-goal [2281] [CONN] vdadd[8].OUT => output.V[2].X (LacLm)
     add-goal [2282] [CONN] vdadd[9].OUT => output.V[3].X (clm)
     add-goal [2283] [CONN] vdadd[4].OUT => output.V[4].X (clp)
     add-goal [2284] [CONN] vdadd[2].OUT => output.V[5].X (TetRp)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2115] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2112] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1732] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1915] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2118] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1908] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1909] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1910] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[2114] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1726] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1911] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1729] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2116] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1916] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1727] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[2117] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1914] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1912] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2113] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1725] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2110] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1728] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1731] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1724] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[2275] [CONN] input.V[15].O => vdadd[4].OUT_0 (20)
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2248] [CONN] ihill_rep[10].REP => vdadd[9].A (TRclp)
[2258] [CONN] input.I[0].O => vdadd[0].D (0.15051499783)
[2273] [CONN] input.I[10].O => itov[3].X (3.01029995664)
[2115] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2241] [CONN] vdadd[6].OUT => ihill_rep[7].S (LacLp)
[2112] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2249] [CONN] input.V[0].O => ihill_rep[7].n (2)
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[2240] [CONN] vdadd[0].OUT => vgain[1].Z (TetRm)
[2265] [CONN] input.V[10].O => vdadd[9].B (0.0005)
[2260] [CONN] input.I[2].O => vdadd[8].D (0.15051499783)
[2269] [CONN] input.I[7].O => ihill_rep[11].Km (40)
[1732] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[2262] [CONN] input.I[4].O => ihill_rep[11].Vmax (0.4995)
[2268] [CONN] input.I[6].O => ihill_rep[7].Km (40)
[1915] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2261] [CONN] input.I[3].O => ihill_rep[7].Vmax (0.4995)
[2267] [CONN] input.V[12].O => vdadd[2].OUT_0 (40)
[2118] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2245] [CONN] vdadd[2].OUT => ihill_rep[10].S (TetRp)
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2264] [CONN] input.V[9].O => vdadd[0].B (0.0005)
[2274] [CONN] input.V[14].O => vdadd[9].OUT_0 (0.25)
[1908] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1909] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1910] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[2277] [CONN] input.I[12].O => vdadd[6].D (0.03010299956)
[2272] [CONN] input.I[9].O => itov[5].X (3.01029995664)
[2280] [CONN] vdadd[6].OUT => output.V[1].X (LacLp)
[2254] [CONN] input.V[5].O => vdadd[6].B (0)
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[2283] [CONN] vdadd[4].OUT => output.V[4].X (clp)
[2114] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2276] [CONN] input.I[11].O => vdadd[2].D (0.03010299956)
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2266] [CONN] input.V[11].O => vdadd[8].A (0.0005)
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2284] [CONN] vdadd[2].OUT => output.V[5].X (TetRp)
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2278] [CONN] input.I[13].O => vdadd[4].D (0.03010299956)
[2256] [CONN] input.V[7].O => vdadd[0].OUT_0 (0.12)
[2251] [CONN] input.V[2].O => ihill_rep[10].n (2)
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1726] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2252] [CONN] input.V[3].O => vdadd[6].OUT_0 (60)
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2247] [CONN] ihill_rep[11].REP => vdadd[8].B (TRLacL)
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1911] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1729] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2281] [CONN] vdadd[8].OUT => output.V[2].X (LacLm)
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2243] [CONN] vdadd[9].OUT => itov[3].K (clm)
[2257] [CONN] input.V[8].O => vdadd[8].OUT_0 (0.5)
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2259] [CONN] input.I[1].O => vdadd[9].D (0.15051499783)
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2116] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2263] [CONN] input.I[5].O => ihill_rep[10].Vmax (0.4995)
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2253] [CONN] input.V[4].O => vdadd[2].B (0)
[2271] [CONN] input.V[13].O => vgain[1].X (3.01029995664)
[2282] [CONN] vdadd[9].OUT => output.V[3].X (clm)
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1916] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1727] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[2244] [CONN] vdadd[4].OUT => ihill_rep[11].S (clp)
[2270] [CONN] input.I[8].O => ihill_rep[10].Km (40)
[2117] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1914] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1912] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2279] [CONN] vdadd[0].OUT => output.V[0].X (TetRm)
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2113] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1725] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2246] [CONN] ihill_rep[7].REP => vdadd[0].A (TRTetR)
[2110] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1728] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2250] [CONN] input.V[1].O => ihill_rep[11].n (2)
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1731] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1724] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[2242] [CONN] vdadd[8].OUT => itov[5].K (LacLm)
[2255] [CONN] input.V[6].O => vdadd[4].B (0)
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> Current Goal: [2255] [CONN] input.V[6].O => vdadd[4].B (0)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->itov.K
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>ihill_rep.REP->vdadd.A
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vgain.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->itov.K
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>ihill_rep.REP->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.A
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->itov.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->vgain.Z
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->itov.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>ihill_rep.REP->vdadd.A
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 3
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=73

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] [TERMINATE] found 0 / 1
[eqn] [TERMINATE] could not find another node
[multi]   >> Found # Global Solutions: 1/1
[multi] => Global Solution: LacLm~35LacLp~117TRLacL~83TRTetR~83TRclp~83TetRm~37TetRp~51clm~40clp~117 :: 3
[multi] Number of Solutions: 1
[multi] => Global Solution: LacLm~35LacLp~117TRLacL~83TRTetR~83TRclp~83TetRm~40TetRp~51clm~40clp~117 :: 3
[multi] >>>NEW SOLUTION!<<<
[multi] => Global Solution: LacLm~35LacLp~117TRLacL~83TRTetR~83TRclp~83TetRm~37TetRp~51clm~40clp~117 :: 3
[[Z3]] ---> Executing SMT Solver prob=74

[rslvr] z32cstr.wire: ihill_rep[11].Km
[rslvr] z32cstr.wire: vdadd[0].B
[rslvr] z32cstr.wire: output.V[3].X
[rslvr] z32cstr.wire: vdadd[2].OUT_0
[rslvr] z32cstr.wire: input.V[2].O
[rslvr] z32cstr.wire: vdadd[6].OUT_0
[rslvr] z32cstr.wire: itov[5].K
[rslvr] z32cstr.wire: input.V[3].O
[rslvr] z32cstr.wire: input.I[8].O
[rslvr] z32cstr.wire: vdadd[2].B
[rslvr] z32cstr.wire: itov[3].K
[rslvr] z32cstr.wire: input.V[12].O
[rslvr] z32cstr.wire: vdadd[4].D
[rslvr] z32cstr.wire: input.I[0].O
[rslvr] z32cstr.wire: vdadd[6].A
[rslvr] z32cstr.wire: ihill_rep[10].S
[rslvr] z32cstr.wire: vdadd[4].OUT
[rslvr] z32cstr.wire: vdadd[2].OUT
[rslvr] z32cstr.wire: input.I[9].O
[rslvr] z32cstr.wire: vdadd[4].B
[rslvr] z32cstr.wire: input.I[11].O
[rslvr] z32cstr.wire: input.I[3].O
[rslvr] z32cstr.wire: vdadd[9].A
[rslvr] z32cstr.wire: ihill_rep[11].n
[rslvr] z32cstr.wire: vdadd[8].B
[rslvr] z32cstr.wire: input.I[2].O
[rslvr] z32cstr.wire: ihill_rep[11].Vmax
[rslvr] z32cstr.wire: input.V[5].O
[rslvr] z32cstr.wire: ihill_rep[7].S
[rslvr] z32cstr.wire: vdadd[4].OUT_0
[rslvr] z32cstr.wire: input.V[6].O
[rslvr] z32cstr.wire: ihill_rep[11].REP
[rslvr] z32cstr.wire: input.V[9].O
[rslvr] z32cstr.wire: vdadd[4].A
[rslvr] z32cstr.wire: output.V[1].X
[rslvr] z32cstr.wire: vdadd[8].OUT_0
[rslvr] z32cstr.wire: vdadd[0].A
[rslvr] z32cstr.wire: vdadd[9].D
[rslvr] z32cstr.wire: vdadd[0].D
[rslvr] z32cstr.wire: output.V[2].X
[rslvr] z32cstr.wire: output.V[5].X
[rslvr] z32cstr.wire: input.V[11].O
[rslvr] z32cstr.wire: vdadd[0].OUT_0
[rslvr] z32cstr.wire: input.V[13].O
[rslvr] z32cstr.wire: vdadd[6].B
[rslvr] z32cstr.wire: itov[3].X
[rslvr] z32cstr.wire: vdadd[6].D
[rslvr] z32cstr.wire: vdadd[0].OUT
[rslvr] z32cstr.wire: ihill_rep[7].Km
[rslvr] z32cstr.wire: vdadd[2].A
[rslvr] z32cstr.wire: input.V[1].O
[rslvr] z32cstr.wire: itov[3].Y
[rslvr] z32cstr.wire: input.I[13].O
[rslvr] z32cstr.wire: vdadd[8].D
[rslvr] z32cstr.wire: input.I[6].O
[rslvr] z32cstr.wire: input.V[8].O
[rslvr] z32cstr.wire: input.V[7].O
[rslvr] z32cstr.wire: input.I[12].O
[rslvr] z32cstr.wire: input.V[10].O
[rslvr] z32cstr.wire: ihill_rep[7].Vmax
[rslvr] z32cstr.wire: input.I[10].O
[rslvr] z32cstr.wire: vgain[1].Z
[rslvr] z32cstr.wire: input.I[4].O
[rslvr] z32cstr.wire: vdadd[6].OUT
[rslvr] z32cstr.wire: vdadd[2].D
[rslvr] z32cstr.wire: output.V[0].X
[rslvr] z32cstr.wire: output.V[4].X
[rslvr] z32cstr.wire: itov[5].Y
[rslvr] z32cstr.wire: ihill_rep[11].S
[rslvr] z32cstr.wire: itov[5].X
[rslvr] z32cstr.wire: input.V[14].O
[rslvr] z32cstr.wire: vgain[1].P
[rslvr] z32cstr.wire: vdadd[9].OUT_0
[rslvr] z32cstr.wire: ihill_rep[10].REP
[rslvr] z32cstr.wire: input.I[5].O
[rslvr] z32cstr.wire: ihill_rep[7].REP
[rslvr] z32cstr.wire: vgain[1].X
[rslvr] z32cstr.wire: ihill_rep[10].Km
[rslvr] z32cstr.wire: input.I[7].O
[rslvr] z32cstr.wire: vdadd[9].OUT
[rslvr] z32cstr.wire: input.I[1].O
[rslvr] z32cstr.wire: ihill_rep[10].Vmax
[rslvr] z32cstr.wire: vdadd[9].B
[rslvr] z32cstr.wire: input.V[0].O
[rslvr] z32cstr.wire: vdadd[8].A
[rslvr] z32cstr.wire: input.V[15].O
[rslvr] z32cstr.wire: ihill_rep[7].n
[rslvr] z32cstr.wire: input.V[4].O
[rslvr] z32cstr.wire: ihill_rep[10].n
[rslvr] z32cstr.wire: vdadd[8].OUT
[dbg] === Emitting Library ===
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
===> Emitting Simulation to ckt_repri_1_sdeIdeal.m
[dbg] === Emitting Library ===
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
===> Emitting Simulation to ckt_repri_1_odeIdeal.m
[dbg] === Emitting Library ===
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
===> Emitting Simulation to ckt_repri_1_sdeCirc.m
[dbg] === Emitting Library ===
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
===> Emitting Simulation to ckt_repri_1_odeCirc.m
===== Solution Found ======
[[Z3]] ---> Executing SMT Solver prob=75

[rslvr] z32cstr.wire: ihill_rep[11].Km
[rslvr] z32cstr.wire: vdadd[0].B
[rslvr] z32cstr.wire: output.V[3].X
[rslvr] z32cstr.wire: vdadd[2].OUT_0
[rslvr] z32cstr.wire: input.V[2].O
[rslvr] z32cstr.wire: vdadd[6].OUT_0
[rslvr] z32cstr.wire: itov[5].K
[rslvr] z32cstr.wire: input.V[3].O
[rslvr] z32cstr.wire: input.I[8].O
[rslvr] z32cstr.wire: vdadd[2].B
[rslvr] z32cstr.wire: itov[3].K
[rslvr] z32cstr.wire: input.V[12].O
[rslvr] z32cstr.wire: vdadd[4].D
[rslvr] z32cstr.wire: input.I[0].O
[rslvr] z32cstr.wire: vdadd[6].A
[rslvr] z32cstr.wire: ihill_rep[10].S
[rslvr] z32cstr.wire: vdadd[4].OUT
[rslvr] z32cstr.wire: vdadd[2].OUT
[rslvr] z32cstr.wire: input.I[9].O
[rslvr] z32cstr.wire: vdadd[4].B
[rslvr] z32cstr.wire: input.I[11].O
[rslvr] z32cstr.wire: input.I[3].O
[rslvr] z32cstr.wire: vdadd[9].A
[rslvr] z32cstr.wire: ihill_rep[11].n
[rslvr] z32cstr.wire: vdadd[8].B
[rslvr] z32cstr.wire: input.I[2].O
[rslvr] z32cstr.wire: ihill_rep[11].Vmax
[rslvr] z32cstr.wire: input.V[5].O
[rslvr] z32cstr.wire: ihill_rep[7].S
[rslvr] z32cstr.wire: vdadd[4].OUT_0
[rslvr] z32cstr.wire: input.V[6].O
[rslvr] z32cstr.wire: ihill_rep[11].REP
[rslvr] z32cstr.wire: input.V[9].O
[rslvr] z32cstr.wire: vdadd[4].A
[rslvr] z32cstr.wire: output.V[1].X
[rslvr] z32cstr.wire: vdadd[8].OUT_0
[rslvr] z32cstr.wire: vdadd[0].A
[rslvr] z32cstr.wire: vdadd[9].D
[rslvr] z32cstr.wire: vdadd[0].D
[rslvr] z32cstr.wire: output.V[2].X
[rslvr] z32cstr.wire: output.V[5].X
[rslvr] z32cstr.wire: input.V[11].O
[rslvr] z32cstr.wire: vdadd[0].OUT_0
[rslvr] z32cstr.wire: input.V[13].O
[rslvr] z32cstr.wire: vdadd[6].B
[rslvr] z32cstr.wire: itov[3].X
[rslvr] z32cstr.wire: vdadd[6].D
[rslvr] z32cstr.wire: vdadd[0].OUT
[rslvr] z32cstr.wire: ihill_rep[7].Km
[rslvr] z32cstr.wire: vdadd[2].A
[rslvr] z32cstr.wire: input.V[1].O
[rslvr] z32cstr.wire: itov[3].Y
[rslvr] z32cstr.wire: input.I[13].O
[rslvr] z32cstr.wire: vdadd[8].D
[rslvr] z32cstr.wire: input.I[6].O
[rslvr] z32cstr.wire: input.V[8].O
[rslvr] z32cstr.wire: input.V[7].O
[rslvr] z32cstr.wire: input.I[12].O
[rslvr] z32cstr.wire: input.V[10].O
[rslvr] z32cstr.wire: ihill_rep[7].Vmax
[rslvr] z32cstr.wire: input.I[10].O
[rslvr] z32cstr.wire: vgain[1].Z
[rslvr] z32cstr.wire: input.I[4].O
[rslvr] z32cstr.wire: vdadd[6].OUT
[rslvr] z32cstr.wire: vdadd[2].D
[rslvr] z32cstr.wire: output.V[0].X
[rslvr] z32cstr.wire: output.V[4].X
[rslvr] z32cstr.wire: itov[5].Y
[rslvr] z32cstr.wire: ihill_rep[11].S
[rslvr] z32cstr.wire: itov[5].X
[rslvr] z32cstr.wire: input.V[14].O
[rslvr] z32cstr.wire: vgain[1].P
[rslvr] z32cstr.wire: vdadd[9].OUT_0
[rslvr] z32cstr.wire: ihill_rep[10].REP
[rslvr] z32cstr.wire: input.I[5].O
[rslvr] z32cstr.wire: ihill_rep[7].REP
[rslvr] z32cstr.wire: vgain[1].X
[rslvr] z32cstr.wire: ihill_rep[10].Km
[rslvr] z32cstr.wire: input.I[7].O
[rslvr] z32cstr.wire: vdadd[9].OUT
[rslvr] z32cstr.wire: input.I[1].O
[rslvr] z32cstr.wire: ihill_rep[10].Vmax
[rslvr] z32cstr.wire: vdadd[9].B
[rslvr] z32cstr.wire: input.V[0].O
[rslvr] z32cstr.wire: vdadd[8].A
[rslvr] z32cstr.wire: input.V[15].O
[rslvr] z32cstr.wire: ihill_rep[7].n
[rslvr] z32cstr.wire: input.V[4].O
[rslvr] z32cstr.wire: ihill_rep[10].n
[rslvr] z32cstr.wire: vdadd[8].OUT
->input.I[3]
->input.I[4]
->vdadd[9]
->input.I[8]
->output.V[3]
->input.V[4]
->input.I[5]
->input.V[10]
->ihill_rep[11]
->input.V[6]
->input.V[15]
->vdadd[8]
->input.I[1]
->itov[5]
->input.I[2]
->input.I[7]
->input.V[2]
->output.V[0]
->output.V[5]
->input.I[12]
->vgain[1]
->output.V[4]
->input.V[1]
->input.I[10]
->input.I[9]
->input.V[5]
->input.V[12]
->itov[3]
->input.V[9]
->output.V[1]
->input.V[3]
->vdadd[2]
->input.V[8]
->input.I[6]
->input.V[13]
->input.I[11]
->input.V[7]
->vdadd[0]
->input.I[0]
->input.V[14]
->vdadd[4]
->vdadd[6]
->output.V[2]
->input.I[13]
->ihill_rep[7]
->input.V[0]
->input.V[11]
->ihill_rep[10]
=== Proc Insts ===
=== Construct Initial Mappings from Partition ===
-> setting deriv
-> setting deriv
===Constructing Abs Var Contraints (102) ===
=== Constructing Global Constraints ===
== Adding Global Variables ==[!] << SOLVER # VARS = 5
[[Z3]] ---> Executing SMT Solver prob=76

[WARN][to_mat_file] cannot generate mapped simulink file
[WARN][to_mat_file] cannot emit code
[WARN][to_mat_file] cannot generate mapped simulink file
[WARN][to_mat_file] cannot emit code
===== Mapping Step Finished ======
[multi]  > Added Local Solution
[multi]  > Finding Global Solution
[multi] found # steps: 43
[multi] found # steps: 43
[multi] found # steps: 43
[multi] found # steps: 30
[multi] found # steps: 32
[multi] found # steps: 32
[multi] found # steps: 32
[multi] found # steps: 30
[multi] found # steps: 30
[multi] # partial ids = 9
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1451] [EXPR]vdadd[5].A<V>=(3.01029995664*LacLm)
   remove-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [1913] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   remove-goal [2111] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   remove-goal [1730] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] vgain[0] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[0] cfg-in Z=TetRm
   [comp] vgain[0] cfg-in X=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] itov[2] cfg-in Y=(3.01029995664*clm)
   [comp] itov[2] cfg-in K=clm
   [comp] itov[2] cfg-in X=3.01029995664
   [comp] vdadd[3] cfg-in OUT_0=20
   [comp] vdadd[3] cfg-in OUT=clp
   [comp] vdadd[3] cfg-param BSW=1
   [comp] vdadd[3] cfg-param DSW=1
   [comp] vdadd[3] cfg-in D=0.03010299956
   [comp] vdadd[3] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[3] cfg-in B=0
   [comp] itov[4] cfg-in Y=(3.01029995664*LacLm)
   [comp] itov[4] cfg-in K=LacLm
   [comp] itov[4] cfg-in X=3.01029995664
   [comp] vdadd[5] cfg-in OUT_0=60
   [comp] vdadd[5] cfg-in OUT=LacLp
   [comp] vdadd[5] cfg-param BSW=1
   [comp] vdadd[5] cfg-param DSW=1
   [comp] vdadd[5] cfg-in D=0.03010299956
   [comp] vdadd[5] cfg-in A=(3.01029995664*LacLm)
   [comp] vdadd[5] cfg-in B=0
   [comp] ihill_rep[6] cfg-in REP=TRTetR
   [comp] ihill_rep[6] cfg-in n=2
   [comp] ihill_rep[6] cfg-in S=LacLp
   [comp] ihill_rep[6] cfg-in Vmax=0.4995
   [comp] ihill_rep[6] cfg-in Km=40
   [comp] vdadd[7] cfg-in OUT_0=0.5
   [comp] vdadd[7] cfg-in OUT=LacLm
   [comp] vdadd[7] cfg-param BSW=1
   [comp] vdadd[7] cfg-param DSW=1
   [comp] vdadd[7] cfg-in B=TRLacL
   [comp] vdadd[7] cfg-in D=0.15051499783
   [comp] vdadd[7] cfg-in A=0.0005
   [comp] vdadd[8] cfg-in OUT_0=0.12
   [comp] vdadd[8] cfg-in OUT=TetRm
   [comp] vdadd[8] cfg-param BSW=1
   [comp] vdadd[8] cfg-param DSW=1
   [comp] vdadd[8] cfg-in B=TRTetR
   [comp] vdadd[8] cfg-in D=0.15051499783
   [comp] vdadd[8] cfg-in A=0.0005
   [comp] vdadd[9] cfg-in OUT_0=0.25
   [comp] vdadd[9] cfg-in OUT=clm
   [comp] vdadd[9] cfg-param BSW=1
   [comp] vdadd[9] cfg-param DSW=1
   [comp] vdadd[9] cfg-in B=0.0005
   [comp] vdadd[9] cfg-in D=0.15051499783
   [comp] vdadd[9] cfg-in A=TRclp
   [comp] ihill_rep[10] cfg-in REP=TRclp
   [comp] ihill_rep[10] cfg-in n=2
   [comp] ihill_rep[10] cfg-in S=TetRp
   [comp] ihill_rep[10] cfg-in Vmax=0.4995
   [comp] ihill_rep[10] cfg-in Km=40
   [comp] ihill_rep[11] cfg-in REP=TRLacL
   [comp] ihill_rep[11] cfg-in n=2
   [comp] ihill_rep[11] cfg-in S=clp
   [comp] ihill_rep[11] cfg-in Vmax=0.4995
   [comp] ihill_rep[11] cfg-in Km=40
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[0]
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] conn vgain[0].P->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] add-comp itov[2]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] conn itov[2].Y->vdadd[3].A
   [sln] generate vdadd[3].OUT = clp
   [sln] add-comp vdadd[3]
   [sln] generate itov[4].Y = (3.01029995664*LacLm)
   [sln] add-comp itov[4]
   [sln] generate itov[4].Y = (3.01029995664*LacLm)
   [sln] conn itov[4].Y->vdadd[5].A
   [sln] generate vdadd[5].OUT = LacLp
   [sln] add-comp vdadd[5]
   [sln] generate ihill_rep[6].REP = TRTetR
   [sln] add-comp ihill_rep[6]
   [sln] generate vdadd[7].OUT = LacLm
   [sln] add-comp vdadd[7]
   [sln] generate vdadd[8].OUT = TetRm
   [sln] add-comp vdadd[8]
   [sln] generate vdadd[9].OUT = clm
   [sln] add-comp vdadd[9]
   [sln] generate ihill_rep[10].REP = TRclp
   [sln] add-comp ihill_rep[10]
   [sln] generate ihill_rep[11].REP = TRLacL
   [sln] add-comp ihill_rep[11]
   [sln] route vgain[0].Z = TetRm
   [sln] route vgain[0].X = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route itov[2].K = clm
   [sln] route itov[2].X = 3.01029995664
   [sln] route vdadd[3].OUT_0 = 20
   [sln] route vdadd[3].D = 0.03010299956
   [sln] route vdadd[3].B = 0
   [sln] route itov[4].K = LacLm
   [sln] route itov[4].X = 3.01029995664
   [sln] route vdadd[5].OUT_0 = 60
   [sln] route vdadd[5].D = 0.03010299956
   [sln] route vdadd[5].B = 0
   [sln] route ihill_rep[6].n = 2
   [sln] route ihill_rep[6].S = LacLp
   [sln] route ihill_rep[6].Vmax = 0.4995
   [sln] route ihill_rep[6].Km = 40
   [sln] route vdadd[7].OUT_0 = 0.5
   [sln] route vdadd[7].B = TRLacL
   [sln] route vdadd[7].D = 0.15051499783
   [sln] route vdadd[7].A = 0.0005
   [sln] route vdadd[8].OUT_0 = 0.12
   [sln] route vdadd[8].B = TRTetR
   [sln] route vdadd[8].D = 0.15051499783
   [sln] route vdadd[8].A = 0.0005
   [sln] route vdadd[9].OUT_0 = 0.25
   [sln] route vdadd[9].B = 0.0005
   [sln] route vdadd[9].D = 0.15051499783
   [sln] route vdadd[9].A = TRclp
   [sln] route ihill_rep[10].n = 2
   [sln] route ihill_rep[10].S = TetRp
   [sln] route ihill_rep[10].Vmax = 0.4995
   [sln] route ihill_rep[10].Km = 40
   [sln] route ihill_rep[11].n = 2
   [sln] route ihill_rep[11].S = clp
   [sln] route ihill_rep[11].Vmax = 0.4995
   [sln] route ihill_rep[11].Km = 40
   [comp] make-comp vgain0
   [comp] make-comp vdadd1
   [comp] make-comp itov2
   [comp] make-comp vdadd3
   [comp] make-comp itov4
   [comp] make-comp vdadd5
   [comp] make-comp ihill_rep6
   [comp] make-comp vdadd7
   [comp] make-comp vdadd8
   [comp] make-comp vdadd9
   [comp] make-comp ihill_rep10
   [comp] make-comp ihill_rep11
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 1391 to disabled
   change-goal-status 1392 to disabled
   change-goal-status 1393 to disabled
   change-goal-status 1394 to disabled
   change-goal-status 1396 to disabled
   change-goal-status 1397 to disabled
   change-goal-status 1398 to disabled
   change-goal-status 1399 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 1908 to disabled
   change-goal-status 1909 to disabled
   change-goal-status 1910 to disabled
   change-goal-status 1911 to disabled
   change-goal-status 1912 to disabled
   change-goal-status 1914 to disabled
   change-goal-status 1915 to disabled
   change-goal-status 1916 to disabled
   change-goal-status 2110 to disabled
   change-goal-status 2112 to disabled
   change-goal-status 2113 to disabled
   change-goal-status 2114 to disabled
   change-goal-status 2115 to disabled
   change-goal-status 2116 to disabled
   change-goal-status 2117 to disabled
   change-goal-status 2118 to disabled
   change-goal-status 1724 to disabled
   change-goal-status 1725 to disabled
   change-goal-status 1726 to disabled
   change-goal-status 1727 to disabled
   change-goal-status 1728 to disabled
   change-goal-status 1729 to disabled
   change-goal-status 1731 to disabled
   change-goal-status 1732 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   add-goal [1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1451] [EXPR]vdadd[5].A<V>=(3.01029995664*LacLm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1908] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1909] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1910] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1911] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1912] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1913] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1914] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1915] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1916] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [2110] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [2111] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2112] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [2113] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [2114] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [2115] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2116] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2117] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [2118] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1724] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1725] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1726] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1727] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1728] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1729] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1730] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1731] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1732] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ==== ROUTES =====
[multi] > vgain[0].Z = TetRm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[6].S = LacLp
[multi]    - connecting generates to routes.
[multi] > itov[4].K = LacLm
[multi]    - connecting generates to routes.
[multi] > itov[2].K = clm
[multi]    - connecting generates to routes.
[multi] > ihill_rep[11].S = clp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[10].S = TetRp
[multi]    - connecting generates to routes.
[multi] > vdadd[8].B = TRTetR
[multi]    - connecting generates to routes.
[multi] > vdadd[7].B = TRLacL
[multi]    - connecting generates to routes.
[multi] > vdadd[9].A = TRclp
[multi]    - connecting generates to routes.
[multi] > ihill_rep[6].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[11].n = 2
[multi]    - making an input block.
[multi] > ihill_rep[10].n = 2
[multi]    - making an input block.
[multi] > vdadd[5].OUT_0 = 60
[multi]    - making an input block.
[multi] > vdadd[1].B = 0
[multi]    - making an input block.
[multi] > vdadd[5].B = 0
[multi]    - making an input block.
[multi] > vdadd[3].B = 0
[multi]    - making an input block.
[multi] > vdadd[8].OUT_0 = 0.12
[multi]    - making an input block.
[multi] > vdadd[7].OUT_0 = 0.5
[multi]    - making an input block.
[multi] > vdadd[7].D = 0.15051499783
[multi]    - making an input block.
[multi] > vdadd[9].D = 0.15051499783
[multi]    - making an input block.
[multi] > vdadd[8].D = 0.15051499783
[multi]    - making an input block.
[multi] > ihill_rep[6].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[11].Vmax = 0.4995
[multi]    - making an input block.
[multi] > ihill_rep[10].Vmax = 0.4995
[multi]    - making an input block.
[multi] > vdadd[7].A = 0.0005
[multi]    - making an input block.
[multi] > vdadd[9].B = 0.0005
[multi]    - making an input block.
[multi] > vdadd[8].A = 0.0005
[multi]    - making an input block.
[multi] > vdadd[1].OUT_0 = 40
[multi]    - making an input block.
[multi] > ihill_rep[6].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[11].Km = 40
[multi]    - making an input block.
[multi] > ihill_rep[10].Km = 40
[multi]    - making an input block.
[multi] > vgain[0].X = 3.01029995664
[multi]    - making an input block.
[multi] > itov[4].X = 3.01029995664
[multi]    - making an input block.
[multi] > itov[2].X = 3.01029995664
[multi]    - making an input block.
[multi] > vdadd[9].OUT_0 = 0.25
[multi]    - making an input block.
[multi] > vdadd[3].OUT_0 = 20
[multi]    - making an input block.
[multi] > vdadd[1].D = 0.03010299956
[multi]    - making an input block.
[multi] > vdadd[5].D = 0.03010299956
[multi]    - making an input block.
[multi] > vdadd[3].D = 0.03010299956
[multi]    - making an input block.
[multi] ==== GENERATES =====
[multi] > vdadd[8].OUT = TetRm
[multi]    - making an output block.
[multi] > vdadd[5].OUT = LacLp
[multi]    - making an output block.
[multi] > vdadd[7].OUT = LacLm
[multi]    - making an output block.
[multi] > vdadd[9].OUT = clm
[multi]    - making an output block.
[multi] > vdadd[3].OUT = clp
[multi]    - making an output block.
[multi] > vdadd[1].OUT = TetRp
[multi]    - making an output block.
[multi] > ihill_rep[6].REP = TRTetR
[multi] > ihill_rep[11].REP = TRLacL
[multi] > ihill_rep[10].REP = TRclp
[multi] > itov[2].Y = (3.01029995664*clm)
[multi] > itov[2].Y = (3.01029995664*clm)
[multi] > itov[4].Y = (3.01029995664*LacLm)
[multi] > itov[4].Y = (3.01029995664*LacLm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] > vgain[0].P = (3.01029995664*TetRm)
[multi] --> Number of options 45
[multi] --> Number of nodes 1
[multi] ======= Partial (Root) Steps 315 =======
[multi]    remove-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   remove-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   remove-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [1451] [EXPR]vdadd[5].A<V>=(3.01029995664*LacLm)
   remove-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   remove-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   remove-goal [1913] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   remove-goal [2111] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   remove-goal [1730] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   remove-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   remove-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   [comp] vgain[0] cfg-in P=(3.01029995664*TetRm)
   [comp] vgain[0] cfg-in Z=TetRm
   [comp] vgain[0] cfg-in X=3.01029995664
   [comp] vdadd[1] cfg-in OUT_0=40
   [comp] vdadd[1] cfg-in OUT=TetRp
   [comp] vdadd[1] cfg-param BSW=1
   [comp] vdadd[1] cfg-param DSW=1
   [comp] vdadd[1] cfg-in B=0
   [comp] vdadd[1] cfg-in D=0.03010299956
   [comp] vdadd[1] cfg-in A=(3.01029995664*TetRm)
   [comp] itov[2] cfg-in Y=(3.01029995664*clm)
   [comp] itov[2] cfg-in K=clm
   [comp] itov[2] cfg-in X=3.01029995664
   [comp] vdadd[3] cfg-in OUT_0=20
   [comp] vdadd[3] cfg-in OUT=clp
   [comp] vdadd[3] cfg-param BSW=1
   [comp] vdadd[3] cfg-param DSW=1
   [comp] vdadd[3] cfg-in D=0.03010299956
   [comp] vdadd[3] cfg-in A=(3.01029995664*clm)
   [comp] vdadd[3] cfg-in B=0
   [comp] itov[4] cfg-in Y=(3.01029995664*LacLm)
   [comp] itov[4] cfg-in K=LacLm
   [comp] itov[4] cfg-in X=3.01029995664
   [comp] vdadd[5] cfg-in OUT_0=60
   [comp] vdadd[5] cfg-in OUT=LacLp
   [comp] vdadd[5] cfg-param BSW=1
   [comp] vdadd[5] cfg-param DSW=1
   [comp] vdadd[5] cfg-in D=0.03010299956
   [comp] vdadd[5] cfg-in A=(3.01029995664*LacLm)
   [comp] vdadd[5] cfg-in B=0
   [comp] ihill_rep[6] cfg-in REP=TRTetR
   [comp] ihill_rep[6] cfg-in n=2
   [comp] ihill_rep[6] cfg-in S=LacLp
   [comp] ihill_rep[6] cfg-in Vmax=0.4995
   [comp] ihill_rep[6] cfg-in Km=40
   [comp] vdadd[7] cfg-in OUT_0=0.5
   [comp] vdadd[7] cfg-in OUT=LacLm
   [comp] vdadd[7] cfg-param BSW=1
   [comp] vdadd[7] cfg-param DSW=1
   [comp] vdadd[7] cfg-in B=TRLacL
   [comp] vdadd[7] cfg-in D=0.15051499783
   [comp] vdadd[7] cfg-in A=0.0005
   [comp] vdadd[8] cfg-in OUT_0=0.12
   [comp] vdadd[8] cfg-in OUT=TetRm
   [comp] vdadd[8] cfg-param BSW=1
   [comp] vdadd[8] cfg-param DSW=1
   [comp] vdadd[8] cfg-in B=TRTetR
   [comp] vdadd[8] cfg-in D=0.15051499783
   [comp] vdadd[8] cfg-in A=0.0005
   [comp] vdadd[9] cfg-in OUT_0=0.25
   [comp] vdadd[9] cfg-in OUT=clm
   [comp] vdadd[9] cfg-param BSW=1
   [comp] vdadd[9] cfg-param DSW=1
   [comp] vdadd[9] cfg-in B=0.0005
   [comp] vdadd[9] cfg-in D=0.15051499783
   [comp] vdadd[9] cfg-in A=TRclp
   [comp] ihill_rep[10] cfg-in REP=TRclp
   [comp] ihill_rep[10] cfg-in n=2
   [comp] ihill_rep[10] cfg-in S=TetRp
   [comp] ihill_rep[10] cfg-in Vmax=0.4995
   [comp] ihill_rep[10] cfg-in Km=40
   [comp] ihill_rep[11] cfg-in REP=TRLacL
   [comp] ihill_rep[11] cfg-in n=2
   [comp] ihill_rep[11] cfg-in S=clp
   [comp] ihill_rep[11] cfg-in Vmax=0.4995
   [comp] ihill_rep[11] cfg-in Km=40
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] add-comp vgain[0]
   [sln] generate vgain[0].P = (3.01029995664*TetRm)
   [sln] conn vgain[0].P->vdadd[1].A
   [sln] generate vdadd[1].OUT = TetRp
   [sln] add-comp vdadd[1]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] add-comp itov[2]
   [sln] generate itov[2].Y = (3.01029995664*clm)
   [sln] conn itov[2].Y->vdadd[3].A
   [sln] generate vdadd[3].OUT = clp
   [sln] add-comp vdadd[3]
   [sln] generate itov[4].Y = (3.01029995664*LacLm)
   [sln] add-comp itov[4]
   [sln] generate itov[4].Y = (3.01029995664*LacLm)
   [sln] conn itov[4].Y->vdadd[5].A
   [sln] generate vdadd[5].OUT = LacLp
   [sln] add-comp vdadd[5]
   [sln] generate ihill_rep[6].REP = TRTetR
   [sln] add-comp ihill_rep[6]
   [sln] generate vdadd[7].OUT = LacLm
   [sln] add-comp vdadd[7]
   [sln] generate vdadd[8].OUT = TetRm
   [sln] add-comp vdadd[8]
   [sln] generate vdadd[9].OUT = clm
   [sln] add-comp vdadd[9]
   [sln] generate ihill_rep[10].REP = TRclp
   [sln] add-comp ihill_rep[10]
   [sln] generate ihill_rep[11].REP = TRLacL
   [sln] add-comp ihill_rep[11]
   [sln] route vgain[0].Z = TetRm
   [sln] route vgain[0].X = 3.01029995664
   [sln] route vdadd[1].OUT_0 = 40
   [sln] route vdadd[1].B = 0
   [sln] route vdadd[1].D = 0.03010299956
   [sln] route itov[2].K = clm
   [sln] route itov[2].X = 3.01029995664
   [sln] route vdadd[3].OUT_0 = 20
   [sln] route vdadd[3].D = 0.03010299956
   [sln] route vdadd[3].B = 0
   [sln] route itov[4].K = LacLm
   [sln] route itov[4].X = 3.01029995664
   [sln] route vdadd[5].OUT_0 = 60
   [sln] route vdadd[5].D = 0.03010299956
   [sln] route vdadd[5].B = 0
   [sln] route ihill_rep[6].n = 2
   [sln] route ihill_rep[6].S = LacLp
   [sln] route ihill_rep[6].Vmax = 0.4995
   [sln] route ihill_rep[6].Km = 40
   [sln] route vdadd[7].OUT_0 = 0.5
   [sln] route vdadd[7].B = TRLacL
   [sln] route vdadd[7].D = 0.15051499783
   [sln] route vdadd[7].A = 0.0005
   [sln] route vdadd[8].OUT_0 = 0.12
   [sln] route vdadd[8].B = TRTetR
   [sln] route vdadd[8].D = 0.15051499783
   [sln] route vdadd[8].A = 0.0005
   [sln] route vdadd[9].OUT_0 = 0.25
   [sln] route vdadd[9].B = 0.0005
   [sln] route vdadd[9].D = 0.15051499783
   [sln] route vdadd[9].A = TRclp
   [sln] route ihill_rep[10].n = 2
   [sln] route ihill_rep[10].S = TetRp
   [sln] route ihill_rep[10].Vmax = 0.4995
   [sln] route ihill_rep[10].Km = 40
   [sln] route ihill_rep[11].n = 2
   [sln] route ihill_rep[11].S = clp
   [sln] route ihill_rep[11].Vmax = 0.4995
   [sln] route ihill_rep[11].Km = 40
   [comp] make-comp vgain0
   [comp] make-comp vdadd1
   [comp] make-comp itov2
   [comp] make-comp vdadd3
   [comp] make-comp itov4
   [comp] make-comp vdadd5
   [comp] make-comp ihill_rep6
   [comp] make-comp vdadd7
   [comp] make-comp vdadd8
   [comp] make-comp vdadd9
   [comp] make-comp ihill_rep10
   [comp] make-comp ihill_rep11
   change-goal-status 833 to disabled
   change-goal-status 834 to disabled
   change-goal-status 835 to disabled
   change-goal-status 836 to disabled
   change-goal-status 837 to disabled
   change-goal-status 838 to disabled
   change-goal-status 839 to disabled
   change-goal-status 840 to disabled
   change-goal-status 1094 to disabled
   change-goal-status 1095 to disabled
   change-goal-status 1096 to disabled
   change-goal-status 1097 to disabled
   change-goal-status 1098 to disabled
   change-goal-status 1099 to disabled
   change-goal-status 1100 to disabled
   change-goal-status 1102 to disabled
   change-goal-status 1391 to disabled
   change-goal-status 1392 to disabled
   change-goal-status 1393 to disabled
   change-goal-status 1394 to disabled
   change-goal-status 1396 to disabled
   change-goal-status 1397 to disabled
   change-goal-status 1398 to disabled
   change-goal-status 1399 to disabled
   change-goal-status 554 to disabled
   change-goal-status 555 to disabled
   change-goal-status 556 to disabled
   change-goal-status 557 to disabled
   change-goal-status 558 to disabled
   change-goal-status 559 to disabled
   change-goal-status 560 to disabled
   change-goal-status 561 to disabled
   change-goal-status 1908 to disabled
   change-goal-status 1909 to disabled
   change-goal-status 1910 to disabled
   change-goal-status 1911 to disabled
   change-goal-status 1912 to disabled
   change-goal-status 1914 to disabled
   change-goal-status 1915 to disabled
   change-goal-status 1916 to disabled
   change-goal-status 2110 to disabled
   change-goal-status 2112 to disabled
   change-goal-status 2113 to disabled
   change-goal-status 2114 to disabled
   change-goal-status 2115 to disabled
   change-goal-status 2116 to disabled
   change-goal-status 2117 to disabled
   change-goal-status 2118 to disabled
   change-goal-status 1724 to disabled
   change-goal-status 1725 to disabled
   change-goal-status 1726 to disabled
   change-goal-status 1727 to disabled
   change-goal-status 1728 to disabled
   change-goal-status 1729 to disabled
   change-goal-status 1731 to disabled
   change-goal-status 1732 to disabled
   change-goal-status 0 to disabled
   change-goal-status 1 to disabled
   change-goal-status 2 to disabled
   change-goal-status 4 to disabled
   change-goal-status 5 to disabled
   change-goal-status 6 to disabled
   change-goal-status 7 to disabled
   change-goal-status 8 to disabled
   change-goal-status 276 to disabled
   change-goal-status 277 to disabled
   change-goal-status 279 to disabled
   change-goal-status 280 to disabled
   change-goal-status 281 to disabled
   change-goal-status 282 to disabled
   change-goal-status 283 to disabled
   change-goal-status 284 to disabled
   add-goal [833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [841] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [893] [EXPR]vdadd[1].A<V>=(3.01029995664*TetRm)
   add-goal [1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1101] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1154] [EXPR]vdadd[3].A<V>=(3.01029995664*clm)
   add-goal [1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1395] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1451] [EXPR]vdadd[5].A<V>=(3.01029995664*LacLm)
   add-goal [553] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1908] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1909] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1910] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1911] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1912] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1913] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1914] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1915] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1916] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [2110] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [2111] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2112] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [2113] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [2114] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [2115] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2116] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2117] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [2118] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1724] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1725] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1726] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [1727] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [1728] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1729] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1730] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [1731] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [1732] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [3] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
   add-goal [277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [278] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
   add-goal [279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
   add-goal [280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
   add-goal [283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
   add-goal [284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}

[multi] ============================
[multi] ======= Glbl (Node) Steps =======
[multi]      [comp] input.V[0] cfg-in X=2
     [comp] input.V[0] cfg-out O=2
     [comp] input.V[1] cfg-in X=2
     [comp] input.V[1] cfg-out O=2
     [comp] input.V[2] cfg-in X=2
     [comp] input.V[2] cfg-out O=2
     [comp] input.V[3] cfg-in X=60
     [comp] input.V[3] cfg-out O=60
     [comp] input.V[4] cfg-in X=0
     [comp] input.V[4] cfg-out O=0
     [comp] input.V[5] cfg-in X=0
     [comp] input.V[5] cfg-out O=0
     [comp] input.V[6] cfg-in X=0
     [comp] input.V[6] cfg-out O=0
     [comp] input.V[7] cfg-in X=0.12
     [comp] input.V[7] cfg-out O=0.12
     [comp] input.V[8] cfg-in X=0.5
     [comp] input.V[8] cfg-out O=0.5
     [comp] input.I[0] cfg-in X=0.15051499783
     [comp] input.I[0] cfg-out O=0.15051499783
     [comp] input.I[1] cfg-in X=0.15051499783
     [comp] input.I[1] cfg-out O=0.15051499783
     [comp] input.I[2] cfg-in X=0.15051499783
     [comp] input.I[2] cfg-out O=0.15051499783
     [comp] input.I[3] cfg-in X=0.4995
     [comp] input.I[3] cfg-out O=0.4995
     [comp] input.I[4] cfg-in X=0.4995
     [comp] input.I[4] cfg-out O=0.4995
     [comp] input.I[5] cfg-in X=0.4995
     [comp] input.I[5] cfg-out O=0.4995
     [comp] input.V[9] cfg-in X=0.0005
     [comp] input.V[9] cfg-out O=0.0005
     [comp] input.V[10] cfg-in X=0.0005
     [comp] input.V[10] cfg-out O=0.0005
     [comp] input.V[11] cfg-in X=0.0005
     [comp] input.V[11] cfg-out O=0.0005
     [comp] input.V[12] cfg-in X=40
     [comp] input.V[12] cfg-out O=40
     [comp] input.I[6] cfg-in X=40
     [comp] input.I[6] cfg-out O=40
     [comp] input.I[7] cfg-in X=40
     [comp] input.I[7] cfg-out O=40
     [comp] input.I[8] cfg-in X=40
     [comp] input.I[8] cfg-out O=40
     [comp] input.V[13] cfg-in X=3.01029995664
     [comp] input.V[13] cfg-out O=3.01029995664
     [comp] input.I[9] cfg-in X=3.01029995664
     [comp] input.I[9] cfg-out O=3.01029995664
     [comp] input.I[10] cfg-in X=3.01029995664
     [comp] input.I[10] cfg-out O=3.01029995664
     [comp] input.V[14] cfg-in X=0.25
     [comp] input.V[14] cfg-out O=0.25
     [comp] input.V[15] cfg-in X=20
     [comp] input.V[15] cfg-out O=20
     [comp] input.I[11] cfg-in X=0.03010299956
     [comp] input.I[11] cfg-out O=0.03010299956
     [comp] input.I[12] cfg-in X=0.03010299956
     [comp] input.I[12] cfg-out O=0.03010299956
     [comp] input.I[13] cfg-in X=0.03010299956
     [comp] input.I[13] cfg-out O=0.03010299956
     [comp] output.V[0] cfg-in X=TetRm
     [comp] output.V[0] cfg-out O=TetRm
     [comp] output.V[1] cfg-in X=LacLp
     [comp] output.V[1] cfg-out O=LacLp
     [comp] output.V[2] cfg-in X=LacLm
     [comp] output.V[2] cfg-out O=LacLm
     [comp] output.V[3] cfg-in X=clm
     [comp] output.V[3] cfg-out O=clm
     [comp] output.V[4] cfg-in X=clp
     [comp] output.V[4] cfg-out O=clp
     [comp] output.V[5] cfg-in X=TetRp
     [comp] output.V[5] cfg-out O=TetRp
     [sln] rm-route vgain[0].Z = TetRm
     [sln] rm-route ihill_rep[6].S = LacLp
     [sln] rm-route itov[4].K = LacLm
     [sln] rm-route itov[2].K = clm
     [sln] rm-route ihill_rep[11].S = clp
     [sln] rm-route ihill_rep[10].S = TetRp
     [sln] rm-route vdadd[8].B = TRTetR
     [sln] rm-route vdadd[7].B = TRLacL
     [sln] rm-route vdadd[9].A = TRclp
     [sln] rm-route ihill_rep[6].n = 2
     [sln] add-comp input.V[0]
     [sln] generate input.V[0].O = 2
     [sln] rm-route ihill_rep[11].n = 2
     [sln] add-comp input.V[1]
     [sln] generate input.V[1].O = 2
     [sln] rm-route ihill_rep[10].n = 2
     [sln] add-comp input.V[2]
     [sln] generate input.V[2].O = 2
     [sln] rm-route vdadd[5].OUT_0 = 60
     [sln] add-comp input.V[3]
     [sln] generate input.V[3].O = 60
     [sln] rm-route vdadd[1].B = 0
     [sln] add-comp input.V[4]
     [sln] generate input.V[4].O = 0
     [sln] rm-route vdadd[5].B = 0
     [sln] add-comp input.V[5]
     [sln] generate input.V[5].O = 0
     [sln] rm-route vdadd[3].B = 0
     [sln] add-comp input.V[6]
     [sln] generate input.V[6].O = 0
     [sln] rm-route vdadd[8].OUT_0 = 0.12
     [sln] add-comp input.V[7]
     [sln] generate input.V[7].O = 0.12
     [sln] rm-route vdadd[7].OUT_0 = 0.5
     [sln] add-comp input.V[8]
     [sln] generate input.V[8].O = 0.5
     [sln] rm-route vdadd[7].D = 0.15051499783
     [sln] add-comp input.I[0]
     [sln] generate input.I[0].O = 0.15051499783
     [sln] rm-route vdadd[9].D = 0.15051499783
     [sln] add-comp input.I[1]
     [sln] generate input.I[1].O = 0.15051499783
     [sln] rm-route vdadd[8].D = 0.15051499783
     [sln] add-comp input.I[2]
     [sln] generate input.I[2].O = 0.15051499783
     [sln] rm-route ihill_rep[6].Vmax = 0.4995
     [sln] add-comp input.I[3]
     [sln] generate input.I[3].O = 0.4995
     [sln] rm-route ihill_rep[11].Vmax = 0.4995
     [sln] add-comp input.I[4]
     [sln] generate input.I[4].O = 0.4995
     [sln] rm-route ihill_rep[10].Vmax = 0.4995
     [sln] add-comp input.I[5]
     [sln] generate input.I[5].O = 0.4995
     [sln] rm-route vdadd[7].A = 0.0005
     [sln] add-comp input.V[9]
     [sln] generate input.V[9].O = 0.0005
     [sln] rm-route vdadd[9].B = 0.0005
     [sln] add-comp input.V[10]
     [sln] generate input.V[10].O = 0.0005
     [sln] rm-route vdadd[8].A = 0.0005
     [sln] add-comp input.V[11]
     [sln] generate input.V[11].O = 0.0005
     [sln] rm-route vdadd[1].OUT_0 = 40
     [sln] add-comp input.V[12]
     [sln] generate input.V[12].O = 40
     [sln] rm-route ihill_rep[6].Km = 40
     [sln] add-comp input.I[6]
     [sln] generate input.I[6].O = 40
     [sln] rm-route ihill_rep[11].Km = 40
     [sln] add-comp input.I[7]
     [sln] generate input.I[7].O = 40
     [sln] rm-route ihill_rep[10].Km = 40
     [sln] add-comp input.I[8]
     [sln] generate input.I[8].O = 40
     [sln] rm-route vgain[0].X = 3.01029995664
     [sln] add-comp input.V[13]
     [sln] generate input.V[13].O = 3.01029995664
     [sln] rm-route itov[4].X = 3.01029995664
     [sln] add-comp input.I[9]
     [sln] generate input.I[9].O = 3.01029995664
     [sln] rm-route itov[2].X = 3.01029995664
     [sln] add-comp input.I[10]
     [sln] generate input.I[10].O = 3.01029995664
     [sln] rm-route vdadd[9].OUT_0 = 0.25
     [sln] add-comp input.V[14]
     [sln] generate input.V[14].O = 0.25
     [sln] rm-route vdadd[3].OUT_0 = 20
     [sln] add-comp input.V[15]
     [sln] generate input.V[15].O = 20
     [sln] rm-route vdadd[1].D = 0.03010299956
     [sln] add-comp input.I[11]
     [sln] generate input.I[11].O = 0.03010299956
     [sln] rm-route vdadd[5].D = 0.03010299956
     [sln] add-comp input.I[12]
     [sln] generate input.I[12].O = 0.03010299956
     [sln] rm-route vdadd[3].D = 0.03010299956
     [sln] add-comp input.I[13]
     [sln] generate input.I[13].O = 0.03010299956
     [sln] add-comp output.V[0]
     [sln] generate output.V[0].O = TetRm
     [sln] add-comp output.V[1]
     [sln] generate output.V[1].O = LacLp
     [sln] add-comp output.V[2]
     [sln] generate output.V[2].O = LacLm
     [sln] add-comp output.V[3]
     [sln] generate output.V[3].O = clm
     [sln] add-comp output.V[4]
     [sln] generate output.V[4].O = clp
     [sln] add-comp output.V[5]
     [sln] generate output.V[5].O = TetRp
     [sln] route input.V[0].X = 2
     [sln] route input.V[1].X = 2
     [sln] route input.V[2].X = 2
     [sln] route input.V[3].X = 60
     [sln] route input.V[4].X = 0
     [sln] route input.V[5].X = 0
     [sln] route input.V[6].X = 0
     [sln] route input.V[7].X = 0.12
     [sln] route input.V[8].X = 0.5
     [sln] route input.I[0].X = 0.15051499783
     [sln] route input.I[1].X = 0.15051499783
     [sln] route input.I[2].X = 0.15051499783
     [sln] route input.I[3].X = 0.4995
     [sln] route input.I[4].X = 0.4995
     [sln] route input.I[5].X = 0.4995
     [sln] route input.V[9].X = 0.0005
     [sln] route input.V[10].X = 0.0005
     [sln] route input.V[11].X = 0.0005
     [sln] route input.V[12].X = 40
     [sln] route input.I[6].X = 40
     [sln] route input.I[7].X = 40
     [sln] route input.I[8].X = 40
     [sln] route input.V[13].X = 3.01029995664
     [sln] route input.I[9].X = 3.01029995664
     [sln] route input.I[10].X = 3.01029995664
     [sln] route input.V[14].X = 0.25
     [sln] route input.V[15].X = 20
     [sln] route input.I[11].X = 0.03010299956
     [sln] route input.I[12].X = 0.03010299956
     [sln] route input.I[13].X = 0.03010299956
     [comp] make-comp input.V0
     [comp] make-comp input.V1
     [comp] make-comp input.V2
     [comp] make-comp input.V3
     [comp] make-comp input.V4
     [comp] make-comp input.V5
     [comp] make-comp input.V6
     [comp] make-comp input.V7
     [comp] make-comp input.V8
     [comp] make-comp input.I0
     [comp] make-comp input.I1
     [comp] make-comp input.I2
     [comp] make-comp input.I3
     [comp] make-comp input.I4
     [comp] make-comp input.I5
     [comp] make-comp input.V9
     [comp] make-comp input.V10
     [comp] make-comp input.V11
     [comp] make-comp input.V12
     [comp] make-comp input.I6
     [comp] make-comp input.I7
     [comp] make-comp input.I8
     [comp] make-comp input.V13
     [comp] make-comp input.I9
     [comp] make-comp input.I10
     [comp] make-comp input.V14
     [comp] make-comp input.V15
     [comp] make-comp input.I11
     [comp] make-comp input.I12
     [comp] make-comp input.I13
     [comp] make-comp output.V0
     [comp] make-comp output.V1
     [comp] make-comp output.V2
     [comp] make-comp output.V3
     [comp] make-comp output.V4
     [comp] make-comp output.V5
     add-goal [2285] [CONN] vdadd[8].OUT => vgain[0].Z (TetRm)
     add-goal [2286] [CONN] vdadd[5].OUT => ihill_rep[6].S (LacLp)
     add-goal [2287] [CONN] vdadd[7].OUT => itov[4].K (LacLm)
     add-goal [2288] [CONN] vdadd[9].OUT => itov[2].K (clm)
     add-goal [2289] [CONN] vdadd[3].OUT => ihill_rep[11].S (clp)
     add-goal [2290] [CONN] vdadd[1].OUT => ihill_rep[10].S (TetRp)
     add-goal [2291] [CONN] ihill_rep[6].REP => vdadd[8].B (TRTetR)
     add-goal [2292] [CONN] ihill_rep[11].REP => vdadd[7].B (TRLacL)
     add-goal [2293] [CONN] ihill_rep[10].REP => vdadd[9].A (TRclp)
     add-goal [2294] [CONN] input.V[0].O => ihill_rep[6].n (2)
     add-goal [2295] [CONN] input.V[1].O => ihill_rep[11].n (2)
     add-goal [2296] [CONN] input.V[2].O => ihill_rep[10].n (2)
     add-goal [2297] [CONN] input.V[3].O => vdadd[5].OUT_0 (60)
     add-goal [2298] [CONN] input.V[4].O => vdadd[1].B (0)
     add-goal [2299] [CONN] input.V[5].O => vdadd[5].B (0)
     add-goal [2300] [CONN] input.V[6].O => vdadd[3].B (0)
     add-goal [2301] [CONN] input.V[7].O => vdadd[8].OUT_0 (0.12)
     add-goal [2302] [CONN] input.V[8].O => vdadd[7].OUT_0 (0.5)
     add-goal [2303] [CONN] input.I[0].O => vdadd[7].D (0.15051499783)
     add-goal [2304] [CONN] input.I[1].O => vdadd[9].D (0.15051499783)
     add-goal [2305] [CONN] input.I[2].O => vdadd[8].D (0.15051499783)
     add-goal [2306] [CONN] input.I[3].O => ihill_rep[6].Vmax (0.4995)
     add-goal [2307] [CONN] input.I[4].O => ihill_rep[11].Vmax (0.4995)
     add-goal [2308] [CONN] input.I[5].O => ihill_rep[10].Vmax (0.4995)
     add-goal [2309] [CONN] input.V[9].O => vdadd[7].A (0.0005)
     add-goal [2310] [CONN] input.V[10].O => vdadd[9].B (0.0005)
     add-goal [2311] [CONN] input.V[11].O => vdadd[8].A (0.0005)
     add-goal [2312] [CONN] input.V[12].O => vdadd[1].OUT_0 (40)
     add-goal [2313] [CONN] input.I[6].O => ihill_rep[6].Km (40)
     add-goal [2314] [CONN] input.I[7].O => ihill_rep[11].Km (40)
     add-goal [2315] [CONN] input.I[8].O => ihill_rep[10].Km (40)
     add-goal [2316] [CONN] input.V[13].O => vgain[0].X (3.01029995664)
     add-goal [2317] [CONN] input.I[9].O => itov[4].X (3.01029995664)
     add-goal [2318] [CONN] input.I[10].O => itov[2].X (3.01029995664)
     add-goal [2319] [CONN] input.V[14].O => vdadd[9].OUT_0 (0.25)
     add-goal [2320] [CONN] input.V[15].O => vdadd[3].OUT_0 (20)
     add-goal [2321] [CONN] input.I[11].O => vdadd[1].D (0.03010299956)
     add-goal [2322] [CONN] input.I[12].O => vdadd[5].D (0.03010299956)
     add-goal [2323] [CONN] input.I[13].O => vdadd[3].D (0.03010299956)
     add-goal [2324] [CONN] vdadd[8].OUT => output.V[0].X (TetRm)
     add-goal [2325] [CONN] vdadd[5].OUT => output.V[1].X (LacLp)
     add-goal [2326] [CONN] vdadd[7].OUT => output.V[2].X (LacLm)
     add-goal [2327] [CONN] vdadd[9].OUT => output.V[3].X (clm)
     add-goal [2328] [CONN] vdadd[3].OUT => output.V[4].X (clp)
     add-goal [2329] [CONN] vdadd[1].OUT => output.V[5].X (TetRp)

[multi] ============================
[eqn] find # solutions: 1
[eqn] [search-tree] starting
==== Goals ===
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2115] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2112] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1732] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1915] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2118] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1908] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1909] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1910] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[2114] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1726] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1911] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1729] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2116] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1916] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1727] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[2117] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1914] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1912] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2113] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1725] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2110] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1728] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1731] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1724] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> CurrentGoal: (none)
[eqn] found 0 / 1
==== Goals ===
[2319] [CONN] input.V[14].O => vdadd[9].OUT_0 (0.25)
[1095] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2296] [CONN] input.V[2].O => ihill_rep[10].n (2)
[561] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[555] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2115] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2112] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2286] [CONN] vdadd[5].OUT => ihill_rep[6].S (LacLp)
[2305] [CONN] input.I[2].O => vdadd[8].D (0.15051499783)
[7] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2294] [CONN] input.V[0].O => ihill_rep[6].n (2)
[2298] [CONN] input.V[4].O => vdadd[1].B (0)
[279] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[2329] [CONN] vdadd[1].OUT => output.V[5].X (TetRp)
[1732] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[0] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[2316] [CONN] input.V[13].O => vgain[0].X (3.01029995664)
[2310] [CONN] input.V[10].O => vdadd[9].B (0.0005)
[2311] [CONN] input.V[11].O => vdadd[8].A (0.0005)
[2325] [CONN] vdadd[5].OUT => output.V[1].X (LacLp)
[1915] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2297] [CONN] input.V[3].O => vdadd[5].OUT_0 (60)
[2328] [CONN] vdadd[3].OUT => output.V[4].X (clp)
[839] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2118] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[283] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1393] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1398] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1908] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1909] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1910] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[276] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[2295] [CONN] input.V[1].O => ihill_rep[11].n (2)
[2302] [CONN] input.V[8].O => vdadd[7].OUT_0 (0.5)
[2326] [CONN] vdadd[7].OUT => output.V[2].X (LacLm)
[1391] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[2114] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[5] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[282] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[837] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1102] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[280] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2304] [CONN] input.I[1].O => vdadd[9].D (0.15051499783)
[1096] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2307] [CONN] input.I[4].O => ihill_rep[11].Vmax (0.4995)
[556] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1726] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[1396] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[835] [MATH]local TRLacL :> TRLacL=(a_tr*((KMp^n)/((KMp^n)+(clp^n)))) / std(TRLacL) = none 0 {[TRLacL]=[0.491815384615,0.4995]}
[2320] [CONN] input.V[15].O => vdadd[3].OUT_0 (20)
[1100] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[560] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1911] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1729] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[281] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2291] [CONN] ihill_rep[6].REP => vdadd[8].B (TRTetR)
[1097] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[558] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2312] [CONN] input.V[12].O => vdadd[1].OUT_0 (40)
[2321] [CONN] input.I[11].O => vdadd[1].D (0.03010299956)
[8] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[840] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2299] [CONN] input.V[5].O => vdadd[5].B (0)
[2323] [CONN] input.I[13].O => vdadd[3].D (0.03010299956)
[2116] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[554] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1094] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[1916] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1727] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[833] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[2292] [CONN] ihill_rep[11].REP => vdadd[7].B (TRLacL)
[2308] [CONN] input.I[5].O => ihill_rep[10].Vmax (0.4995)
[2117] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2285] [CONN] vdadd[8].OUT => vgain[0].Z (TetRm)
[2300] [CONN] input.V[6].O => vdadd[3].B (0)
[2306] [CONN] input.I[3].O => ihill_rep[6].Vmax (0.4995)
[2289] [CONN] vdadd[3].OUT => ihill_rep[11].S (clp)
[1914] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2315] [CONN] input.I[8].O => ihill_rep[10].Km (40)
[2324] [CONN] vdadd[8].OUT => output.V[0].X (TetRm)
[1912] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[6] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[277] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2290] [CONN] vdadd[1].OUT => ihill_rep[10].S (TetRp)
[1397] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[559] [MATH]output clm :> ddt clm=((a0_tr+TRclp)-(kd_mrna*clm)) ic=0.25 / std(ddt clm) = none 0 {[ddt clm]=[-4.02313455028,0.5] / [clm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2318] [CONN] input.I[10].O => itov[2].X (3.01029995664)
[2287] [CONN] vdadd[7].OUT => itov[4].K (LacLm)
[2303] [CONN] input.I[0].O => vdadd[7].D (0.15051499783)
[2313] [CONN] input.I[6].O => ihill_rep[6].Km (40)
[834] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1098] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2113] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[2322] [CONN] input.I[12].O => vdadd[5].D (0.03010299956)
[1399] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[284] [MATH]output TetRp :> ddt TetRp=((k_tl*TetRm)-(kd_prot*TetRp)) ic=40 / std(ddt TetRp) = none 0 {[ddt TetRp]=[-0.1505149978,90.3089986992] / [TetRp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[838] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1725] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[2317] [CONN] input.I[9].O => itov[4].X (3.01029995664)
[2110] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[4] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2314] [CONN] input.I[7].O => ihill_rep[11].Km (40)
[1099] [MATH]output LacLm :> ddt LacLm=((a0_tr+TRLacL)-(kd_mrna*LacLm)) ic=0.5 / std(ddt LacLm) = none 0 {[ddt LacLm]=[-4.02313455028,0.5] / [LacLm]=[0.,30.] / max-sample = <none>min-speed = <none>}
[1728] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2288] [CONN] vdadd[9].OUT => itov[2].K (clm)
[557] [MATH]output LacLp :> ddt LacLp=((k_tl*LacLm)-(kd_prot*LacLp)) ic=60 / std(ddt LacLp) = none 0 {[ddt LacLp]=[-0.1505149978,90.3089986992] / [LacLp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[2309] [CONN] input.V[9].O => vdadd[7].A (0.0005)
[2293] [CONN] ihill_rep[10].REP => vdadd[9].A (TRclp)
[1394] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1731] [MATH]output clp :> ddt clp=((k_tl*clm)-(kd_prot*clp)) ic=20 / std(ddt clp) = none 0 {[ddt clp]=[-0.1505149978,90.3089986992] / [clp]=[0.,5.] / max-sample = <none>min-speed = <none>}
[1724] [MATH]local TRTetR :> TRTetR=(a_tr*((KMp^n)/((KMp^n)+(LacLp^n)))) / std(TRTetR) = none 0 {[TRTetR]=[0.491815384615,0.4995]}
[2301] [CONN] input.V[7].O => vdadd[8].OUT_0 (0.12)
[2327] [CONN] vdadd[9].OUT => output.V[3].X (clm)
[836] [MATH]local TRclp :> TRclp=(a_tr*((KMp^n)/((KMp^n)+(TetRp^n)))) / std(TRclp) = none 0 {[TRclp]=[0.491815384615,0.4995]}
[1392] [MATH]output TetRm :> ddt TetRm=((a0_tr+TRTetR)-(kd_mrna*TetRm)) ic=0.12 / std(ddt TetRm) = none 0 {[ddt TetRm]=[-4.02313455028,0.5] / [TetRm]=[0.,30.] / max-sample = <none>min-speed = <none>}

============
>> Current Goal: [2327] [CONN] vdadd[9].OUT => output.V[3].X (clm)
[eqn] >> NEVERMIND! I found some trivial connections.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>ihill_rep.REP->vdadd.A
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.A
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->itov.K
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->itov.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->itov.K
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->itov.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Km
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->vgain.Z
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>ihill_rep.REP->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>ihill_rep.REP->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->ihill_rep.Vmax
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.A
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vgain.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->output.V.X
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.B
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.I.O->vdadd.D
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>vdadd.OUT->ihill_rep.S
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->ihill_rep.n
[eqn] connection is trivial.
[slvrsearch] > weight--: <conn-ports-goal>input.V.O->vdadd.OUT_0
[eqn] connection is trivial.
[eqn] -> [valid?] testing node 3
[eqn] [test-node-validity] found a valid solution
[eqn] [mark-if-solution] testing if solution.
[rslvr] == Generated Constraints

[rslvr] == Created Z3 Instance

[[Z3]] ---> Executing SMT Solver prob=77

[eqn] <<< SAT => VALID >>
[eqn] [mark-if-solution] found concrete hardware. marking as solution.
[eqn] [mark-if-solution] -> marked as solution.
[eqn] [TERMINATE] found 0 / 1
[eqn] [TERMINATE] could not find another node
[multi]   >> Found # Global Solutions: 1/1
[multi] => Global Solution: LacLm~35LacLp~117TRLacL~83TRTetR~83TRclp~83TetRm~35TetRp~51clm~40clp~117 :: 3
[multi] Number of Solutions: 2
[multi] => Global Solution: LacLm~35LacLp~117TRLacL~83TRTetR~83TRclp~83TetRm~37TetRp~51clm~40clp~117 :: 3
[multi] => Global Solution: LacLm~35LacLp~117TRLacL~83TRTetR~83TRclp~83TetRm~40TetRp~51clm~40clp~117 :: 3
[multi] >>>NEW SOLUTION!<<<
[multi] => Global Solution: LacLm~35LacLp~117TRLacL~83TRTetR~83TRclp~83TetRm~35TetRp~51clm~40clp~117 :: 3
[[Z3]] ---> Executing SMT Solver prob=78

[rslvr] z32cstr.wire: vdadd[1].A
[rslvr] z32cstr.wire: input.I[6].O
[rslvr] z32cstr.wire: input.I[12].O
[rslvr] z32cstr.wire: input.V[12].O
[rslvr] z32cstr.wire: vdadd[8].D
[rslvr] z32cstr.wire: input.I[2].O
[rslvr] z32cstr.wire: output.V[0].X
[rslvr] z32cstr.wire: vdadd[7].OUT_0
[rslvr] z32cstr.wire: input.I[8].O
[rslvr] z32cstr.wire: vdadd[8].B
[rslvr] z32cstr.wire: output.V[3].X
[rslvr] z32cstr.wire: vdadd[8].A
[rslvr] z32cstr.wire: ihill_rep[11].n
[rslvr] z32cstr.wire: ihill_rep[11].S
[rslvr] z32cstr.wire: input.V[14].O
[rslvr] z32cstr.wire: input.I[1].O
[rslvr] z32cstr.wire: vdadd[9].B
[rslvr] z32cstr.wire: itov[2].X
[rslvr] z32cstr.wire: output.V[1].X
[rslvr] z32cstr.wire: vdadd[3].B
[rslvr] z32cstr.wire: input.I[11].O
[rslvr] z32cstr.wire: output.V[2].X
[rslvr] z32cstr.wire: vdadd[7].D
[rslvr] z32cstr.wire: vdadd[3].D
[rslvr] z32cstr.wire: itov[4].K
[rslvr] z32cstr.wire: vdadd[1].OUT_0
[rslvr] z32cstr.wire: ihill_rep[10].REP
[rslvr] z32cstr.wire: input.V[4].O
[rslvr] z32cstr.wire: input.I[9].O
[rslvr] z32cstr.wire: vdadd[5].OUT
[rslvr] z32cstr.wire: input.V[6].O
[rslvr] z32cstr.wire: vdadd[7].OUT
[rslvr] z32cstr.wire: vdadd[3].A
[rslvr] z32cstr.wire: vdadd[8].OUT
[rslvr] z32cstr.wire: itov[4].X
[rslvr] z32cstr.wire: input.V[11].O
[rslvr] z32cstr.wire: input.V[2].O
[rslvr] z32cstr.wire: vdadd[9].OUT
[rslvr] z32cstr.wire: itov[2].Y
[rslvr] z32cstr.wire: input.V[10].O
[rslvr] z32cstr.wire: vdadd[9].D
[rslvr] z32cstr.wire: vgain[0].X
[rslvr] z32cstr.wire: vdadd[8].OUT_0
[rslvr] z32cstr.wire: input.V[9].O
[rslvr] z32cstr.wire: vdadd[1].B
[rslvr] z32cstr.wire: ihill_rep[11].Km
[rslvr] z32cstr.wire: input.I[10].O
[rslvr] z32cstr.wire: input.I[4].O
[rslvr] z32cstr.wire: output.V[4].X
[rslvr] z32cstr.wire: ihill_rep[10].S
[rslvr] z32cstr.wire: input.I[13].O
[rslvr] z32cstr.wire: output.V[5].X
[rslvr] z32cstr.wire: input.V[1].O
[rslvr] z32cstr.wire: input.V[8].O
[rslvr] z32cstr.wire: vdadd[3].OUT
[rslvr] z32cstr.wire: vdadd[9].OUT_0
[rslvr] z32cstr.wire: input.V[7].O
[rslvr] z32cstr.wire: vdadd[5].D
[rslvr] z32cstr.wire: itov[4].Y
[rslvr] z32cstr.wire: input.V[15].O
[rslvr] z32cstr.wire: input.I[7].O
[rslvr] z32cstr.wire: input.V[13].O
[rslvr] z32cstr.wire: vdadd[3].OUT_0
[rslvr] z32cstr.wire: vdadd[9].A
[rslvr] z32cstr.wire: vdadd[1].D
[rslvr] z32cstr.wire: ihill_rep[11].Vmax
[rslvr] z32cstr.wire: input.V[0].O
[rslvr] z32cstr.wire: ihill_rep[10].Vmax
[rslvr] z32cstr.wire: ihill_rep[6].n
[rslvr] z32cstr.wire: ihill_rep[6].S
[rslvr] z32cstr.wire: ihill_rep[11].REP
[rslvr] z32cstr.wire: vdadd[1].OUT
[rslvr] z32cstr.wire: vdadd[7].B
[rslvr] z32cstr.wire: input.I[0].O
[rslvr] z32cstr.wire: input.I[3].O
[rslvr] z32cstr.wire: vdadd[5].OUT_0
[rslvr] z32cstr.wire: vdadd[7].A
[rslvr] z32cstr.wire: ihill_rep[10].Km
[rslvr] z32cstr.wire: vgain[0].P
[rslvr] z32cstr.wire: itov[2].K
[rslvr] z32cstr.wire: ihill_rep[10].n
[rslvr] z32cstr.wire: ihill_rep[6].Vmax
[rslvr] z32cstr.wire: vdadd[5].A
[rslvr] z32cstr.wire: input.V[5].O
[rslvr] z32cstr.wire: input.I[5].O
[rslvr] z32cstr.wire: ihill_rep[6].Km
[rslvr] z32cstr.wire: vdadd[5].B
[rslvr] z32cstr.wire: ihill_rep[6].REP
[rslvr] z32cstr.wire: input.V[3].O
[rslvr] z32cstr.wire: vgain[0].Z
[dbg] === Emitting Library ===
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
===> Emitting Simulation to ckt_repri_2_sdeIdeal.m
[dbg] === Emitting Library ===
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
===> Emitting Simulation to ckt_repri_2_odeIdeal.m
[dbg] === Emitting Library ===
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
===> Emitting Simulation to ckt_repri_2_sdeCirc.m
[dbg] === Emitting Library ===
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
[WARN][iter_used_comps] adding assignment for BSW
[WARN][iter_used_comps] adding assignment for DSW
===> Emitting Simulation to ckt_repri_2_odeCirc.m
===== Solution Found ======
[[Z3]] ---> Executing SMT Solver prob=79

[rslvr] z32cstr.wire: vdadd[1].A
[rslvr] z32cstr.wire: input.I[6].O
[rslvr] z32cstr.wire: input.I[12].O
[rslvr] z32cstr.wire: input.V[12].O
[rslvr] z32cstr.wire: vdadd[8].D
[rslvr] z32cstr.wire: input.I[2].O
[rslvr] z32cstr.wire: output.V[0].X
[rslvr] z32cstr.wire: vdadd[7].OUT_0
[rslvr] z32cstr.wire: input.I[8].O
[rslvr] z32cstr.wire: vdadd[8].B
[rslvr] z32cstr.wire: output.V[3].X
[rslvr] z32cstr.wire: vdadd[8].A
[rslvr] z32cstr.wire: ihill_rep[11].n
[rslvr] z32cstr.wire: ihill_rep[11].S
[rslvr] z32cstr.wire: input.V[14].O
[rslvr] z32cstr.wire: input.I[1].O
[rslvr] z32cstr.wire: vdadd[9].B
[rslvr] z32cstr.wire: itov[2].X
[rslvr] z32cstr.wire: output.V[1].X
[rslvr] z32cstr.wire: vdadd[3].B
[rslvr] z32cstr.wire: input.I[11].O
[rslvr] z32cstr.wire: output.V[2].X
[rslvr] z32cstr.wire: vdadd[7].D
[rslvr] z32cstr.wire: vdadd[3].D
[rslvr] z32cstr.wire: itov[4].K
[rslvr] z32cstr.wire: vdadd[1].OUT_0
[rslvr] z32cstr.wire: ihill_rep[10].REP
[rslvr] z32cstr.wire: input.V[4].O
[rslvr] z32cstr.wire: input.I[9].O
[rslvr] z32cstr.wire: vdadd[5].OUT
[rslvr] z32cstr.wire: input.V[6].O
[rslvr] z32cstr.wire: vdadd[7].OUT
[rslvr] z32cstr.wire: vdadd[3].A
[rslvr] z32cstr.wire: vdadd[8].OUT
[rslvr] z32cstr.wire: itov[4].X
[rslvr] z32cstr.wire: input.V[11].O
[rslvr] z32cstr.wire: input.V[2].O
[rslvr] z32cstr.wire: vdadd[9].OUT
[rslvr] z32cstr.wire: itov[2].Y
[rslvr] z32cstr.wire: input.V[10].O
[rslvr] z32cstr.wire: vdadd[9].D
[rslvr] z32cstr.wire: vgain[0].X
[rslvr] z32cstr.wire: vdadd[8].OUT_0
[rslvr] z32cstr.wire: input.V[9].O
[rslvr] z32cstr.wire: vdadd[1].B
[rslvr] z32cstr.wire: ihill_rep[11].Km
[rslvr] z32cstr.wire: input.I[10].O
[rslvr] z32cstr.wire: input.I[4].O
[rslvr] z32cstr.wire: output.V[4].X
[rslvr] z32cstr.wire: ihill_rep[10].S
[rslvr] z32cstr.wire: input.I[13].O
[rslvr] z32cstr.wire: output.V[5].X
[rslvr] z32cstr.wire: input.V[1].O
[rslvr] z32cstr.wire: input.V[8].O
[rslvr] z32cstr.wire: vdadd[3].OUT
[rslvr] z32cstr.wire: vdadd[9].OUT_0
[rslvr] z32cstr.wire: input.V[7].O
[rslvr] z32cstr.wire: vdadd[5].D
[rslvr] z32cstr.wire: itov[4].Y
[rslvr] z32cstr.wire: input.V[15].O
[rslvr] z32cstr.wire: input.I[7].O
[rslvr] z32cstr.wire: input.V[13].O
[rslvr] z32cstr.wire: vdadd[3].OUT_0
[rslvr] z32cstr.wire: vdadd[9].A
[rslvr] z32cstr.wire: vdadd[1].D
[rslvr] z32cstr.wire: ihill_rep[11].Vmax
[rslvr] z32cstr.wire: input.V[0].O
[rslvr] z32cstr.wire: ihill_rep[10].Vmax
[rslvr] z32cstr.wire: ihill_rep[6].n
[rslvr] z32cstr.wire: ihill_rep[6].S
[rslvr] z32cstr.wire: ihill_rep[11].REP
[rslvr] z32cstr.wire: vdadd[1].OUT
[rslvr] z32cstr.wire: vdadd[7].B
[rslvr] z32cstr.wire: input.I[0].O
[rslvr] z32cstr.wire: input.I[3].O
[rslvr] z32cstr.wire: vdadd[5].OUT_0
[rslvr] z32cstr.wire: vdadd[7].A
[rslvr] z32cstr.wire: ihill_rep[10].Km
[rslvr] z32cstr.wire: vgain[0].P
[rslvr] z32cstr.wire: itov[2].K
[rslvr] z32cstr.wire: ihill_rep[10].n
[rslvr] z32cstr.wire: ihill_rep[6].Vmax
[rslvr] z32cstr.wire: vdadd[5].A
[rslvr] z32cstr.wire: input.V[5].O
[rslvr] z32cstr.wire: input.I[5].O
[rslvr] z32cstr.wire: ihill_rep[6].Km
[rslvr] z32cstr.wire: vdadd[5].B
[rslvr] z32cstr.wire: ihill_rep[6].REP
[rslvr] z32cstr.wire: input.V[3].O
[rslvr] z32cstr.wire: vgain[0].Z
->input.I[3]
->input.I[4]
->itov[4]
->vdadd[9]
->input.I[8]
->output.V[3]
->input.V[4]
->input.I[5]
->input.V[10]
->ihill_rep[11]
->input.V[6]
->input.V[15]
->ihill_rep[6]
->vdadd[8]
->input.I[1]
->vdadd[5]
->vdadd[1]
->input.I[2]
->input.I[7]
->input.V[2]
->vdadd[7]
->output.V[0]
->output.V[5]
->vdadd[3]
->input.I[12]
->vgain[0]
->output.V[4]
->input.V[1]
->input.I[10]
->input.I[9]
->input.V[5]
->input.V[12]
->input.V[9]
->output.V[1]
->input.V[3]
->input.V[8]
->input.I[6]
->input.V[13]
->input.I[11]
->input.V[7]
->itov[2]
->input.I[0]
->input.V[14]
->output.V[2]
->input.I[13]
->input.V[0]
->input.V[11]
->ihill_rep[10]
=== Proc Insts ===
=== Construct Initial Mappings from Partition ===
-> setting deriv
-> setting deriv
===Constructing Abs Var Contraints (102) ===
=== Constructing Global Constraints ===
== Adding Global Variables ==[!] << SOLVER # VARS = 5
[[Z3]] ---> Executing SMT Solver prob=80

[WARN][to_mat_file] cannot generate mapped simulink file
[WARN][to_mat_file] cannot emit code
[WARN][to_mat_file] cannot generate mapped simulink file
[WARN][to_mat_file] cannot emit code
===== Mapping Step Finished ======
[multi] # Found 3, Required: 1
[multi] [DONE] found enough solutions
[multi] ===== Getting Solutions =====
[multi] Number of Solutions: 3
[multi] => Global Solution: LacLm~35LacLp~117TRLacL~83TRTetR~83TRclp~83TetRm~37TetRp~51clm~40clp~117 :: 3
[multi] => Global Solution: LacLm~35LacLp~117TRLacL~83TRTetR~83TRclp~83TetRm~40TetRp~51clm~40clp~117 :: 3
[multi] => Global Solution: LacLm~35LacLp~117TRLacL~83TRTetR~83TRclp~83TetRm~35TetRp~51clm~40clp~117 :: 3
